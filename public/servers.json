[
  {
    "id": "everything:82c71f2c",
    "icon": null,
    "name": "Everything",
    "description": "Reference / test server with prompts, resources, and tools.",
    "repository": {
      "url": "https://github.com/modelcontextprotocol/servers/tree/main/src/everything",
      "source": "github",
      "stars": 64561,
      "lastUpdated": "2025-08-17T02:22:03Z"
    },
    "tags": [
      "reference"
    ],
    "serverName": "everything",
    "serverConfig": {
      "type": "stdio",
      "command": "npx",
      "args": [
        "-y",
        "@modelcontextprotocol/server-everything"
      ]
    }
  },
  {
    "id": "fetch:95ec80cc",
    "icon": null,
    "name": "Fetch",
    "description": "Web content fetching and conversion for efficient LLM usage.",
    "repository": {
      "url": "https://github.com/modelcontextprotocol/servers/tree/main/src/fetch",
      "source": "github",
      "stars": 64561,
      "lastUpdated": "2025-08-17T02:22:03Z"
    },
    "tags": [
      "reference"
    ],
    "serverName": "fetch",
    "serverConfig": {
      "type": "stdio",
      "command": "uvx",
      "args": [
        "mcp-server-fetch"
      ]
    }
  },
  {
    "id": "filesystem:df30a77e",
    "icon": null,
    "name": "Filesystem",
    "description": "Secure file operations with configurable access controls.",
    "repository": {
      "url": "https://github.com/modelcontextprotocol/servers/tree/main/src/filesystem",
      "source": "github",
      "stars": 64561,
      "lastUpdated": "2025-08-17T02:22:03Z"
    },
    "tags": [
      "reference"
    ],
    "serverName": "filesystem",
    "serverConfig": {
      "type": "stdio",
      "command": "npx",
      "args": [
        "-y",
        "@modelcontextprotocol/server-filesystem",
        "/Users/username/Desktop",
        "/path/to/other/allowed/dir"
      ]
    }
  },
  {
    "id": "git:0bebff41",
    "icon": null,
    "name": "Git",
    "description": "Tools to read, search, and manipulate Git repositories.",
    "repository": {
      "url": "https://github.com/modelcontextprotocol/servers/tree/main/src/git",
      "source": "github",
      "stars": 64561,
      "lastUpdated": "2025-08-17T02:22:03Z"
    },
    "tags": [
      "reference"
    ],
    "serverName": "git",
    "serverConfig": {
      "type": "stdio",
      "command": "uvx",
      "args": [
        "mcp-server-git",
        "--repository",
        "path/to/git/repo"
      ]
    }
  },
  {
    "id": "memory:1e295915",
    "icon": null,
    "name": "Memory",
    "description": "Knowledge graph-based persistent memory system.",
    "repository": {
      "url": "https://github.com/modelcontextprotocol/servers/tree/main/src/memory",
      "source": "github",
      "stars": 64561,
      "lastUpdated": "2025-08-17T02:22:03Z"
    },
    "tags": [
      "reference"
    ],
    "serverName": "memory",
    "serverConfig": {
      "type": "stdio",
      "command": "npx",
      "args": [
        "-y",
        "@modelcontextprotocol/server-memory"
      ]
    }
  },
  {
    "id": "sequential-thinking:513c1a75",
    "icon": null,
    "name": "Sequential Thinking",
    "description": "Dynamic and reflective problem-solving through thought sequences.",
    "repository": {
      "url": "https://github.com/modelcontextprotocol/servers/tree/main/src/sequentialthinking",
      "source": "github",
      "stars": 64561,
      "lastUpdated": "2025-08-17T02:22:03Z"
    },
    "tags": [
      "reference"
    ],
    "serverName": "sequential-thinking",
    "serverConfig": {
      "type": "stdio",
      "command": "npx",
      "args": [
        "-y",
        "@modelcontextprotocol/server-sequential-thinking"
      ]
    }
  },
  {
    "id": "time:977a776a",
    "icon": null,
    "name": "Time",
    "description": "Time and timezone conversion capabilities.",
    "repository": {
      "url": "https://github.com/modelcontextprotocol/servers/tree/main/src/time",
      "source": "github",
      "stars": 64561,
      "lastUpdated": "2025-08-17T02:22:03Z"
    },
    "tags": [
      "reference"
    ],
    "serverName": "time",
    "serverConfig": {
      "type": "stdio",
      "command": "uvx",
      "args": [
        "mcp-server-time"
      ]
    }
  },
  {
    "id": "aws-kb-retrieval:19871b9d",
    "icon": null,
    "name": "AWS KB Retrieval",
    "description": "Retrieval from AWS Knowledge Base using Bedrock Agent Runtime.",
    "repository": {
      "url": "https://github.com/modelcontextprotocol/servers-archived/tree/main/src/aws-kb-retrieval-server",
      "source": "github",
      "stars": 134,
      "lastUpdated": "2025-08-16T02:27:01Z"
    },
    "tags": [
      "reference",
      "archived"
    ],
    "serverName": "aws-kb-retrieval",
    "serverConfig": {
      "type": "stdio",
      "command": "npx",
      "args": [
        "-y",
        "@modelcontextprotocol/server-aws-kb-retrieval"
      ],
      "env": {
        "AWS_ACCESS_KEY_ID": "YOUR_ACCESS_KEY_HERE",
        "AWS_SECRET_ACCESS_KEY": "YOUR_SECRET_ACCESS_KEY_HERE",
        "AWS_REGION": "YOUR_AWS_REGION_HERE"
      }
    }
  },
  {
    "id": "brave-search:0eac6d4e",
    "icon": null,
    "name": "Brave Search",
    "description": "Web and local search using Brave's Search API.  Has been replaced by the official server.",
    "repository": {
      "url": "https://github.com/modelcontextprotocol/servers-archived/tree/main/src/brave-search",
      "source": "github",
      "stars": 134,
      "lastUpdated": "2025-08-16T02:27:01Z"
    },
    "tags": [
      "reference",
      "archived"
    ],
    "serverName": "brave-search",
    "serverConfig": {
      "type": "stdio",
      "command": "npx",
      "args": [
        "-y",
        "@modelcontextprotocol/server-brave-search"
      ],
      "env": {
        "BRAVE_API_KEY": "YOUR_API_KEY_HERE"
      }
    }
  },
  {
    "id": "everart:e895bbfa",
    "icon": null,
    "name": "EverArt",
    "description": "AI image generation using various models.",
    "repository": {
      "url": "https://github.com/modelcontextprotocol/servers-archived/tree/main/src/everart",
      "source": "github",
      "stars": 134,
      "lastUpdated": "2025-08-16T02:27:01Z"
    },
    "tags": [
      "reference",
      "archived"
    ],
    "serverName": "everart",
    "serverConfig": {
      "type": "stdio",
      "command": "npx",
      "args": [
        "-y",
        "@modelcontextprotocol/server-everart"
      ],
      "env": {
        "EVERART_API_KEY": "your_key_here"
      }
    }
  },
  {
    "id": "github:946d5b7d",
    "icon": null,
    "name": "GitHub",
    "description": "Repository management, file operations, and GitHub API integration.",
    "repository": {
      "url": "https://github.com/modelcontextprotocol/servers-archived/tree/main/src/github",
      "source": "github",
      "stars": 134,
      "lastUpdated": "2025-08-16T02:27:01Z"
    },
    "tags": [
      "reference",
      "archived"
    ],
    "serverName": "github",
    "serverConfig": {
      "type": "stdio",
      "command": "npx",
      "args": [
        "-y",
        "@modelcontextprotocol/server-github"
      ],
      "env": {
        "GITHUB_PERSONAL_ACCESS_TOKEN": "<YOUR_TOKEN>"
      }
    }
  },
  {
    "id": "gitlab:9365302a",
    "icon": null,
    "name": "GitLab",
    "description": "GitLab API, enabling project management.",
    "repository": {
      "url": "https://github.com/modelcontextprotocol/servers-archived/tree/main/src/gitlab",
      "source": "github",
      "stars": 134,
      "lastUpdated": "2025-08-16T02:27:01Z"
    },
    "tags": [
      "reference",
      "archived"
    ],
    "serverName": "gitlab",
    "serverConfig": {
      "type": "stdio",
      "command": "npx",
      "args": [
        "-y",
        "@modelcontextprotocol/server-gitlab"
      ],
      "env": {
        "GITLAB_PERSONAL_ACCESS_TOKEN": "<YOUR_TOKEN>",
        "GITLAB_API_URL": "https://gitlab.com/api/v4"
      }
    }
  },
  {
    "id": "google-drive:68ce1614",
    "icon": null,
    "name": "Google Drive",
    "description": "File access and search capabilities for Google Drive.",
    "repository": {
      "url": "https://github.com/modelcontextprotocol/servers-archived/tree/main/src/gdrive",
      "source": "github",
      "stars": 134,
      "lastUpdated": "2025-08-16T02:27:01Z"
    },
    "tags": [
      "reference",
      "archived"
    ],
    "serverName": "google-drive",
    "serverConfig": {
      "type": "stdio",
      "command": "npx",
      "args": [
        "-y",
        "@modelcontextprotocol/server-gdrive"
      ],
      "env": {
        "GDRIVE_CREDENTIALS_PATH": "/path/to/.gdrive-server-credentials.json"
      }
    }
  },
  {
    "id": "google-maps:c476ca85",
    "icon": null,
    "name": "Google Maps",
    "description": "Location services, directions, and place details.",
    "repository": {
      "url": "https://github.com/modelcontextprotocol/servers-archived/tree/main/src/google-maps",
      "source": "github",
      "stars": 134,
      "lastUpdated": "2025-08-16T02:27:01Z"
    },
    "tags": [
      "reference",
      "archived"
    ],
    "serverName": "google-maps",
    "serverConfig": {
      "type": "stdio",
      "command": "npx",
      "args": [
        "-y",
        "@modelcontextprotocol/server-google-maps"
      ],
      "env": {
        "GOOGLE_MAPS_API_KEY": "<YOUR_API_KEY>"
      }
    }
  },
  {
    "id": "postgresql:eb072999",
    "icon": null,
    "name": "PostgreSQL",
    "description": "Read-only database access with schema inspection.",
    "repository": {
      "url": "https://github.com/modelcontextprotocol/servers-archived/tree/main/src/postgres",
      "source": "github",
      "stars": 134,
      "lastUpdated": "2025-08-16T02:27:01Z"
    },
    "tags": [
      "reference",
      "archived"
    ],
    "serverName": "postgresql",
    "serverConfig": {
      "type": "stdio",
      "command": "npx",
      "args": [
        "-y",
        "@modelcontextprotocol/server-postgres",
        "postgresql://localhost/mydb"
      ]
    }
  },
  {
    "id": "puppeteer:bae8ca98",
    "icon": null,
    "name": "Puppeteer",
    "description": "Browser automation and web scraping.",
    "repository": {
      "url": "https://github.com/modelcontextprotocol/servers-archived/tree/main/src/puppeteer",
      "source": "github",
      "stars": 134,
      "lastUpdated": "2025-08-16T02:27:01Z"
    },
    "tags": [
      "reference",
      "archived"
    ],
    "serverName": "puppeteer",
    "serverConfig": {
      "type": "stdio",
      "command": "npx",
      "args": [
        "-y",
        "@modelcontextprotocol/server-puppeteer"
      ]
    }
  },
  {
    "id": "redis:37b165aa",
    "icon": null,
    "name": "Redis",
    "description": "Interact with Redis key-value stores.",
    "repository": {
      "url": "https://github.com/modelcontextprotocol/servers-archived/tree/main/src/redis",
      "source": "github",
      "stars": 134,
      "lastUpdated": "2025-08-16T02:27:01Z"
    },
    "tags": [
      "reference",
      "archived"
    ],
    "serverName": "redis",
    "serverConfig": {
      "type": "stdio",
      "command": "npx",
      "args": [
        "-y",
        "@modelcontextprotocol/server-redis",
        "redis://localhost:6379"
      ]
    }
  },
  {
    "id": "sentry:b78c95ef",
    "icon": null,
    "name": "Sentry",
    "description": "Retrieving and analyzing issues from Sentry.io.",
    "repository": {
      "url": "https://github.com/modelcontextprotocol/servers-archived/tree/main/src/sentry",
      "source": "github",
      "stars": 134,
      "lastUpdated": "2025-08-16T02:27:01Z"
    },
    "tags": [
      "reference",
      "archived"
    ],
    "serverName": "sentry",
    "serverConfig": {
      "type": "stdio",
      "command": "uvx",
      "args": [
        "mcp-server-sentry",
        "--auth-token",
        "YOUR_SENTRY_TOKEN"
      ]
    }
  },
  {
    "id": "slack:1cb6b2d8",
    "icon": null,
    "name": "Slack",
    "description": "Channel management and messaging capabilities. Now maintained by Zencoder",
    "repository": {
      "url": "https://github.com/modelcontextprotocol/servers-archived/tree/main/src/slack",
      "source": "github",
      "stars": 134,
      "lastUpdated": "2025-08-16T02:27:01Z"
    },
    "tags": [
      "reference",
      "archived"
    ],
    "serverName": "slack",
    "serverConfig": {
      "type": "stdio",
      "command": "npx",
      "args": [
        "-y",
        "@modelcontextprotocol/server-slack"
      ],
      "env": {
        "SLACK_BOT_TOKEN": "xoxb-your-bot-token",
        "SLACK_TEAM_ID": "T01234567",
        "SLACK_CHANNEL_IDS": "C01234567, C76543210"
      }
    }
  },
  {
    "id": "sqlite:d190b596",
    "icon": null,
    "name": "SQLite",
    "description": "Database interaction and business intelligence capabilities.",
    "repository": {
      "url": "https://github.com/modelcontextprotocol/servers-archived/tree/main/src/sqlite",
      "source": "github",
      "stars": 134,
      "lastUpdated": "2025-08-16T02:27:01Z"
    },
    "tags": [
      "reference",
      "archived"
    ],
    "serverName": "sqlite",
    "serverConfig": {
      "type": "stdio",
      "command": "uvx",
      "args": [
        "mcp-server-sqlite",
        "--db-path",
        "/path/to/db.sqlite"
      ]
    }
  },
  {
    "id": "21st-dev-magic:25708987",
    "icon": "https://www.21st.dev/favicon.ico",
    "name": "21st.dev Magic",
    "description": "Create crafted UI components inspired by the best 21st.dev design engineers.",
    "repository": {
      "url": "https://github.com/21st-dev/magic-mcp",
      "source": "github",
      "stars": 3359,
      "lastUpdated": "2025-08-16T23:36:01Z"
    },
    "tags": [
      "official"
    ],
    "serverName": "21st-dev-magic",
    "serverConfig": {
      "type": "stdio",
      "command": "npx",
      "args": [
        "-y",
        "@21st-dev/magic@latest",
        "API_KEY=\"your-api-key\""
      ]
    }
  },
  {
    "id": "actionkit-by-paragon:cb5bbd97",
    "icon": "https://framerusercontent.com/images/LpSK1tSZweomrAHOMAj9Gea96lA.svg",
    "name": "ActionKit by Paragon",
    "description": "Connect to 130+ SaaS integrations (e.g. Slack, Salesforce, Gmail) with Paragon’s ActionKit API.",
    "repository": {
      "url": "https://github.com/useparagon/paragon-mcp",
      "source": "github",
      "stars": 29,
      "lastUpdated": "2025-08-16T11:07:34Z"
    },
    "tags": [
      "official"
    ],
    "serverName": "actionkit-by-paragon",
    "serverConfig": {
      "type": "sse",
      "url": "http://localhost:3001/sse?user=[user-id]"
    }
  },
  {
    "id": "adfin:85930ade",
    "icon": "https://invoxx-public-bucket.s3.eu-central-1.amazonaws.com/frontend-resources/adfin-logo-small.svg",
    "name": "Adfin",
    "description": "The only platform you need to get paid - all payments in one place, invoicing and accounting reconciliations with Adfin.",
    "repository": {
      "url": "https://github.com/Adfin-Engineering/mcp-server-adfin",
      "source": "github",
      "stars": 7,
      "lastUpdated": "2025-07-11T02:32:54Z"
    },
    "tags": [
      "official"
    ],
    "serverName": "adfin",
    "serverConfig": {
      "type": "stdio",
      "command": "<home_path>/.local/bin/uv",
      "args": [
        "--directory",
        "<absolute_path_to_adfin_mcp_folder>",
        "run",
        "main_adfin_mcp.py"
      ],
      "env": {
        "ADFIN_EMAIL": "<email>",
        "ADFIN_PASSWORD": "<password>"
      }
    }
  },
  {
    "id": "agentops:2259da0b",
    "icon": "https://github.com/AgentOps-AI/agentops/blob/main/docs/favicon.png",
    "name": "AgentOps",
    "description": "Provide observability and tracing for debugging AI agents with AgentOps API.",
    "repository": {
      "url": "https://github.com/AgentOps-AI/agentops-mcp",
      "source": "github",
      "stars": 4,
      "lastUpdated": "2025-07-18T23:27:37Z"
    },
    "tags": [
      "official"
    ],
    "serverName": "agentops",
    "serverConfig": {
      "type": "stdio",
      "command": "npx",
      "args": [
        "agentops-mcp"
      ],
      "env": {
        "AGENTOPS_API_KEY": ""
      }
    }
  },
  {
    "id": "agentql:bdfc4aff",
    "icon": "https://www.agentql.com/favicon/favicon.png",
    "name": "AgentQL",
    "description": "Enable AI agents to get structured data from unstructured web with AgentQL.",
    "repository": {
      "url": "https://github.com/tinyfish-io/agentql-mcp",
      "source": "github",
      "stars": 100,
      "lastUpdated": "2025-08-17T00:07:46Z"
    },
    "tags": [
      "official"
    ],
    "serverName": "agentql",
    "serverConfig": {
      "type": "stdio",
      "command": "npx",
      "args": [
        "-y",
        "agentql-mcp"
      ],
      "env": {
        "AGENTQL_API_KEY": "YOUR_API_KEY"
      }
    }
  },
  {
    "id": "agentrpc:2f582bf2",
    "icon": "https://agentrpc.com/favicon.ico",
    "name": "AgentRPC",
    "description": "Connect to any function, any language, across network boundaries using AgentRPC.",
    "repository": {
      "url": "https://github.com/agentrpc/agentrpc",
      "source": "github",
      "stars": 116,
      "lastUpdated": "2025-08-16T08:43:46Z"
    },
    "tags": [
      "official"
    ],
    "serverName": "agentrpc",
    "serverConfig": {
      "type": "stdio",
      "command": "npx",
      "args": [
        "-y",
        "agentrpc",
        "mcp"
      ],
      "env": {
        "AGENTRPC_API_SECRET": "<YOUR_API_SECRET>"
      }
    }
  },
  {
    "id": "agentset:d8c21d4d",
    "icon": null,
    "name": "Agentset",
    "description": "RAG for your knowledge base connected to Agentset.",
    "repository": {
      "url": "https://github.com/agentset-ai/mcp-server",
      "source": "github",
      "stars": 13,
      "lastUpdated": "2025-08-15T14:35:38Z"
    },
    "tags": [
      "official"
    ],
    "serverName": "agentset",
    "serverConfig": {
      "type": "stdio",
      "command": "npx",
      "args": [
        "-y",
        "@agentset/mcp@latest"
      ],
      "env": {
        "AGENTSET_API_KEY": "agentset_xxx",
        "AGENTSET_NAMESPACE_ID": "ns_xxx"
      }
    }
  },
  {
    "id": "aiven:b824dd98",
    "icon": "https://aiven.io/favicon.ico",
    "name": "Aiven",
    "description": "Navigate your Aiven projects and interact with the PostgreSQL®, Apache Kafka®, ClickHouse® and OpenSearch® services",
    "repository": {
      "url": "https://github.com/Aiven-Open/mcp-aiven",
      "source": "github",
      "stars": 8,
      "lastUpdated": "2025-07-30T04:38:56Z"
    },
    "tags": [
      "official"
    ],
    "serverName": "aiven",
    "serverConfig": {
      "type": "stdio",
      "command": "uv",
      "args": [
        "--directory",
        "$REPOSITORY_DIRECTORY",
        "run",
        "--with-editable",
        "$REPOSITORY_DIRECTORY",
        "--python",
        "3.13",
        "mcp-aiven"
      ],
      "env": {
        "AIVEN_BASE_URL": "https://api.aiven.io",
        "AIVEN_TOKEN": "$AIVEN_TOKEN"
      }
    }
  },
  {
    "id": "alation:8d86f22c",
    "icon": "https://www.alation.com/resource-center/download/7p3vnbbznfiw/34FMtBTex5ppvs2hNYa9Fc/c877c37e88e5339878658697c46d2d58/Alation-Logo-Bug-Primary.svg",
    "name": "Alation",
    "description": "Unlock the power of the enterprise Data Catalog by harnessing tools provided by the Alation MCP server.",
    "repository": {
      "url": "https://github.com/Alation/alation-ai-agent-sdk",
      "source": "github",
      "stars": 9,
      "lastUpdated": "2025-08-15T19:43:18Z"
    },
    "tags": [
      "official"
    ]
  },
  {
    "id": "alby-bitcoin-payments:bd958e06",
    "icon": "https://i.postimg.cc/5NYw9qjS/alby-icon-head-yellow-500x500.png",
    "name": "Alby Bitcoin Payments",
    "description": "Connect any bitcoin lightning wallet to your agent to send and receive instant payments globally with your agent.",
    "repository": {
      "url": "https://github.com/getAlby/mcp",
      "source": "github",
      "stars": 27,
      "lastUpdated": "2025-08-14T07:25:25Z"
    },
    "tags": [
      "official"
    ],
    "serverName": "alby-bitcoin-payments",
    "serverConfig": {
      "type": "stdio",
      "command": "npx",
      "args": [
        "-y",
        "@getalby/mcp"
      ],
      "env": {
        "NWC_CONNECTION_STRING": "YOUR NWC CONNECTION STRING HERE"
      }
    }
  },
  {
    "id": "algolia:16c22851",
    "icon": null,
    "name": "Algolia",
    "description": "Use AI agents to provision, configure, and query your Algolia search indices.",
    "repository": {
      "url": "https://github.com/algolia/mcp",
      "source": "github",
      "stars": 23,
      "lastUpdated": "2025-07-27T18:10:56Z"
    },
    "tags": [
      "official"
    ],
    "serverName": "algolia",
    "serverConfig": {
      "type": "stdio",
      "command": "/path/to/the/repo/cmd/mcp/mcp",
      "env": {
        "ALGOLIA_APP_ID": "<APP_ID>",
        "ALGOLIA_INDEX_NAME": "<INDEX_NAME>",
        "ALGOLIA_API_KEY": "<API_KEY>",
        "ALGOLIA_WRITE_API_KEY": "<ADMIN_API_KEY>",
        "MCP_ENABLED_TOOLS": "",
        "MCP_SERVER_TYPE": "stdio",
        "MCP_SSE_PORT": "8080"
      }
    }
  },
  {
    "id": "alibaba-cloud-analyticdb-for-mysql:ad45254a",
    "icon": "https://img.alicdn.com/imgextra/i4/O1CN01epkXwH1WLAXkZfV6N_!!6000000002771-2-tps-200-200.png",
    "name": "Alibaba Cloud AnalyticDB for MySQL",
    "description": "Connect to an AnalyticDB for MySQL cluster for getting database or table metadata, querying and analyzing data. It will be supported to add the OpenAPI for cluster operation in the future.",
    "repository": {
      "url": "https://github.com/aliyun/alibabacloud-adb-mysql-mcp-server",
      "source": "github",
      "stars": 15,
      "lastUpdated": "2025-08-12T13:05:28Z"
    },
    "tags": [
      "official"
    ],
    "serverName": "alibaba-cloud-analyticdb-for-mysql",
    "serverConfig": {
      "type": "stdio",
      "command": "uv",
      "args": [
        "--directory",
        "/path/to/alibabacloud-adb-mysql-mcp-server",
        "run",
        "adb-mysql-mcp-server"
      ],
      "env": {
        "ADB_MYSQL_HOST": "host",
        "ADB_MYSQL_PORT": "port",
        "ADB_MYSQL_USER": "database_user",
        "ADB_MYSQL_PASSWORD": "database_password",
        "ADB_MYSQL_DATABASE": "database"
      }
    }
  },
  {
    "id": "alibaba-cloud-analyticdb-for-postgresql:b988841b",
    "icon": "https://github.com/aliyun/alibabacloud-adbpg-mcp-server/blob/master/images/AnalyticDB.png",
    "name": "Alibaba Cloud AnalyticDB for PostgreSQL",
    "description": "An MCP server to connect to AnalyticDB for PostgreSQL instances, query and analyze data.",
    "repository": {
      "url": "https://github.com/aliyun/alibabacloud-adbpg-mcp-server",
      "source": "github",
      "stars": 9,
      "lastUpdated": "2025-08-13T07:51:53Z"
    },
    "tags": [
      "official"
    ],
    "serverName": "alibaba-cloud-analyticdb-for-postgresql",
    "serverConfig": {
      "type": "stdio",
      "command": "uvx",
      "args": [
        "adbpg_mcp_server"
      ],
      "env": {
        "ADBPG_HOST": "host",
        "ADBPG_PORT": "port",
        "ADBPG_USER": "username",
        "ADBPG_PASSWORD": "password",
        "ADBPG_DATABASE": "database",
        "GRAPHRAG_API_KEY": "graphrag api_key",
        "GRAPHRAG_BASE_URL": "graphrag base_url",
        "GRAPHRAG_LLM_MODEL": "graphrag model name",
        "GRAPHRAG_EMBEDDING_MODEL": "graphrag embedding model name",
        "GRAPHRAG_EMBEDDING_API_KEY": "graphrag embedding api key",
        "GRAPHRAG_EMBEDDING_BASE_URL": "graphrag embedding url",
        "LLMEMORY_API_KEY": "llm memory api_key",
        "LLMEMORY_BASE_URL": "llm memory base_url",
        "LLMEMORY_LLM_MODEL": "llm memory model name",
        "LLMEMORY_EMBEDDING_MODEL": "llm memory embedding model name"
      }
    }
  },
  {
    "id": "alibaba-cloud-dataworks:2096f6b9",
    "icon": "https://img.alicdn.com/imgextra/i3/O1CN0101UWWF1UYn3rAe3HU_!!6000000002530-2-tps-32-32.png",
    "name": "Alibaba Cloud DataWorks",
    "description": "A Model Context Protocol (MCP) server that provides tools for AI, allowing it to interact with the DataWorks Open API through a standardized interface. This implementation is based on the Alibaba Cloud Open API and enables AI agents to perform cloud resources operations seamlessly.",
    "repository": {
      "url": "https://github.com/aliyun/alibabacloud-dataworks-mcp-server",
      "source": "github",
      "stars": 21,
      "lastUpdated": "2025-08-04T18:20:06Z"
    },
    "tags": [
      "official"
    ],
    "serverName": "alibaba-cloud-dataworks",
    "serverConfig": {
      "type": "stdio",
      "command": "npx",
      "args": [
        "alibabacloud-dataworks-mcp-server"
      ],
      "env": {
        "REGION": "your_dataworks_open_api_region_id_here",
        "ALIBABA_CLOUD_ACCESS_KEY_ID": "your_alibaba_cloud_access_key_id",
        "ALIBABA_CLOUD_ACCESS_KEY_SECRET": "your_alibaba_cloud_access_key_secret",
        "TOOL_CATEGORIES": "optional_your_tool_categories_here_ex_UTILS",
        "TOOL_NAMES": "optional_your_tool_names_here_ex_ListProjects"
      }
    }
  },
  {
    "id": "alibaba-cloud-opensearch:93298fe4",
    "icon": "https://opensearch-shanghai.oss-cn-shanghai.aliyuncs.com/ouhuang/aliyun-icon.png",
    "name": "Alibaba Cloud OpenSearch",
    "description": "This MCP server equips AI Agents with tools to interact with OpenSearch through a standardized and extensible interface.",
    "repository": {
      "url": "https://github.com/aliyun/alibabacloud-opensearch-mcp-server",
      "source": "github",
      "stars": 5,
      "lastUpdated": "2025-08-01T06:41:36Z"
    },
    "tags": [
      "official"
    ]
  },
  {
    "id": "alibaba-cloud-ops:278acbe9",
    "icon": "https://github.com/aliyun/alibaba-cloud-ops-mcp-server/blob/master/image/alibaba-cloud.png",
    "name": "Alibaba Cloud OPS",
    "description": "Manage the lifecycle of your Alibaba Cloud resources with CloudOps Orchestration Service and Alibaba Cloud OpenAPI.",
    "repository": {
      "url": "https://github.com/aliyun/alibaba-cloud-ops-mcp-server",
      "source": "github",
      "stars": 69,
      "lastUpdated": "2025-08-12T09:04:16Z"
    },
    "tags": [
      "official"
    ],
    "serverName": "alibaba-cloud-ops",
    "serverConfig": {
      "type": "stdio",
      "command": "uvx",
      "args": [
        "alibaba-cloud-ops-mcp-server@latest"
      ],
      "env": {
        "ALIBABA_CLOUD_ACCESS_KEY_ID": "Your Access Key ID",
        "ALIBABA_CLOUD_ACCESS_KEY_SECRET": "Your Access Key SECRET"
      }
    }
  },
  {
    "id": "alibaba-cloud-rds:c652f7fd",
    "icon": "https://github.com/aliyun/alibabacloud-rds-openapi-mcp-server/blob/main/assets/alibabacloudrds.png",
    "name": "Alibaba Cloud RDS",
    "description": "An MCP server designed to interact with the Alibaba Cloud RDS OpenAPI, enabling programmatic management of RDS resources via an LLM.",
    "repository": {
      "url": "https://github.com/aliyun/alibabacloud-rds-openapi-mcp-server",
      "source": "github",
      "stars": 32,
      "lastUpdated": "2025-08-13T07:42:23Z"
    },
    "tags": [
      "official"
    ],
    "serverName": "alibaba-cloud-rds",
    "serverConfig": {
      "type": "stdio",
      "command": "uvx",
      "args": [
        "alibabacloud-rds-openapi-mcp-server@latest"
      ],
      "env": {
        "ALIBABA_CLOUD_ACCESS_KEY_ID": "$you_access_id",
        "ALIBABA_CLOUD_ACCESS_KEY_SECRET": "$you_access_key"
      }
    }
  },
  {
    "id": "alipayplus:7272a14d",
    "icon": "https://www.alipayplus.com/favicon.ico",
    "name": "AlipayPlus",
    "description": "Connect your AI Agents to AlipayPlus Checkout Payment.",
    "repository": {
      "url": "https://github.com/alipay/global-alipayplus-mcp",
      "source": "github",
      "stars": 3,
      "lastUpdated": "2025-08-13T05:07:16Z"
    },
    "tags": [
      "official"
    ],
    "serverName": "alipayplus",
    "serverConfig": {
      "type": "stdio",
      "command": "uvx",
      "args": [
        "ant-intl-alipayplus-mcp"
      ],
      "env": {
        "GATEWAY_URL": "https://open-sea-global.alipay.com",
        "CLIENT_ID": "your_client_id_here",
        "MERCHANT_PRIVATE_KEY": "your_merchant_private_key_here",
        "ALIPAY_PUBLIC_KEY": "your_alipay_public_key_here",
        "PAYMENT_NOTIFY_URL": "https://your-domain.com/payment/notify",
        "SETTLEMENT_CURRENCY": "USD",
        "MERCHANT_NAME": "Your Merchant Name",
        "MERCHANT_ID": "Your Merchant ID",
        "MERCHANT_MCC": "5411",
        "MERCHANT_REGION": "US"
      }
    }
  },
  {
    "id": "allvoicelab:6b235183",
    "icon": "https://cdn.allvoicelab.com/resources/workbench/dist/icon-dark.ico",
    "name": "AllVoiceLab",
    "description": "An AI voice toolkit with TTS, voice cloning, and video translation, now available as an MCP server for smarter agent integration.",
    "repository": {
      "url": "https://www.allvoicelab.com/mcp",
      "source": "other"
    },
    "tags": [
      "official"
    ]
  },
  {
    "id": "alpaca:6c630cf2",
    "icon": "https://files.alpaca.markets/webassets/favicon-32x32.png",
    "name": "Alpaca",
    "description": "",
    "repository": {
      "url": "https://github.com/alpacahq/alpaca-mcp-server",
      "source": "github",
      "stars": 219,
      "lastUpdated": "2025-08-17T01:16:02Z"
    },
    "tags": [
      "official"
    ],
    "serverName": "alpaca",
    "serverConfig": {
      "type": "streamable",
      "env": {
        "ALPACA_API_KEY": "your_alpaca_api_key_for_paper_account",
        "ALPACA_SECRET_KEY": "your_alpaca_secret_key_for_paper_account"
      },
      "url": "http://your-server-ip:8000/mcp"
    }
  },
  {
    "id": "alphavantage:186b2cf2",
    "icon": "https://www.alphavantage.co/logo.png/",
    "name": "AlphaVantage",
    "description": "Connect to 100+ APIs for financial market data, including stock prices, fundamentals, and more from AlphaVantage",
    "repository": {
      "url": "https://mcp.alphavantage.co/",
      "source": "other"
    },
    "tags": [
      "official"
    ]
  },
  {
    "id": "antom:3904c857",
    "icon": "https://www.antom.com/favicon.ico",
    "name": "Antom",
    "description": "Connect your AI Agents to Antom Checkout Payment.",
    "repository": {
      "url": "https://github.com/alipay/global-antom-mcp",
      "source": "github",
      "stars": 3,
      "lastUpdated": "2025-08-13T05:28:53Z"
    },
    "tags": [
      "official"
    ],
    "serverName": "antom",
    "serverConfig": {
      "type": "stdio",
      "command": "uvx",
      "args": [
        "ant-intl-antom-mcp"
      ],
      "env": {
        "GATEWAY_URL": "https://open-sea-global.alipay.com",
        "CLIENT_ID": "your_client_id_here",
        "MERCHANT_PRIVATE_KEY": "your_merchant_private_key_here",
        "ALIPAY_PUBLIC_KEY": "your_alipay_public_key_here",
        "PAYMENT_REDIRECT_URL": "/",
        "PAYMENT_NOTIFY_URL": "https://your-domain.com/payment/notify"
      }
    }
  },
  {
    "id": "anytype:71d4d44f",
    "icon": "https://developers.anytype.io/img/favicon.ico",
    "name": "Anytype",
    "description": "An MCP server enabling AI assistants to interact with Anytype - a local and collaborative wiki - to organize objects, lists, and more through natural language.",
    "repository": {
      "url": "https://github.com/anyproto/anytype-mcp",
      "source": "github",
      "stars": 126,
      "lastUpdated": "2025-08-17T00:42:40Z"
    },
    "tags": [
      "official"
    ],
    "serverName": "anytype",
    "serverConfig": {
      "type": "stdio",
      "command": "npx",
      "args": [
        "-y",
        "@anyproto/anytype-mcp"
      ],
      "env": {
        "OPENAPI_MCP_HEADERS": "{\"Authorization\":\"Bearer <YOUR_API_KEY>\", \"Anytype-Version\":\"2025-05-20\"}"
      }
    }
  },
  {
    "id": "apache-doris:97a79348",
    "icon": "https://doris.apache.org/images/favicon.ico",
    "name": "Apache Doris",
    "description": "MCP Server For Apache Doris, an MPP-based real-time data warehouse.",
    "repository": {
      "url": "https://github.com/apache/doris-mcp-server",
      "source": "github",
      "stars": 172,
      "lastUpdated": "2025-08-15T08:32:17Z"
    },
    "tags": [
      "official"
    ],
    "serverName": "apache-doris",
    "serverConfig": {
      "type": "stdio",
      "command": "doris-mcp-server",
      "args": [
        "--transport",
        "stdio"
      ],
      "env": {
        "DORIS_HOST": "127.0.0.1",
        "DORIS_PORT": "9030",
        "DORIS_USER": "root",
        "DORIS_PASSWORD": "your_db_password"
      }
    }
  },
  {
    "id": "apache-iotdb:591e210d",
    "icon": "https://iotdb.apache.org/img/logo.svg",
    "name": "Apache IoTDB",
    "description": "MCP Server for Apache IoTDB database and its tools",
    "repository": {
      "url": "https://github.com/apache/iotdb-mcp-server",
      "source": "github",
      "stars": 27,
      "lastUpdated": "2025-08-01T08:54:42Z"
    },
    "tags": [
      "official"
    ],
    "serverName": "apache-iotdb",
    "serverConfig": {
      "type": "stdio",
      "command": "uv",
      "args": [
        "--directory",
        "/Users/your_username/iotdb-mcp-server/src/iotdb_mcp_server",
        "run",
        "server.py"
      ],
      "env": {
        "IOTDB_HOST": "127.0.0.1",
        "IOTDB_PORT": "6667",
        "IOTDB_USER": "root",
        "IOTDB_PASSWORD": "root",
        "IOTDB_DATABASE": "test",
        "IOTDB_SQL_DIALECT": "table",
        "IOTDB_EXPORT_PATH": "/path/to/export/folder"
      }
    }
  },
  {
    "id": "apache-pinot:b6af0fd3",
    "icon": null,
    "name": "Apache Pinot",
    "description": "",
    "repository": {
      "url": "https://github.com/startreedata/mcp-pinot",
      "source": "github",
      "stars": 10,
      "lastUpdated": "2025-07-16T18:27:14Z"
    },
    "tags": [
      "official"
    ],
    "serverName": "apache-pinot",
    "serverConfig": {
      "type": "stdio",
      "command": "/path/to/uv",
      "args": [
        "--directory",
        "/path/to/mcp-pinot-repo",
        "run",
        "mcp_pinot/server.py"
      ],
      "env": {}
    }
  },
  {
    "id": "apify:0d5c381b",
    "icon": "https://apify.com/favicon.ico",
    "name": "Apify",
    "description": "Actors MCP Server: Use 3,000+ pre-built cloud tools to extract data from websites, e-commerce, social media, search engines, maps, and more",
    "repository": {
      "url": "https://github.com/apify/actors-mcp-server",
      "source": "github",
      "stars": 330,
      "lastUpdated": "2025-08-16T16:11:28Z"
    },
    "tags": [
      "official"
    ]
  },
  {
    "id": "apimatic-mcp:7c98b5b8",
    "icon": "https://2052727.fs1.hubspotusercontent-na1.net/hubfs/2052727/cropped-cropped-apimaticio-favicon-1-32x32.png",
    "name": "APIMatic MCP",
    "description": "APIMatic MCP Server is used to validate OpenAPI specifications using APIMatic. The server processes OpenAPI files and returns validation summaries by leveraging APIMatic's API.",
    "repository": {
      "url": "https://github.com/apimatic/apimatic-validator-mcp",
      "source": "github",
      "stars": 5,
      "lastUpdated": "2025-08-17T01:32:37Z"
    },
    "tags": [
      "official"
    ],
    "serverName": "apimatic-mcp",
    "serverConfig": {
      "type": "stdio",
      "command": "node",
      "args": [
        "C:\\PATH\\TO\\PARENT\\FOLDER\\build\\index.js"
      ],
      "env": {
        "APIMATIC_API_KEY": "<Add your APIMatic token here>"
      }
    }
  },
  {
    "id": "apollo-mcp-server:0409bdae",
    "icon": "https://apollo-server-landing-page.cdn.apollographql.com/_latest/assets/favicon.png",
    "name": "Apollo MCP Server",
    "description": "Connect your GraphQL APIs to AI agents",
    "repository": {
      "url": "https://github.com/apollographql/apollo-mcp-server/",
      "source": "github",
      "stars": 175,
      "lastUpdated": "2025-08-16T10:47:56Z"
    },
    "tags": [
      "official"
    ]
  },
  {
    "id": "aqara-mcp-server:2cd01d80",
    "icon": "https://developer.aqara.com/favicon.ico",
    "name": "Aqara MCP Server",
    "description": "Control  Aqara smart home devices, query status, execute scenes, and much more using natural language.",
    "repository": {
      "url": "https://github.com/aqara/aqara-mcp-server/",
      "source": "github",
      "stars": 12,
      "lastUpdated": "2025-08-08T03:46:03Z"
    },
    "tags": [
      "official"
    ]
  },
  {
    "id": "archbee:fe7edf9f",
    "icon": "https://media.licdn.com/dms/image/v2/C4D0BAQEeD7Dxbpadkw/company-logo_200_200/company-logo_200_200/0/1644692667545/archbee_logo?e=2147483647&v=beta&t=lTi9GRIoqzG6jN3kJC26uZWh0q3uiQelsH6mGoq_Wfw",
    "name": "Archbee",
    "description": "Write and publish documentation that becomes the trusted source for instant answers with AI. Stop cobbling tools and use Archbee — the first complete documentation platform.",
    "repository": {
      "url": "https://www.npmjs.com/package/@archbee/mcp",
      "source": "other"
    },
    "tags": [
      "official"
    ]
  },
  {
    "id": "arize-phoenix:9614f9db",
    "icon": "https://phoenix.arize.com/wp-content/uploads/2023/04/cropped-Favicon-32x32.png",
    "name": "Arize Phoenix",
    "description": "Inspect traces, manage prompts, curate datasets, and run experiments using Arize Phoenix, an open-source AI and LLM observability tool.",
    "repository": {
      "url": "https://github.com/Arize-ai/phoenix/tree/main/js/packages/phoenix-mcp",
      "source": "github",
      "stars": 6671,
      "lastUpdated": "2025-08-17T01:40:00Z"
    },
    "tags": [
      "official"
    ],
    "serverName": "arize-phoenix",
    "serverConfig": {
      "type": "stdio",
      "command": "npx",
      "args": [
        "-y",
        "@arizeai/phoenix-mcp@latest",
        "--baseUrl",
        "https://my-phoenix.com",
        "--apiKey",
        "your-api-key"
      ]
    }
  },
  {
    "id": "armor-crypto-mcp:2101231e",
    "icon": "https://731523176-files.gitbook.io/~/files/v0/b/gitbook-x-prod.appspot.com/o/spaces%2FaVUBXRZbpAgtjYf5HsvO%2Fuploads%2FaRRrVVocXCTr6GkepfCx%2Flogo_color.svg?alt=media&token=3ba24089-0ab2-421f-a9d9-41f2f94f954a",
    "name": "Armor Crypto MCP",
    "description": "MCP to interface with multiple blockchains, staking, DeFi, swap, bridging, wallet management, DCA, Limit Orders, Coin Lookup, Tracking and more.",
    "repository": {
      "url": "https://github.com/armorwallet/armor-crypto-mcp",
      "source": "github",
      "stars": 209,
      "lastUpdated": "2025-08-16T16:58:30Z"
    },
    "tags": [
      "official"
    ],
    "serverName": "armor-crypto-mcp",
    "serverConfig": {
      "type": "stdio",
      "command": "uvx",
      "args": [
        "armor-crypto-mcp@latest",
        "--version"
      ],
      "env": {
        "ARMOR_API_KEY": "<PUT-YOUR-KEY-HERE>"
      }
    }
  },
  {
    "id": "asgardeo:0caea509",
    "icon": "https://console.asgardeo.io/app/libs/themes/wso2is/assets/images/branding/favicon.ico",
    "name": "Asgardeo",
    "description": "MCP server to interact with your Asgardeo organization through LLM tools.",
    "repository": {
      "url": "https://github.com/asgardeo/asgardeo-mcp-server",
      "source": "github",
      "stars": 3,
      "lastUpdated": "2025-08-12T10:53:27Z"
    },
    "tags": [
      "official"
    ]
  },
  {
    "id": "astra-db:8f947b66",
    "icon": "https://www.datastax.com/favicon-32x32.png",
    "name": "Astra DB",
    "description": "Comprehensive tools for managing collections and documents in a DataStax Astra DB NoSQL database with a full range of operations such as create, update, delete, find, and associated bulk actions.",
    "repository": {
      "url": "https://github.com/datastax/astra-db-mcp",
      "source": "github",
      "stars": 28,
      "lastUpdated": "2025-07-24T22:45:27Z"
    },
    "tags": [
      "official"
    ],
    "serverName": "astra-db",
    "serverConfig": {
      "type": "stdio",
      "command": "npx",
      "args": [
        "-y",
        "@datastax/astra-db-mcp"
      ],
      "env": {
        "ASTRA_DB_APPLICATION_TOKEN": "your_astra_db_token",
        "ASTRA_DB_API_ENDPOINT": "your_astra_db_endpoint"
      }
    }
  },
  {
    "id": "atla:d84a85a4",
    "icon": "https://cdn.prod.website-files.com/66598898fd13d51606c3215d/66ccbfef13bd8bc19d587578_favicon-32x32.png",
    "name": "Atla",
    "description": "Enable AI agents to interact with the Atla API for state-of-the-art LLMJ evaluation.",
    "repository": {
      "url": "https://github.com/atla-ai/atla-mcp-server",
      "source": "github",
      "stars": 16,
      "lastUpdated": "2025-07-21T08:42:32Z"
    },
    "tags": [
      "official"
    ],
    "serverName": "atla",
    "serverConfig": {
      "type": "stdio",
      "command": "uvx",
      "args": [
        "atla-mcp-server"
      ],
      "env": {
        "ATLA_API_KEY": "<your-atla-api-key>"
      }
    }
  },
  {
    "id": "atlan:49207a40",
    "icon": "https://assets.atlan.com/assets/atlan-a-logo-blue-background.png",
    "name": "Atlan",
    "description": "The Atlan Model Context Protocol server allows you to interact with the Atlan services through multiple tools.",
    "repository": {
      "url": "https://github.com/atlanhq/agent-toolkit/tree/main/modelcontextprotocol",
      "source": "github",
      "stars": 21,
      "lastUpdated": "2025-08-14T03:50:40Z"
    },
    "tags": [
      "official"
    ],
    "serverName": "atlan",
    "serverConfig": {
      "type": "stdio",
      "command": "uvx",
      "args": [
        "atlan-mcp-server"
      ],
      "env": {
        "ATLAN_API_KEY": "<YOUR_API_KEY>",
        "ATLAN_BASE_URL": "https://<YOUR_INSTANCE>.atlan.com",
        "ATLAN_AGENT_ID": "<YOUR_AGENT_ID>"
      }
    }
  },
  {
    "id": "atlassian:8d6f5f31",
    "icon": "https://www.atlassian.com/favicon.ico",
    "name": "Atlassian",
    "description": "Securely interact with Jira work items and Confluence pages, and search across both.",
    "repository": {
      "url": "https://www.atlassian.com/platform/remote-mcp-server",
      "source": "other"
    },
    "tags": [
      "official"
    ]
  },
  {
    "id": "atomgit:3e1fc2a1",
    "icon": "https://res.oafimg.cn/-/737b3b3ffed9b19e/logo.png",
    "name": "AtomGit",
    "description": "Official AtomGit server for integration with repository management, PRs, issues, branches, labels, and more.",
    "repository": {
      "url": "https://atomgit.com/atomgit-open-source-ecosystem/atomgit-mcp-server",
      "source": "other"
    },
    "tags": [
      "official"
    ]
  },
  {
    "id": "audiense-insights:6134e6fd",
    "icon": "https://resources.audiense.com/hubfs/favicon-1.png",
    "name": "Audiense Insights",
    "description": "Marketing insights and audience analysis from Audiense reports, covering demographic, cultural, influencer, and content engagement analysis.",
    "repository": {
      "url": "https://github.com/AudienseCo/mcp-audiense-insights",
      "source": "github",
      "stars": 16,
      "lastUpdated": "2025-08-11T12:02:35Z"
    },
    "tags": [
      "official"
    ]
  },
  {
    "id": "auth0:ed7ea273",
    "icon": "https://cdn.auth0.com/website/website/favicons/auth0-favicon.svg",
    "name": "Auth0",
    "description": "MCP server for interacting with your Auth0 tenant, supporting creating and modifying actions, applications, forms, logs, resource servers, and more.",
    "repository": {
      "url": "https://github.com/auth0/auth0-mcp-server",
      "source": "github",
      "stars": 72,
      "lastUpdated": "2025-08-14T13:00:34Z"
    },
    "tags": [
      "official"
    ],
    "serverName": "auth0",
    "serverConfig": {
      "type": "stdio",
      "command": "npx",
      "args": [
        "-y",
        "@auth0/auth0-mcp-server",
        "run"
      ],
      "env": {
        "DEBUG": "auth0-mcp"
      }
    }
  },
  {
    "id": "authenticator-app-2fa:2b6f6f0b",
    "icon": "https://firstorder.ai/favicon_auth.ico",
    "name": "Authenticator App · 2FA",
    "description": "A secure MCP (Model Context Protocol) server that enables AI agents to interact with the Authenticator App.",
    "repository": {
      "url": "https://github.com/firstorderai/authenticator_mcp",
      "source": "github",
      "stars": 20,
      "lastUpdated": "2025-08-15T01:46:21Z"
    },
    "tags": [
      "official"
    ],
    "serverName": "authenticator-app-2fa",
    "serverConfig": {
      "type": "stdio",
      "command": "npx",
      "args": [
        "-y",
        "authenticator-mcp",
        "--access-token=YOUR-KEY"
      ]
    }
  },
  {
    "id": "aws:56cb969b",
    "icon": "https://a0.awsstatic.com/libra-css/images/site/fav/favicon.ico",
    "name": "AWS",
    "description": "Specialized MCP servers that bring AWS best practices directly to your development workflow.",
    "repository": {
      "url": "https://github.com/awslabs/mcp",
      "source": "github",
      "stars": 5384,
      "lastUpdated": "2025-08-16T22:35:57Z"
    },
    "tags": [
      "official"
    ],
    "serverName": "aws",
    "serverConfig": {
      "type": "stdio",
      "command": "uvx",
      "args": [
        "awslabs.core-mcp-server@latest"
      ],
      "env": {
        "FASTMCP_LOG_LEVEL": "ERROR"
      }
    }
  },
  {
    "id": "axiom:d339d095",
    "icon": "https://axiom.co/favicon.ico",
    "name": "Axiom",
    "description": "Query and analyze your Axiom logs, traces, and all other event data in natural language",
    "repository": {
      "url": "https://github.com/axiomhq/mcp-server-axiom",
      "source": "github",
      "stars": 54,
      "lastUpdated": "2025-08-13T12:30:44Z"
    },
    "tags": [
      "official"
    ],
    "serverName": "axiom",
    "serverConfig": {
      "type": "stdio",
      "command": "/path/to/your/axiom-mcp-binary",
      "args": [
        "--config",
        "/path/to/your/config.txt"
      ],
      "env": {
        "AXIOM_TOKEN": "xaat-your-api-token",
        "AXIOM_URL": "https://api.axiom.co"
      }
    }
  },
  {
    "id": "azure:d1f2bbaf",
    "icon": "https://cdn-dynmedia-1.microsoft.com/is/content/microsoftcorp/acom_social_icon_azure",
    "name": "Azure",
    "description": "The Azure MCP Server gives MCP Clients access to key Azure services and tools like Azure Storage, Cosmos DB, the Azure CLI, and more.",
    "repository": {
      "url": "https://github.com/Azure/azure-mcp",
      "source": "github",
      "stars": 1089,
      "lastUpdated": "2025-08-16T21:10:45Z"
    },
    "tags": [
      "official"
    ]
  },
  {
    "id": "azure-devops:d5cb09fc",
    "icon": "https://cdn-dynmedia-1.microsoft.com/is/content/microsoftcorp/1062064-Products-1.2-24x24",
    "name": "Azure DevOps",
    "description": "Interact with Azure DevOps services like repositories, work items, builds, releases, test plans, and code search.",
    "repository": {
      "url": "https://github.com/microsoft/azure-devops-mcp",
      "source": "github",
      "stars": 608,
      "lastUpdated": "2025-08-16T19:11:43Z"
    },
    "tags": [
      "official"
    ],
    "serverName": "azure-devops",
    "serverConfig": {
      "type": "stdio",
      "command": "npx",
      "args": [
        "-y",
        "@azure-devops/mcp",
        "${input:ado_org}"
      ]
    }
  },
  {
    "id": "baidu-map:94b56252",
    "icon": "https://mapopen-website-wiki.cdn.bcebos.com/LOGO/lbsyunlogo_icon.ico",
    "name": "Baidu Map",
    "description": "Baidu Map MCP Server provides tools for AI agents to interact with Baidu Maps APIs, enabling location-based services and geospatial data analysis.",
    "repository": {
      "url": "https://github.com/baidu-maps/mcp",
      "source": "github",
      "stars": 327,
      "lastUpdated": "2025-08-16T13:12:38Z"
    },
    "tags": [
      "official"
    ],
    "serverName": "baidu-map",
    "serverConfig": {
      "type": "stdio",
      "command": "npx",
      "args": [
        "-y",
        "@baidumap/mcp-server-baidu-map"
      ],
      "env": {
        "BAIDU_MAP_API_KEY": "<YOUR_API_KEY>"
      }
    }
  },
  {
    "id": "bankless-onchain:737dd1cb",
    "icon": "https://www.bankless.com/favicon.ico",
    "name": "Bankless Onchain",
    "description": "Query Onchain data, like ERC20 tokens, transaction history, smart contract state.",
    "repository": {
      "url": "https://github.com/bankless/onchain-mcp",
      "source": "github",
      "stars": 61,
      "lastUpdated": "2025-08-13T15:45:01Z"
    },
    "tags": [
      "official"
    ],
    "serverName": "bankless-onchain",
    "serverConfig": {
      "type": "stdio",
      "command": "npx",
      "args": [
        "@bankless/onchain-mcp"
      ],
      "env": {
        "BANKLESS_API_TOKEN": "your_api_token_here"
      }
    }
  },
  {
    "id": "baserow:aadfc6dc",
    "icon": "https://baserow.io/img/logo_baserow_square_large.png",
    "name": "Baserow",
    "description": "Query data from Baserow self-hosted or SaaS databases using MCP integration.",
    "repository": {
      "url": "https://gitlab.com/baserow/baserow/-/tree/develop/backend/src/baserow/api/mcp",
      "source": "gitlab"
    },
    "tags": [
      "official"
    ]
  },
  {
    "id": "bicscan:cdb0b45b",
    "icon": "https://bicscan.io/favicon.png",
    "name": "BICScan",
    "description": "Risk score / asset holdings of EVM blockchain address (EOA, CA, ENS) and even domain names.",
    "repository": {
      "url": "https://github.com/ahnlabio/bicscan-mcp",
      "source": "github",
      "stars": 6,
      "lastUpdated": "2025-07-20T09:24:21Z"
    },
    "tags": [
      "official"
    ],
    "serverName": "bicscan",
    "serverConfig": {
      "type": "stdio",
      "command": "uvx",
      "args": [
        "--from",
        "git+https://github.com/ahnlabio/bicscan-mcp",
        "bicscan-mcp"
      ],
      "env": {
        "BICSCAN_API_KEY": "YOUR_BICSCAN_API_KEY_HERE"
      }
    }
  },
  {
    "id": "bitrise:58f10b40",
    "icon": "https://web-cdn.bitrise.io/favicon.ico",
    "name": "Bitrise",
    "description": "Chat with your builds, CI, and more.",
    "repository": {
      "url": "https://github.com/bitrise-io/bitrise-mcp",
      "source": "github",
      "stars": 25,
      "lastUpdated": "2025-07-11T15:31:01Z"
    },
    "tags": [
      "official"
    ],
    "serverName": "bitrise",
    "serverConfig": {
      "type": "stdio",
      "command": "uvx",
      "args": [
        "--from",
        "git+https://github.com/bitrise-io/bitrise-mcp@v1.1.0",
        "bitrise-mcp"
      ],
      "env": {
        "BITRISE_TOKEN": "<YOUR_TOKEN>"
      }
    }
  },
  {
    "id": "boikot:2a1dc5c9",
    "icon": "https://boikot.xyz/assets/favicon.svg",
    "name": "Boikot",
    "description": "Learn about the ethical and unethical actions of major companies with boikot.xyz.",
    "repository": {
      "url": "https://github.com/boikot-xyz/boikot",
      "source": "github",
      "stars": 1,
      "lastUpdated": "2025-08-16T08:36:29Z"
    },
    "tags": [
      "official"
    ]
  },
  {
    "id": "boldsign:f6b5ae5c",
    "icon": "https://boldsign.com/favicon.ico",
    "name": "BoldSign",
    "description": "Search, request, and manage e-signature contracts effortlessly with BoldSign.",
    "repository": {
      "url": "https://github.com/boldsign/boldsign-mcp",
      "source": "github",
      "stars": 3,
      "lastUpdated": "2025-08-14T10:56:10Z"
    },
    "tags": [
      "official"
    ],
    "serverName": "boldsign",
    "serverConfig": {
      "type": "stdio",
      "command": "npx",
      "args": [
        "-y",
        "@boldsign/mcp"
      ],
      "env": {
        "BOLDSIGN_API_KEY": "YOUR_BOLDSIGN_API_KEY",
        "BOLDSIGN_API_REGION": "US"
      }
    }
  },
  {
    "id": "boost-space:bb3bdb68",
    "icon": "https://boost.space/favicon.ico",
    "name": "Boost.space",
    "description": "An MCP server integrating with Boost.space for centralized, automated business data from 2000+ sources.",
    "repository": {
      "url": "https://github.com/boostspace/boostspace-mcp-server",
      "source": "github",
      "stars": 3,
      "lastUpdated": "2025-07-09T04:39:07Z"
    },
    "tags": [
      "official"
    ]
  },
  {
    "id": "box:12ed5aee",
    "icon": "https://www.box.com/favicon.ico",
    "name": "Box",
    "description": "Interact with the Intelligent Content Management platform through Box AI.",
    "repository": {
      "url": "https://github.com/box-community/mcp-server-box",
      "source": "github",
      "stars": 44,
      "lastUpdated": "2025-08-17T02:13:29Z"
    },
    "tags": [
      "official"
    ]
  },
  {
    "id": "brightdata:8643ab7e",
    "icon": "https://www.brightdata.com/favicon.ico",
    "name": "BrightData",
    "description": "Discover, extract, and interact with the web - one interface powering automated access across the public internet.",
    "repository": {
      "url": "https://github.com/luminati-io/brightdata-mcp",
      "source": "github",
      "stars": 1088,
      "lastUpdated": "2025-08-16T22:31:26Z"
    },
    "tags": [
      "official"
    ],
    "serverName": "brightdata",
    "serverConfig": {
      "type": "stdio",
      "command": "npx",
      "args": [
        "@brightdata/mcp"
      ],
      "env": {
        "API_TOKEN": "<insert-your-api-token-here>"
      }
    }
  },
  {
    "id": "browserbase:6ca1a8c4",
    "icon": "https://browserbase.com/favicon.ico",
    "name": "Browserbase",
    "description": "Automate browser interactions in the cloud (e.g. web navigation, data extraction, form filling, and more)",
    "repository": {
      "url": "https://github.com/browserbase/mcp-server-browserbase",
      "source": "github",
      "stars": 2434,
      "lastUpdated": "2025-08-16T22:53:19Z"
    },
    "tags": [
      "official"
    ],
    "serverName": "browserbase",
    "serverConfig": {
      "type": "stdio",
      "command": "npx",
      "args": [
        "@browserbasehq/mcp-server-browserbase"
      ],
      "env": {
        "BROWSERBASE_API_KEY": "",
        "BROWSERBASE_PROJECT_ID": "",
        "GEMINI_API_KEY": ""
      }
    }
  },
  {
    "id": "browserstack:f30c2998",
    "icon": "https://browserstack.wpenginepowered.com/wp-content/themes/browserstack/img/favicons/favicon.ico",
    "name": "BrowserStack",
    "description": "Access BrowserStack's Test Platform to debug, write and fix tests, do accessibility testing and more.",
    "repository": {
      "url": "https://github.com/browserstack/mcp-server",
      "source": "github",
      "stars": 85,
      "lastUpdated": "2025-08-13T12:50:31Z"
    },
    "tags": [
      "official"
    ]
  },
  {
    "id": "bucket:9b335940",
    "icon": "https://cdn.prod.website-files.com/65c0b8763c04cd15daa89b20/671f9d1301ac85495013761d_Favicon-White.png",
    "name": "Bucket",
    "description": "Flag features, manage company data, and control feature access using Bucket",
    "repository": {
      "url": "https://github.com/bucketco/bucket-javascript-sdk/tree/main/packages/cli#model-context-protocol",
      "source": "github",
      "stars": 12,
      "lastUpdated": "2025-08-15T09:27:07Z"
    },
    "tags": [
      "official"
    ]
  },
  {
    "id": "buildkite:79cb67c7",
    "icon": "https://www.google.com/s2/favicons?domain=buildkite.com&sz=24",
    "name": "Buildkite",
    "description": "Exposing Buildkite data (pipelines, builds, jobs, tests) to AI tooling and editors.",
    "repository": {
      "url": "https://github.com/buildkite/buildkite-mcp-server",
      "source": "github",
      "stars": 27,
      "lastUpdated": "2025-08-15T08:55:43Z"
    },
    "tags": [
      "official"
    ]
  },
  {
    "id": "buildable:5dbd7054",
    "icon": "https://bldbl.dev/favico.png",
    "name": "Buildable",
    "description": "",
    "repository": {
      "url": "https://github.com/chunkydotdev/bldbl-mcp",
      "source": "github",
      "stars": 1,
      "lastUpdated": "2025-07-03T20:16:26Z"
    },
    "tags": [
      "official"
    ],
    "serverName": "buildable",
    "serverConfig": {
      "type": "stdio",
      "command": "npx",
      "args": [
        "-y",
        "@bldbl/mcp"
      ],
      "env": {
        "BUILDABLE_API_KEY": "bp_your_api_key_here",
        "BUILDABLE_PROJECT_ID": "your-project-id",
        "BUILDABLE_AI_ASSISTANT_ID": "claude-desktop"
      }
    }
  },
  {
    "id": "builtwith:1c76b2d5",
    "icon": "https://builtwith.com/favicon.ico",
    "name": "BuiltWith",
    "description": "Identify the technology stack behind any website.",
    "repository": {
      "url": "https://github.com/builtwith/mcp",
      "source": "github",
      "stars": 14,
      "lastUpdated": "2025-08-09T14:21:48Z"
    },
    "tags": [
      "official"
    ],
    "serverName": "builtwith",
    "serverConfig": {
      "type": "stdio",
      "command": "node",
      "args": [
        "[PATH-TO]/bw-mcp-v1.js"
      ],
      "env": {
        "BUILTWITH_API_KEY": "[YOUR-API-KEY]"
      }
    }
  },
  {
    "id": "burp-suite:2a4d7548",
    "icon": "https://portswigger.net/favicon.ico",
    "name": "Burp Suite",
    "description": "MCP Server extension allowing AI clients to connect to Burp Suite",
    "repository": {
      "url": "https://github.com/PortSwigger/mcp-server",
      "source": "github",
      "stars": 230,
      "lastUpdated": "2025-08-15T10:01:37Z"
    },
    "tags": [
      "official"
    ]
  },
  {
    "id": "cal-com:952da553",
    "icon": "https://app.cal.com/favicon.ico",
    "name": "Cal.com",
    "description": "Connect to the Cal.com API to schedule and manage bookings and appointments.",
    "repository": {
      "url": "https://www.npmjs.com/package/@calcom/cal-mcp?activeTab=readme",
      "source": "other"
    },
    "tags": [
      "official"
    ]
  },
  {
    "id": "campertunity:f3a5c762",
    "icon": "https://campertunity.com/assets/icon/favicon.ico",
    "name": "Campertunity",
    "description": "Search campgrounds around the world on campertunity, check availability, and provide booking links.",
    "repository": {
      "url": "https://github.com/campertunity/mcp-server",
      "source": "github",
      "stars": 5,
      "lastUpdated": "2025-08-11T23:57:31Z"
    },
    "tags": [
      "official"
    ]
  },
  {
    "id": "canva:52006b94",
    "icon": "https://static.canva.com/static/images/favicon.ico",
    "name": "Canva",
    "description": "",
    "repository": {
      "url": "https://www.canva.dev/docs/apps/mcp-server/",
      "source": "other"
    },
    "tags": [
      "official"
    ]
  },
  {
    "id": "carbon-voice:7ddf4ff2",
    "icon": "https://carbonvoice.app/favicon.ico",
    "name": "Carbon Voice",
    "description": "MCP Server that connects AI Agents to Carbon Voice. Create, manage, and interact with voice messages, conversations, direct messages, folders, voice memos, AI actions and more in Carbon Voice.",
    "repository": {
      "url": "https://github.com/PhononX/cv-mcp-server",
      "source": "github",
      "stars": 1,
      "lastUpdated": "2025-08-08T20:16:03Z"
    },
    "tags": [
      "official"
    ],
    "serverName": "carbon-voice",
    "serverConfig": {
      "type": "stdio",
      "command": "npx",
      "args": [
        "-y",
        "@carbonvoice/cv-mcp-server"
      ],
      "env": {
        "CARBON_VOICE_API_KEY": "your_api_key_here"
      }
    }
  },
  {
    "id": "cartesia:62e105ef",
    "icon": "https://play.cartesia.ai/icon.png",
    "name": "Cartesia",
    "description": "Connect to the Cartesia voice platform to perform text-to-speech, voice cloning etc.",
    "repository": {
      "url": "https://github.com/cartesia-ai/cartesia-mcp",
      "source": "github",
      "stars": 5,
      "lastUpdated": "2025-08-14T11:54:17Z"
    },
    "tags": [
      "official"
    ]
  },
  {
    "id": "cashfree:9f60b94a",
    "icon": "https://www.cashfree.com/favicon.ico",
    "name": "Cashfree",
    "description": "Cashfree Payments official MCP server.",
    "repository": {
      "url": "https://github.com/cashfree/cashfree-mcp",
      "source": "github",
      "stars": 8,
      "lastUpdated": "2025-07-14T12:17:23Z"
    },
    "tags": [
      "official"
    ],
    "serverName": "cashfree",
    "serverConfig": {
      "type": "stdio",
      "command": "node",
      "args": [
        "/path/to/cashfree-mcp/dist/index.js"
      ],
      "env": {
        "PAYMENTS_APP_ID": "YOUR_PG_CLIENT_ID",
        "PAYMENTS_APP_SECRET": "YOUR_PG_CLIENT_SECRET",
        "PAYOUTS_APP_ID": "YOUR_PAYOUTS_CLIENT_ID",
        "PAYOUTS_APP_SECRET": "YOUR_PAYOUTS_CLIENT_SECRET",
        "TWO_FA_PUBLIC_KEY_PEM_PATH": "/path/to/public_key.pem",
        "SECUREID_APP_ID": "YOUR_SECUREID_CLIENT_ID",
        "SECUREID_APP_SECRET": "YOUR_SECUREID_CLIENT_SECRET",
        "TOOLS": "pg,payouts,secureid",
        "ENV": "sandbox"
      }
    }
  },
  {
    "id": "cb-insights:17155e13",
    "icon": null,
    "name": "CB Insights",
    "description": "Use the CB Insights MCP Server to connect to ChatCBI",
    "repository": {
      "url": "https://github.com/cbinsights/cbi-mcp-server",
      "source": "github",
      "stars": 6,
      "lastUpdated": "2025-07-26T18:26:12Z"
    },
    "tags": [
      "official"
    ],
    "serverName": "cb-insights",
    "serverConfig": {
      "type": "stdio",
      "command": "/path/to/.local/bin/uv",
      "args": [
        "--directory",
        "/path/to/cloned/cbi-mcp-server",
        "run",
        "server.py"
      ]
    }
  },
  {
    "id": "chargebee:9fa79b80",
    "icon": "https://www.chargebee.com/static/resources/brand/favicon.png",
    "name": "Chargebee",
    "description": "MCP Server that connects AI agents to Chargebee platform.",
    "repository": {
      "url": "https://github.com/chargebee/agentkit/tree/main/modelcontextprotocol",
      "source": "github",
      "stars": 13,
      "lastUpdated": "2025-08-02T03:03:44Z"
    },
    "tags": [
      "official"
    ],
    "serverName": "chargebee",
    "serverConfig": {
      "type": "stdio",
      "command": "npx",
      "args": [
        "-y",
        "@chargebee/mcp"
      ]
    }
  },
  {
    "id": "cheqd:226f345b",
    "icon": "https://cheqd.io/wp-content/uploads/2023/03/logo_cheqd_favicon.png",
    "name": "Cheqd",
    "description": "Enable AI Agents to be trusted, verified, prevent fraud, protect your reputation, and more through cheqd's Trust Registries and Credentials.",
    "repository": {
      "url": "https://github.com/cheqd/mcp-toolkit",
      "source": "github",
      "stars": 1,
      "lastUpdated": "2025-06-17T21:45:43Z"
    },
    "tags": [
      "official"
    ],
    "serverName": "cheqd",
    "serverConfig": {
      "type": "stdio",
      "command": "npx",
      "args": [
        "-y",
        "@cheqd/mcp-toolkit-server"
      ],
      "env": {
        "TOOLS": "credo,<other available tools>"
      }
    }
  },
  {
    "id": "chiki-studio:d44d9211",
    "icon": "https://cdn.chiki.studio/brand/logo.png",
    "name": "Chiki StudIO",
    "description": "Create your own configurable MCP servers purely via configuration (no code), with instructions, prompts, and tools support.",
    "repository": {
      "url": "https://chiki.studio/galimybes/mcp/",
      "source": "other"
    },
    "tags": [
      "official"
    ]
  },
  {
    "id": "chroma:c909eadc",
    "icon": "https://trychroma.com/_next/static/media/chroma-logo.ae2d6e4b.svg",
    "name": "Chroma",
    "description": "Embeddings, vector search, document storage, and full-text search with the open-source AI application database",
    "repository": {
      "url": "https://github.com/chroma-core/chroma-mcp",
      "source": "github",
      "stars": 292,
      "lastUpdated": "2025-08-15T06:13:56Z"
    },
    "tags": [
      "official"
    ],
    "serverName": "chroma",
    "serverConfig": {
      "type": "stdio",
      "command": "uvx",
      "args": [
        "chroma-mcp"
      ]
    }
  },
  {
    "id": "chronulus-ai:a8cf0aae",
    "icon": "https://www.chronulus.com/favicon/chronulus-logo-blue-on-alpha-square-128x128.ico",
    "name": "Chronulus AI",
    "description": "Predict anything with Chronulus AI forecasting and prediction agents.",
    "repository": {
      "url": "https://github.com/ChronulusAI/chronulus-mcp",
      "source": "github",
      "stars": 94,
      "lastUpdated": "2025-08-12T03:38:19Z"
    },
    "tags": [
      "official"
    ],
    "serverName": "chronulus-ai",
    "serverConfig": {
      "type": "stdio",
      "command": "uvx",
      "args": [
        "chronulus-mcp"
      ],
      "env": {
        "CHRONULUS_API_KEY": "<YOUR_CHRONULUS_API_KEY>"
      }
    }
  },
  {
    "id": "circleci:9b4f3e60",
    "icon": "https://circleci.com/favicon.ico",
    "name": "CircleCI",
    "description": "Enable AI Agents to fix build failures from CircleCI.",
    "repository": {
      "url": "https://github.com/CircleCI-Public/mcp-server-circleci",
      "source": "github",
      "stars": 59,
      "lastUpdated": "2025-08-12T14:30:02Z"
    },
    "tags": [
      "official"
    ],
    "serverName": "circleci",
    "serverConfig": {
      "type": "stdio",
      "command": "npx",
      "args": [
        "-y",
        "@circleci/mcp-server-circleci"
      ],
      "env": {
        "CIRCLECI_TOKEN": "your-circleci-token",
        "CIRCLECI_BASE_URL": "https://circleci.com"
      }
    }
  },
  {
    "id": "claude-context:0f5187d1",
    "icon": "https://assets.zilliz.com/Zilliz_Logo_Mark_White_20230223_041013_86057436cc.png",
    "name": "Claude Context",
    "description": "Bring your codebase as context to Claude Code",
    "repository": {
      "url": "https://github.com/zilliztech/claude-context",
      "source": "github",
      "stars": 2582,
      "lastUpdated": "2025-08-17T02:08:04Z"
    },
    "tags": [
      "official"
    ],
    "serverName": "claude-context",
    "serverConfig": {
      "type": "stdio",
      "command": "npx",
      "args": [
        "@zilliz/claude-context-mcp@latest"
      ],
      "env": {
        "OPENAI_API_KEY": "your-openai-api-key",
        "MILVUS_TOKEN": "your-zilliz-cloud-api-key"
      }
    }
  },
  {
    "id": "clickhouse:533c00b2",
    "icon": "https://clickhouse.com/favicon.ico",
    "name": "ClickHouse",
    "description": "Query your ClickHouse database server.",
    "repository": {
      "url": "https://github.com/ClickHouse/mcp-clickhouse",
      "source": "github",
      "stars": 494,
      "lastUpdated": "2025-08-16T10:04:35Z"
    },
    "tags": [
      "official"
    ],
    "serverName": "clickhouse",
    "serverConfig": {
      "type": "stdio",
      "command": "uv",
      "args": [
        "run",
        "--with",
        "mcp-clickhouse",
        "--python",
        "3.10",
        "mcp-clickhouse"
      ],
      "env": {
        "CLICKHOUSE_HOST": "<clickhouse-host>",
        "CLICKHOUSE_PORT": "<clickhouse-port>",
        "CLICKHOUSE_USER": "<clickhouse-user>",
        "CLICKHOUSE_PASSWORD": "<clickhouse-password>",
        "CLICKHOUSE_SECURE": "true",
        "CLICKHOUSE_VERIFY": "true",
        "CLICKHOUSE_CONNECT_TIMEOUT": "30",
        "CLICKHOUSE_SEND_RECEIVE_TIMEOUT": "30"
      }
    }
  },
  {
    "id": "clicksend:c90b1750",
    "icon": "https://brand.clicksend.com/_ipx/s_794x608/img/clicksend_icon_only.svg",
    "name": "ClickSend",
    "description": "This is the official ClickSend MCP Server developed by ClickSend team.",
    "repository": {
      "url": "https://github.com/ClickSend/clicksend-mcp-server/",
      "source": "github",
      "stars": 1,
      "lastUpdated": "2025-08-13T00:10:29Z"
    },
    "tags": [
      "official"
    ],
    "serverName": "clicksend",
    "serverConfig": {
      "type": "stdio",
      "command": "node",
      "args": [
        "/path/to/repository/build/clicksend-mcp.js"
      ],
      "env": {
        "CLICKSEND_USERNAME": "your clicksend username",
        "CLICKSEND_API_KEY": "your API Key"
      }
    }
  },
  {
    "id": "cloudbase:b573eb2f",
    "icon": "https://7463-tcb-advanced-a656fc-1257967285.tcb.qcloud.la/mcp/cloudbase-logo.svg",
    "name": "CloudBase",
    "description": "One-stop backend services for WeChat Mini-Programs and full-stack apps with serverless cloud functions and databases by Tencent CloudBase",
    "repository": {
      "url": "https://github.com/TencentCloudBase/CloudBase-AI-ToolKit",
      "source": "github",
      "stars": 648,
      "lastUpdated": "2025-08-17T01:36:11Z"
    },
    "tags": [
      "official"
    ]
  },
  {
    "id": "cloudbet:4f0dfd18",
    "icon": "https://www.cloudbet.com/favicon.ico",
    "name": "Cloudbet",
    "description": "Structured sports and esports data via Cloudbet API: fixtures, live odds, stake limits, and markets.",
    "repository": {
      "url": "https://github.com/cloudbet/sports-mcp-server",
      "source": "github",
      "stars": 3,
      "lastUpdated": "2025-07-14T09:22:23Z"
    },
    "tags": [
      "official"
    ]
  },
  {
    "id": "cloudbees:cf97f482",
    "icon": "https://www.cloudbees.com/favicon.ico",
    "name": "CloudBees",
    "description": "Enable AI access to your CloudBees Unify environment.",
    "repository": {
      "url": "https://docs.cloudbees.com/docs/cloudbees-mcp/latest/",
      "source": "other"
    },
    "tags": [
      "official"
    ]
  },
  {
    "id": "cloudera-iceberg:674220c3",
    "icon": "http://www.google.com/s2/favicons?domain=www.cloudera.com",
    "name": "Cloudera Iceberg",
    "description": "enabling AI on the Open Data Lakehouse.",
    "repository": {
      "url": "https://github.com/cloudera/iceberg-mcp-server",
      "source": "github",
      "stars": 6,
      "lastUpdated": "2025-08-08T16:17:34Z"
    },
    "tags": [
      "official"
    ],
    "serverName": "cloudera-iceberg",
    "serverConfig": {
      "type": "stdio",
      "command": "uvx",
      "args": [
        "--from",
        "git+https://github.com/cloudera/iceberg-mcp-server@main",
        "run-server"
      ],
      "env": {
        "IMPALA_HOST": "coordinator-default-impala.example.com",
        "IMPALA_PORT": "443",
        "IMPALA_USER": "username",
        "IMPALA_PASSWORD": "password",
        "IMPALA_DATABASE": "default"
      }
    }
  },
  {
    "id": "cloudflare:57ccfa67",
    "icon": "https://cdn.simpleicons.org/cloudflare",
    "name": "Cloudflare",
    "description": "Deploy, configure & interrogate your resources on the Cloudflare developer platform (e.g. Workers/KV/R2/D1)",
    "repository": {
      "url": "https://github.com/cloudflare/mcp-server-cloudflare",
      "source": "github",
      "stars": 2853,
      "lastUpdated": "2025-08-17T02:23:46Z"
    },
    "tags": [
      "official"
    ],
    "serverName": "cloudflare",
    "serverConfig": {
      "type": "stdio",
      "command": "npx",
      "args": [
        "mcp-remote",
        "https://observability.mcp.cloudflare.com/sse"
      ]
    }
  },
  {
    "id": "cloudinary:4a70ffdd",
    "icon": "https://cdn.prod.website-files.com/64d41aab8183c7c3324ddb29/67c0f1e272e51cf3c511c17c_Gyph.svg",
    "name": "Cloudinary",
    "description": "Exposes Cloudinary's media upload, transformation, AI analysis, management, optimization and delivery as tools usable by AI agents",
    "repository": {
      "url": "https://github.com/cloudinary/mcp-servers",
      "source": "github",
      "stars": 3,
      "lastUpdated": "2025-08-14T10:23:45Z"
    },
    "tags": [
      "official"
    ],
    "serverName": "cloudinary",
    "serverConfig": {
      "type": "stdio",
      "command": "npx",
      "args": [
        "-y",
        "--package",
        "@cloudinary/asset-management",
        "--",
        "mcp",
        "start"
      ],
      "env": {
        "CLOUDINARY_URL": "cloudinary://api_key:api_secret@cloud_name"
      }
    }
  },
  {
    "id": "cloudsway-smartsearch:68fc25a6",
    "icon": "https://raw.githubusercontent.com/Cloudsway-AI/smartsearch/refs/heads/main/plugin_cloudsway.ico",
    "name": "Cloudsway SmartSearch",
    "description": "Web search MCP server powered by Cloudsway, supporting keyword search, language, and safety options. Returns structured JSON results.",
    "repository": {
      "url": "https://github.com/Cloudsway-AI/smartsearch",
      "source": "github",
      "stars": 1,
      "lastUpdated": "2025-08-04T08:30:17Z"
    },
    "tags": [
      "official"
    ],
    "serverName": "cloudsway-smartsearch",
    "serverConfig": {
      "type": "stdio",
      "command": "npx",
      "args": [
        "-y",
        "@cloudsway-ai/smartsearch"
      ],
      "env": {
        "SERVER_KEY": "YOUR_API_KEY_HERE"
      }
    }
  },
  {
    "id": "codacy:06cec565",
    "icon": "https://app.codacy.com/static/images/favicon-16x16.png",
    "name": "Codacy",
    "description": "Interact with Codacy API to query code quality issues, vulnerabilities, and coverage insights about your code.",
    "repository": {
      "url": "https://github.com/codacy/codacy-mcp-server/",
      "source": "github",
      "stars": 34,
      "lastUpdated": "2025-08-15T23:55:15Z"
    },
    "tags": [
      "official"
    ],
    "serverName": "codacy",
    "serverConfig": {
      "type": "stdio",
      "command": "npx",
      "args": [
        "-y",
        "@codacy/codacy-mcp"
      ],
      "env": {
        "CODACY_ACCOUNT_TOKEN": "<YOUR_TOKEN>"
      }
    }
  },
  {
    "id": "codelogic:3a9300d6",
    "icon": "https://codelogic.com/wp-content/themes/codelogic/assets/img/favicon.png",
    "name": "CodeLogic",
    "description": "Interact with CodeLogic, a Software Intelligence platform that graphs complex code and data architecture dependencies, to boost AI accuracy and insight.",
    "repository": {
      "url": "https://github.com/CodeLogicIncEngineering/codelogic-mcp-server",
      "source": "github",
      "stars": 27,
      "lastUpdated": "2025-08-15T00:49:56Z"
    },
    "tags": [
      "official"
    ],
    "serverName": "codelogic",
    "serverConfig": {
      "type": "stdio",
      "command": "uvx",
      "args": [
        "codelogic-mcp-server@latest"
      ],
      "env": {
        "CODELOGIC_SERVER_HOST": "<url to the server e.g. https://myco.app.codelogic.com>",
        "CODELOGIC_USERNAME": "<my username>",
        "CODELOGIC_PASSWORD": "<my password>",
        "CODELOGIC_WORKSPACE_NAME": "<my workspace>"
      }
    }
  },
  {
    "id": "coingecko:6a9c220f",
    "icon": "https://www.coingecko.com/favicon.ico",
    "name": "CoinGecko",
    "description": "Official CoinGecko API MCP Server for Crypto Price & Market Data, across 200+ Blockchain Networks and 8M+ Tokens.",
    "repository": {
      "url": "https://github.com/coingecko/coingecko-typescript/tree/main/packages/mcp-server",
      "source": "github",
      "stars": 30,
      "lastUpdated": "2025-08-15T04:39:10Z"
    },
    "tags": [
      "official"
    ],
    "serverName": "coingecko",
    "serverConfig": {
      "type": "stdio",
      "command": "npx",
      "args": [
        "-y",
        "@coingecko/coingecko-mcp",
        "--client=claude",
        "--tools=dynamic"
      ],
      "env": {
        "COINGECKO_PRO_API_KEY": "My Pro API Key",
        "COINGECKO_DEMO_API_KEY": "My Demo API Key",
        "COINGECKO_ENVIRONMENT": "pro"
      }
    }
  },
  {
    "id": "comet-opik:24cf555d",
    "icon": "https://www.comet.com/favicon.ico",
    "name": "Comet Opik",
    "description": "Query and analyze your Opik logs, traces, prompts and all other telemetry data from your LLMs in natural language.",
    "repository": {
      "url": "https://github.com/comet-ml/opik-mcp",
      "source": "github",
      "stars": 160,
      "lastUpdated": "2025-08-16T09:11:56Z"
    },
    "tags": [
      "official"
    ],
    "serverName": "comet-opik",
    "serverConfig": {
      "type": "stdio",
      "command": "/path/to/node",
      "args": [
        "/path/to/opik-mcp/build/index.js",
        "--apiUrl",
        "https://www.comet.com/opik/api",
        "--apiKey",
        "YOUR_API_KEY",
        "--workspace",
        "default",
        "--debug",
        "true"
      ],
      "env": {
        "OPIK_API_BASE_URL": "https://www.comet.com/opik/api",
        "OPIK_API_KEY": "YOUR_API_KEY",
        "OPIK_WORKSPACE_NAME": "default"
      }
    }
  },
  {
    "id": "conductor:1b357152",
    "icon": "https://cdn.prod.website-files.com/6572bd8c27ee5db3eb91f4b3/6572bd8d27ee5db3eb91f55e_favicon-dashflow-webflow-template.svg",
    "name": "Conductor",
    "description": "Interact with Conductor (OSS and Orkes) REST APIs.",
    "repository": {
      "url": "https://github.com/conductor-oss/conductor-mcp",
      "source": "github",
      "stars": 8,
      "lastUpdated": "2025-08-13T14:24:58Z"
    },
    "tags": [
      "official"
    ],
    "serverName": "conductor",
    "serverConfig": {
      "type": "stdio",
      "command": "conductor-mcp",
      "args": [
        "--config",
        "<ABSOLUTE PATH TO A JSON CONFIG FILE>"
      ]
    }
  },
  {
    "id": "composio:0581b1ed",
    "icon": "https://platform.composio.dev/favicon.ico",
    "name": "Composio",
    "description": "",
    "repository": {
      "url": "https://docs.composio.dev/docs/mcp-overview#-getting-started",
      "source": "other"
    },
    "tags": [
      "official"
    ]
  },
  {
    "id": "confluent:c53823a1",
    "icon": "https://www.confluent.io/favicon.ico",
    "name": "Confluent",
    "description": "Interact with Confluent Kafka and Confluent Cloud REST APIs.",
    "repository": {
      "url": "https://github.com/confluentinc/mcp-confluent",
      "source": "github",
      "stars": 91,
      "lastUpdated": "2025-08-07T16:35:15Z"
    },
    "tags": [
      "official"
    ]
  },
  {
    "id": "contrast-security:3b176909",
    "icon": "https://contrastsecurity.com/favicon.ico",
    "name": "Contrast Security",
    "description": "Brings Contrast's vulnerability and SCA data into your coding agent to quickly remediate vulnerabilities.",
    "repository": {
      "url": "https://github.com/Contrast-Security-OSS/mcp-contrast",
      "source": "github",
      "stars": 8,
      "lastUpdated": "2025-08-07T12:58:12Z"
    },
    "tags": [
      "official"
    ],
    "serverName": "contrast-security",
    "serverConfig": {
      "type": "stdio",
      "command": "docker",
      "args": [
        "run",
        "-e",
        "CONTRAST_HOST_NAME",
        "-e",
        "CONTRAST_API_KEY",
        "-e",
        "CONTRAST_SERVICE_KEY",
        "-e",
        "CONTRAST_USERNAME",
        "-e",
        "CONTRAST_ORG_ID",
        "-i",
        "--rm",
        "contrast/mcp-contrast:latest",
        "-t",
        "stdio"
      ],
      "env": {
        "CONTRAST_HOST_NAME": "example.contrastsecurity.com",
        "CONTRAST_API_KEY": "example",
        "CONTRAST_SERVICE_KEY": "example",
        "CONTRAST_USERNAME": "example@example.com",
        "CONTRAST_ORG_ID": "example"
      }
    }
  },
  {
    "id": "convex:9f9894e4",
    "icon": "https://www.convex.dev/favicon.ico",
    "name": "Convex",
    "description": "Introspect and query your apps deployed to Convex.",
    "repository": {
      "url": "https://stack.convex.dev/convex-mcp-server",
      "source": "other"
    },
    "tags": [
      "official"
    ]
  },
  {
    "id": "cortex:d9a19012",
    "icon": "https://www.cortex.io/favicon.ico",
    "name": "Cortex",
    "description": "Official MCP server for Cortex.",
    "repository": {
      "url": "https://github.com/cortexapps/cortex-mcp",
      "source": "github",
      "stars": 2,
      "lastUpdated": "2025-08-06T00:02:51Z"
    },
    "tags": [
      "official"
    ],
    "serverName": "cortex",
    "serverConfig": {
      "type": "stdio",
      "command": "docker",
      "args": [
        "run",
        "--rm",
        "-i",
        "--env",
        "CORTEX_API_TOKEN=YOUR_API_TOKEN_HERE",
        "ghcr.io/cortexapps/cortex-mcp:latest"
      ]
    }
  },
  {
    "id": "couchbase:e9c07cb0",
    "icon": "https://avatars.githubusercontent.com/u/605755?s=200&v=4",
    "name": "Couchbase",
    "description": "Interact with the data stored in Couchbase clusters.",
    "repository": {
      "url": "https://github.com/Couchbase-Ecosystem/mcp-server-couchbase",
      "source": "github",
      "stars": 17,
      "lastUpdated": "2025-08-16T01:05:33Z"
    },
    "tags": [
      "official"
    ],
    "serverName": "couchbase",
    "serverConfig": {
      "type": "stdio",
      "command": "uvx",
      "args": [
        "couchbase-mcp-server"
      ],
      "env": {
        "CB_CONNECTION_STRING": "couchbases://connection-string",
        "CB_USERNAME": "username",
        "CB_PASSWORD": "password",
        "CB_BUCKET_NAME": "bucket_name"
      }
    }
  },
  {
    "id": "cric-wuye-ai:42096693",
    "icon": "https://github.com/user-attachments/assets/b256f9fa-2020-4b37-9644-c77229ef182b",
    "name": "CRIC Wuye AI",
    "description": "Interact with capabilities of the CRIC Wuye AI platform, an intelligent assistant specifically for the property management industry.",
    "repository": {
      "url": "https://github.com/wuye-ai/mcp-server-wuye-ai",
      "source": "github",
      "stars": 1,
      "lastUpdated": "2025-07-14T05:24:49Z"
    },
    "tags": [
      "official"
    ],
    "serverName": "cric-wuye-ai",
    "serverConfig": {
      "type": "stdio",
      "command": "npx",
      "args": [
        "-y",
        "@wuye-ai/mcp-server-wuye-ai"
      ],
      "env": {
        "CRIC_WUYE_AI_ACCESS_TOKEN": "{{您的 CRIC物业AI Access Token}}"
      }
    }
  },
  {
    "id": "crowdstrike-falcon:c3439c90",
    "icon": "https://www.crowdstrike.com/etc.clientlibs/crowdstrike/clientlibs/crowdstrike-common/resources/favicon.ico",
    "name": "CrowdStrike Falcon",
    "description": "Connects AI agents with the CrowdStrike Falcon platform for intelligent security analysis, providing programmatic access to detections, incidents, behaviors, threat intelligence, hosts, vulnerabilities, and identity protection capabilities.",
    "repository": {
      "url": "https://github.com/CrowdStrike/falcon-mcp",
      "source": "github",
      "stars": 38,
      "lastUpdated": "2025-08-15T12:30:58Z"
    },
    "tags": [
      "official"
    ],
    "serverName": "crowdstrike-falcon",
    "serverConfig": {
      "type": "stdio",
      "command": "uvx",
      "args": [
        "--env-file",
        "/path/to/.env",
        "falcon-mcp"
      ]
    }
  },
  {
    "id": "ctera-edge-filer:431634a1",
    "icon": "https://avatars.githubusercontent.com/u/58433296",
    "name": "CTERA Edge Filer",
    "description": "CTERA Edge Filer delivers intelligent edge caching and multiprotocol file access, enabling fast, secure access to files across core and remote sites.",
    "repository": {
      "url": "https://github.com/ctera/mcp-ctera-edge",
      "source": "github",
      "stars": 1,
      "lastUpdated": "2025-08-11T07:16:23Z"
    },
    "tags": [
      "official"
    ],
    "serverName": "ctera-edge-filer",
    "serverConfig": {
      "type": "stdio",
      "command": "uv",
      "args": [
        "--directory",
        "/path/to/mcp-ctera-edge/src",
        "run",
        "stdio.py"
      ],
      "env": {
        "ctera.mcp.edge.settings.host": "",
        "ctera.mcp.edge.settings.user": "admin",
        "ctera.mcp.edge.settings.password": "your-password",
        "ctera.mcp.edge.settings.ssl": "true"
      }
    }
  },
  {
    "id": "ctera-portal:9aaabd2b",
    "icon": "https://avatars.githubusercontent.com/u/58433296",
    "name": "CTERA Portal",
    "description": "CTERA Portal is a multi-tenant, multi-cloud platform that delivers a global namespace and unified management across petabytes of distributed content.",
    "repository": {
      "url": "https://github.com/ctera/mcp-ctera-core",
      "source": "github",
      "stars": 2,
      "lastUpdated": "2025-08-11T07:15:15Z"
    },
    "tags": [
      "official"
    ],
    "serverName": "ctera-portal",
    "serverConfig": {
      "type": "stdio",
      "command": "uv",
      "args": [
        "--directory",
        "/path/to/mcp-ctera-core/src",
        "run",
        "stdio.py"
      ],
      "env": {
        "ctera.mcp.core.settings.scope": "user",
        "ctera.mcp.core.settings.host": "your.ctera.portal.domain",
        "ctera.mcp.core.settings.user": "your-username",
        "ctera.mcp.core.settings.password": "your-password",
        "ctera.mcp.core.settings.ssl": "true"
      }
    }
  },
  {
    "id": "cycode:c224011d",
    "icon": "https://app.cycode.com/img/favicon.ico",
    "name": "Cycode",
    "description": "Boost security in your dev lifecycle via SAST, SCA, Secrets & IaC scanning with Cycode.",
    "repository": {
      "url": "https://github.com/cycodehq/cycode-cli#mcp-command-experiment",
      "source": "github",
      "stars": 93,
      "lastUpdated": "2025-08-07T08:47:58Z"
    },
    "tags": [
      "official"
    ],
    "serverName": "cycode",
    "serverConfig": {
      "type": "stdio",
      "command": "uvx",
      "args": [
        "cycode",
        "mcp"
      ],
      "env": {
        "CYCODE_CLIENT_ID": "your-cycode-id",
        "CYCODE_CLIENT_SECRET": "your-cycode-secret-key",
        "CYCODE_API_URL": "https://api.cycode.com",
        "CYCODE_APP_URL": "https://app.cycode.com"
      }
    }
  },
  {
    "id": "dart:1116eae4",
    "icon": "http://app.itsdart.com/static/img/favicon.png",
    "name": "Dart",
    "description": "Interact with task, doc, and project data in Dart, an AI-native project management tool",
    "repository": {
      "url": "https://github.com/its-dart/dart-mcp-server",
      "source": "github",
      "stars": 112,
      "lastUpdated": "2025-08-15T11:42:58Z"
    },
    "tags": [
      "official"
    ]
  },
  {
    "id": "datahub:9379080f",
    "icon": "https://datahub.com/wp-content/uploads/2025/04/cropped-Artboard-1-32x32.png",
    "name": "DataHub",
    "description": "Search your data assets, traverse data lineage, write SQL queries, and more using DataHub metadata.",
    "repository": {
      "url": "https://github.com/acryldata/mcp-server-datahub",
      "source": "github",
      "stars": 52,
      "lastUpdated": "2025-08-14T08:09:16Z"
    },
    "tags": [
      "official"
    ]
  },
  {
    "id": "daytona:6fcc4484",
    "icon": "https://www.daytona.io/brand/social-daytona-icon.png",
    "name": "Daytona",
    "description": "Fast and secure execution of your AI generated code with Daytona sandboxes",
    "repository": {
      "url": "https://github.com/daytonaio/daytona/tree/main/apps/cli/mcp",
      "source": "github",
      "stars": 21137,
      "lastUpdated": "2025-08-17T01:21:20Z"
    },
    "tags": [
      "official"
    ],
    "serverName": "daytona",
    "serverConfig": {
      "type": "stdio",
      "command": "daytona",
      "args": [
        "mcp",
        "start"
      ],
      "env": {
        "HOME": "${HOME}",
        "PATH": "${HOME}:/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin:/opt/homebrew/bin"
      }
    }
  },
  {
    "id": "debugg-ai:faaa876c",
    "icon": "https://debugg.ai/favicon.svg",
    "name": "Debugg.AI",
    "description": "Zero-Config, Fully AI-Managed End-to-End Testing for any code gen platform via Debugg.AI remote browsing test agents.",
    "repository": {
      "url": "https://github.com/debugg-ai/debugg-ai-mcp",
      "source": "github",
      "stars": 87,
      "lastUpdated": "2025-08-16T10:01:36Z"
    },
    "tags": [
      "official"
    ]
  },
  {
    "id": "deepl:d3e480d9",
    "icon": "https://www.deepl.com/img/logo/deepl-logo-blue.svg",
    "name": "DeepL",
    "description": "Translate or rewrite text with DeepL's very own AI models using the DeepL API",
    "repository": {
      "url": "https://github.com/DeepLcom/deepl-mcp-server",
      "source": "github",
      "stars": 37,
      "lastUpdated": "2025-08-13T07:06:10Z"
    },
    "tags": [
      "official"
    ],
    "serverName": "deepl",
    "serverConfig": {
      "type": "stdio",
      "command": "npx",
      "args": [
        "deepl-mcp-server"
      ],
      "env": {
        "DEEPL_API_KEY": "{YOUR_API_KEY}"
      }
    }
  },
  {
    "id": "defang:4aeebc3b",
    "icon": "https://defang.io/_next/static/media/defang-icon-dark-colour.25f95b77.svg",
    "name": "Defang",
    "description": "Deploy your project to the cloud seamlessly with the Defang platform without leaving your integrated development environment",
    "repository": {
      "url": "https://github.com/DefangLabs/defang/blob/main/src/pkg/mcp/README.md",
      "source": "github",
      "stars": 140,
      "lastUpdated": "2025-08-15T05:49:54Z"
    },
    "tags": [
      "official"
    ]
  },
  {
    "id": "detailer:fc88cd59",
    "icon": "https://detailer.ginylil.com/favicon.ico",
    "name": "Detailer",
    "description": "",
    "repository": {
      "url": "https://detailer.ginylil.com/",
      "source": "other"
    },
    "tags": [
      "official"
    ]
  },
  {
    "id": "devhub:65622a34",
    "icon": "https://www.devhub.com/img/upload/favicon-196x196-dh.png",
    "name": "DevHub",
    "description": "Manage and utilize website content within the DevHub CMS platform",
    "repository": {
      "url": "https://github.com/devhub/devhub-cms-mcp",
      "source": "github",
      "stars": 5,
      "lastUpdated": "2025-07-23T23:45:35Z"
    },
    "tags": [
      "official"
    ]
  },
  {
    "id": "devrev:6a695a76",
    "icon": "https://devrev.ai/favicon.ico",
    "name": "DevRev",
    "description": "An MCP server to integrate with DevRev APIs to search through your DevRev Knowledge Graph where objects can be imported from diff. Sources listed here.",
    "repository": {
      "url": "https://github.com/devrev/mcp-server",
      "source": "github",
      "stars": 5,
      "lastUpdated": "2025-08-01T05:34:22Z"
    },
    "tags": [
      "official"
    ],
    "serverName": "devrev",
    "serverConfig": {
      "type": "stdio",
      "command": "uvx",
      "args": [
        "devrev-mcp"
      ],
      "env": {
        "DEVREV_API_KEY": "YOUR_DEVREV_API_KEY"
      }
    }
  },
  {
    "id": "dexpaprika-coinpaprika:d469d942",
    "icon": "https://dexpaprika.com/favicon.ico",
    "name": "DexPaprika (CoinPaprika)",
    "description": "Access real-time DEX data, liquidity pools, token information, and trading analytics across multiple blockchain networks with DexPaprika by CoinPaprika.",
    "repository": {
      "url": "https://github.com/coinpaprika/dexpaprika-mcp",
      "source": "github",
      "stars": 20,
      "lastUpdated": "2025-08-15T04:46:01Z"
    },
    "tags": [
      "official"
    ],
    "serverName": "dexpaprika-coinpaprika",
    "serverConfig": {
      "type": "stdio",
      "command": "npx",
      "args": [
        "dexpaprika-mcp"
      ]
    }
  },
  {
    "id": "dicom:c292bcaa",
    "icon": null,
    "name": "Dicom",
    "description": "An MCP server to query and retrieve medical images and for parsing and reading dicom-encapsulated documents (pdf etc.).",
    "repository": {
      "url": "https://github.com/ChristianHinge/dicom-mcp",
      "source": "github",
      "stars": 60,
      "lastUpdated": "2025-08-16T00:49:24Z"
    },
    "tags": [
      "official"
    ],
    "serverName": "dicom",
    "serverConfig": {
      "type": "stdio",
      "command": "uv",
      "args": [
        "tool",
        "dicom-mcp",
        "/path/to/your_config.yaml"
      ]
    }
  },
  {
    "id": "drata:c20423f7",
    "icon": "https://avatars.githubusercontent.com/u/65421071?s=200&v=4",
    "name": "Drata",
    "description": "Get hands-on with our experimental MCP server—bringing real-time compliance intelligence into your AI workflows.",
    "repository": {
      "url": "https://drata.com/mcp",
      "source": "other"
    },
    "tags": [
      "official"
    ]
  },
  {
    "id": "dumpling-ai:7070305e",
    "icon": "https://avatars.githubusercontent.com/u/204530939?s=200&v=4",
    "name": "Dumpling AI",
    "description": "Access data, web scraping, and document conversion APIs by Dumpling AI",
    "repository": {
      "url": "https://github.com/Dumpling-AI/mcp-server-dumplingai",
      "source": "github",
      "stars": 23,
      "lastUpdated": "2025-08-08T10:43:28Z"
    },
    "tags": [
      "official"
    ]
  },
  {
    "id": "dynatrace:efd2b79d",
    "icon": "https://avatars.githubusercontent.com/u/58178984",
    "name": "Dynatrace",
    "description": "Manage and interact with the Dynatrace Platform  for real-time observability and monitoring.",
    "repository": {
      "url": "https://github.com/dynatrace-oss/dynatrace-mcp",
      "source": "github",
      "stars": 117,
      "lastUpdated": "2025-08-14T08:25:38Z"
    },
    "tags": [
      "official"
    ],
    "serverName": "dynatrace",
    "serverConfig": {
      "type": "stdio",
      "command": "npx",
      "args": [
        "-y",
        "@dynatrace-oss/dynatrace-mcp-server@latest"
      ],
      "env": {
        "OAUTH_CLIENT_ID": "",
        "OAUTH_CLIENT_SECRET": "",
        "DT_ENVIRONMENT": ""
      }
    }
  },
  {
    "id": "e2b:b650362d",
    "icon": "https://e2b.dev/favicon.ico",
    "name": "E2B",
    "description": "Run code in secure sandboxes hosted by E2B",
    "repository": {
      "url": "https://github.com/e2b-dev/mcp-server",
      "source": "github",
      "stars": 310,
      "lastUpdated": "2025-08-15T11:11:43Z"
    },
    "tags": [
      "official"
    ]
  },
  {
    "id": "edgee:33a23d82",
    "icon": "https://www.edgee.cloud/favicon.ico",
    "name": "Edgee",
    "description": "Deploy and manage Edgee components and projects",
    "repository": {
      "url": "https://github.com/edgee-cloud/mcp-server-edgee",
      "source": "github",
      "stars": 0,
      "lastUpdated": "2025-04-14T09:44:37Z"
    },
    "tags": [
      "official"
    ],
    "serverName": "edgee",
    "serverConfig": {
      "type": "stdio",
      "command": "npx",
      "args": [
        "-y",
        "@edgee/mcp-server-edgee"
      ],
      "env": {
        "EDGEE_TOKEN": "<YOUR_TOKEN>"
      }
    }
  },
  {
    "id": "edubase:1d519189",
    "icon": "https://static.edubase.net/media/brand/favicon/favicon-32x32.png",
    "name": "EduBase",
    "description": "Interact with EduBase, a comprehensive e-learning platform with advanced quizzing, exam management, and content organization capabilities",
    "repository": {
      "url": "https://github.com/EduBase/MCP",
      "source": "github",
      "stars": 20,
      "lastUpdated": "2025-08-11T20:11:47Z"
    },
    "tags": [
      "official"
    ],
    "serverName": "edubase",
    "serverConfig": {
      "type": "stdio",
      "command": "docker",
      "args": [
        "run",
        "-i",
        "--rm",
        "-e",
        "EDUBASE_API_URL",
        "-e",
        "EDUBASE_API_APP",
        "-e",
        "EDUBASE_API_KEY",
        "edubase/mcp"
      ],
      "env": {
        "EDUBASE_API_URL": "https://domain.edubase.net/api",
        "EDUBASE_API_APP": "your_integration_app_id",
        "EDUBASE_API_KEY": "your_integration_secret_key"
      }
    }
  },
  {
    "id": "elasticsearch:6e47eeb1",
    "icon": "https://www.elastic.co/favicon.ico",
    "name": "Elasticsearch",
    "description": "Query your data in Elasticsearch",
    "repository": {
      "url": "https://github.com/elastic/mcp-server-elasticsearch",
      "source": "github",
      "stars": 416,
      "lastUpdated": "2025-08-16T14:34:16Z"
    },
    "tags": [
      "official"
    ],
    "serverName": "elasticsearch",
    "serverConfig": {
      "type": "stdio",
      "command": "docker",
      "args": [
        "run",
        "-i",
        "--rm",
        "-e",
        "ES_URL",
        "-e",
        "ES_API_KEY",
        "docker.elastic.co/mcp/elasticsearch",
        "stdio"
      ],
      "env": {
        "ES_URL": "<elasticsearch-cluster-url>",
        "ES_API_KEY": "<elasticsearch-API-key>"
      }
    }
  },
  {
    "id": "endor-labs:045fc737",
    "icon": "https://cdn.prod.website-files.com/656eaf5c6da3527caf362363/656ecc07555afac40df4c40e_Facicon.png",
    "name": "Endor Labs",
    "description": "Find and fix security risks in you code. Integrate Endor Labs to scan and secure your code from vulnerabilities and secret leaks.",
    "repository": {
      "url": "https://docs.endorlabs.com/deployment/ide/mcp/",
      "source": "other"
    },
    "tags": [
      "official"
    ]
  },
  {
    "id": "esignatures:c929a9ee",
    "icon": "https://esignatures.com/favicon.ico",
    "name": "eSignatures",
    "description": "Contract and template management for drafting, reviewing, and sending binding contracts.",
    "repository": {
      "url": "https://github.com/esignaturescom/mcp-server-esignatures",
      "source": "github",
      "stars": 27,
      "lastUpdated": "2025-08-14T09:41:02Z"
    },
    "tags": [
      "official"
    ]
  },
  {
    "id": "esp-rainmaker:a8766e92",
    "icon": "https://rainmaker.espressif.com/favicon.ico",
    "name": "ESP RainMaker",
    "description": "Official Espressif MCP Server to Control and Manage ESP RainMaker Devices.",
    "repository": {
      "url": "https://github.com/espressif/esp-rainmaker-mcp",
      "source": "github",
      "stars": 5,
      "lastUpdated": "2025-08-15T17:35:32Z"
    },
    "tags": [
      "official"
    ],
    "serverName": "esp-rainmaker",
    "serverConfig": {
      "type": "stdio",
      "command": "uv",
      "args": [
        "run",
        "--with",
        "esp-rainmaker-cli",
        "--with",
        "mcp[cli]",
        "mcp",
        "run",
        "<absolute_path_to_repo>/server.py"
      ]
    }
  },
  {
    "id": "exa:084da3f4",
    "icon": "https://exa.ai/images/favicon-32x32.png",
    "name": "Exa",
    "description": "Search Engine made for AIs by Exa",
    "repository": {
      "url": "https://github.com/exa-labs/exa-mcp-server",
      "source": "github",
      "stars": 2104,
      "lastUpdated": "2025-08-16T23:43:05Z"
    },
    "tags": [
      "official"
    ],
    "serverName": "exa",
    "serverConfig": {
      "type": "stdio",
      "command": "npx",
      "args": [
        "-y",
        "exa-mcp-server"
      ],
      "env": {
        "EXA_API_KEY": "your-api-key-here"
      }
    }
  },
  {
    "id": "falkordb:abe54bd0",
    "icon": null,
    "name": "FalkorDB",
    "description": "FalkorDB graph database server get schema and read/write-cypher FalkorDB",
    "repository": {
      "url": "https://github.com/FalkorDB/FalkorDB-MCPServer",
      "source": "github",
      "stars": 13,
      "lastUpdated": "2025-07-06T21:12:54Z"
    },
    "tags": [
      "official"
    ],
    "serverName": "falkordb",
    "serverConfig": {
      "type": "stdio",
      "command": "docker",
      "args": [
        "run",
        "-i",
        "--rm",
        "-p",
        "3000:3000",
        "--env-file",
        ".env",
        "falkordb-mcpserver",
        "falkordb://host.docker.internal:6379"
      ]
    }
  },
  {
    "id": "fetchserp:0864b4f3",
    "icon": "https://fetchserp.com/icon.png",
    "name": "fetchSERP",
    "description": "All-in-One SEO & Web Intelligence Toolkit API fetchSERP",
    "repository": {
      "url": "https://github.com/fetchSERP/fetchserp-mcp-server-node",
      "source": "github",
      "stars": 13,
      "lastUpdated": "2025-08-16T12:58:23Z"
    },
    "tags": [
      "official"
    ],
    "serverName": "fetchserp",
    "serverConfig": {
      "type": "stdio",
      "command": "npx",
      "args": [
        "github:fetchSERP/fetchserp-mcp-server-node"
      ],
      "env": {
        "FETCHSERP_API_TOKEN": "your_fetchserp_api_token_here"
      }
    }
  },
  {
    "id": "fewsats:8170b63c",
    "icon": "https://fewsats.com/favicon.svg",
    "name": "Fewsats",
    "description": "Enable AI Agents to purchase anything in a secure way using Fewsats",
    "repository": {
      "url": "https://github.com/Fewsats/fewsats-mcp",
      "source": "github",
      "stars": 18,
      "lastUpdated": "2025-08-14T23:12:24Z"
    },
    "tags": [
      "official"
    ],
    "serverName": "fewsats",
    "serverConfig": {
      "type": "stdio",
      "command": "uvx",
      "args": [
        "fewsats-mcp"
      ],
      "env": {
        "FEWSATS_API_KEY": "YOUR_FEWSATS_API_KEY"
      }
    }
  },
  {
    "id": "fibery:3952f285",
    "icon": "https://fibery.io/favicon.svg",
    "name": "Fibery",
    "description": "Perform queries and entity operations in your Fibery workspace.",
    "repository": {
      "url": "https://github.com/Fibery-inc/fibery-mcp-server",
      "source": "github",
      "stars": 26,
      "lastUpdated": "2025-08-08T16:25:14Z"
    },
    "tags": [
      "official"
    ],
    "serverName": "fibery",
    "serverConfig": {
      "type": "stdio",
      "command": "uv",
      "args": [
        "tool",
        "run",
        "fibery-mcp-server",
        "--fibery-host",
        "your-domain.fibery.io",
        "--fibery-api-token",
        "your-api-token"
      ]
    }
  },
  {
    "id": "financial-datasets:08b1bd01",
    "icon": "https://financialdatasets.ai/favicon.ico",
    "name": "Financial Datasets",
    "description": "Stock market API made for AI agents",
    "repository": {
      "url": "https://github.com/financial-datasets/mcp-server",
      "source": "github",
      "stars": 467,
      "lastUpdated": "2025-08-16T06:37:03Z"
    },
    "tags": [
      "official"
    ]
  },
  {
    "id": "firebase:c0ac596a",
    "icon": "https://www.gstatic.com/devrel-devsite/prod/v7aeef7f1393bb1d75a4489145c511cdd5aeaa8e13ad0a83ec1b5b03612e66330/firebase/images/favicon.png",
    "name": "Firebase",
    "description": "Firebase's experimental MCP Server to power your AI Tools",
    "repository": {
      "url": "https://github.com/firebase/firebase-tools/blob/master/src/mcp",
      "source": "github",
      "stars": 4196,
      "lastUpdated": "2025-08-16T19:32:01Z"
    },
    "tags": [
      "official"
    ]
  },
  {
    "id": "firecrawl:4d67be54",
    "icon": "https://firecrawl.dev/favicon.ico",
    "name": "Firecrawl",
    "description": "Extract web data with Firecrawl",
    "repository": {
      "url": "https://github.com/mendableai/firecrawl-mcp-server",
      "source": "github",
      "stars": 4191,
      "lastUpdated": "2025-08-17T02:17:55Z"
    },
    "tags": [
      "official"
    ],
    "serverName": "firecrawl",
    "serverConfig": {
      "type": "stdio",
      "command": "npx",
      "args": [
        "-y",
        "firecrawl-mcp"
      ],
      "env": {
        "FIRECRAWL_API_KEY": "YOUR_API_KEY"
      }
    }
  },
  {
    "id": "firefly:6e9b3c53",
    "icon": "https://avatars.githubusercontent.com/u/100200663?s=200&v=4",
    "name": "Firefly",
    "description": "Integrates, discovers, manages, and codifies cloud resources with Firefly.",
    "repository": {
      "url": "https://github.com/gofireflyio/firefly-mcp",
      "source": "github",
      "stars": 12,
      "lastUpdated": "2025-08-16T12:59:28Z"
    },
    "tags": [
      "official"
    ]
  },
  {
    "id": "fireproof:fd711154",
    "icon": "https://fireproof.storage/favicon.ico",
    "name": "Fireproof",
    "description": "Immutable ledger database with live synchronization",
    "repository": {
      "url": "https://github.com/fireproof-storage/mcp-database-server",
      "source": "github",
      "stars": 23,
      "lastUpdated": "2025-08-14T14:17:48Z"
    },
    "tags": [
      "official"
    ],
    "serverName": "fireproof",
    "serverConfig": {
      "type": "stdio",
      "command": "/path/to/fireproof-mcp/build/index.js"
    }
  },
  {
    "id": "fixparser:42257f13",
    "icon": "https://fixparser.dev/favicon.ico",
    "name": "FIXParser",
    "description": "A modern FIX Protocol engine for AI-powered trading agents",
    "repository": {
      "url": "https://gitlab.com/logotype/fixparser/-/tree/main/packages/fixparser-plugin-mcp",
      "source": "gitlab"
    },
    "tags": [
      "official"
    ]
  },
  {
    "id": "fluid-attacks:88d5fd63",
    "icon": "https://avatars.githubusercontent.com/u/52471808",
    "name": "Fluid Attacks",
    "description": "Interact with the Fluid Attacks API, enabling vulnerability management, organization insights, and GraphQL query execution.",
    "repository": {
      "url": "https://github.com/fluidattacks/mcp",
      "source": "github",
      "stars": 0,
      "lastUpdated": "2025-05-02T13:51:46Z"
    },
    "tags": [
      "official"
    ],
    "serverName": "fluid-attacks",
    "serverConfig": {
      "type": "stdio",
      "command": "npx",
      "args": [
        "-y",
        "@fluidattacks/mcp"
      ],
      "env": {
        "API_TOKEN": "your_api_token_here"
      }
    }
  },
  {
    "id": "forevervm:3f63187e",
    "icon": "https://forevervm.com/icon.png",
    "name": "ForeverVM",
    "description": "Run Python in a code sandbox.",
    "repository": {
      "url": "https://github.com/jamsocket/forevervm/tree/main/javascript/mcp-server",
      "source": "github",
      "stars": 217,
      "lastUpdated": "2025-08-09T19:05:36Z"
    },
    "tags": [
      "official"
    ]
  },
  {
    "id": "gibsonai:4e19eba8",
    "icon": "https://app.gibsonai.com/favicon.ico",
    "name": "GibsonAI",
    "description": "AI-Powered Cloud databases: Build, migrate, and deploy database instances with AI",
    "repository": {
      "url": "https://github.com/GibsonAI/mcp",
      "source": "github",
      "stars": 18,
      "lastUpdated": "2025-08-16T12:49:10Z"
    },
    "tags": [
      "official"
    ],
    "serverName": "gibsonai",
    "serverConfig": {
      "type": "stdio",
      "command": "uvx",
      "args": [
        "--from",
        "gibson-cli@latest",
        "gibson",
        "mcp",
        "run"
      ]
    }
  },
  {
    "id": "gitea:762048e4",
    "icon": "https://gitea.com/assets/img/favicon.svg",
    "name": "Gitea",
    "description": "Interact with Gitea instances with MCP.",
    "repository": {
      "url": "https://gitea.com/gitea/gitea-mcp",
      "source": "other"
    },
    "tags": [
      "official"
    ]
  },
  {
    "id": "gitee:f44a858c",
    "icon": "https://gitee.com/favicon.ico",
    "name": "Gitee",
    "description": "Gitee API integration, repository, issue, and pull request management, and more.",
    "repository": {
      "url": "https://github.com/oschina/mcp-gitee",
      "source": "github",
      "stars": 35,
      "lastUpdated": "2025-08-11T19:12:59Z"
    },
    "tags": [
      "official"
    ],
    "serverName": "gitee",
    "serverConfig": {
      "type": "stdio",
      "command": "npx",
      "args": [
        "-y",
        "@gitee/mcp-gitee@latest"
      ],
      "env": {
        "GITEE_API_BASE": "https://gitee.com/api/v5",
        "GITEE_ACCESS_TOKEN": "<your personal access token>"
      }
    }
  },
  {
    "id": "gitguardian:6ea97b94",
    "icon": "https://cdn.prod.website-files.com/5ee25cbe47310017adf964da/6323888a9b9f4e22a7bc766b_GG%20Favicon.svg",
    "name": "GitGuardian",
    "description": "GitGuardian official MCP server - Scan projects using GitGuardian's industry-leading API, which features over 500 secret detectors to prevent credential leaks before they reach public repositories. Resolve security incidents directly with rich contextual data for rapid, automated remediation.",
    "repository": {
      "url": "https://github.com/GitGuardian/gg-mcp",
      "source": "github",
      "stars": 20,
      "lastUpdated": "2025-08-14T18:11:29Z"
    },
    "tags": [
      "official"
    ],
    "serverName": "gitguardian",
    "serverConfig": {
      "type": "stdio",
      "command": "uvx",
      "args": [
        "--from",
        "git+https://github.com/GitGuardian/gg-mcp.git",
        "developer-mcp-server"
      ],
      "env": {
        "GITGUARDIAN_URL": "https://dashboard.gitguardian.mycorp.local"
      }
    }
  },
  {
    "id": "github:faa31886",
    "icon": "https://github.githubassets.com/assets/GitHub-Mark-ea2971cee799.png",
    "name": "GitHub",
    "description": "GitHub's official MCP Server.",
    "repository": {
      "url": "https://github.com/github/github-mcp-server",
      "source": "github",
      "stars": 21112,
      "lastUpdated": "2025-08-17T02:22:25Z"
    },
    "tags": [
      "official"
    ],
    "serverName": "github",
    "serverConfig": {
      "type": "http",
      "url": "https://api.githubcopilot.com/mcp/"
    }
  },
  {
    "id": "gitkraken:d01c9ba1",
    "icon": "https://www.gitkraken.com/wp-content/uploads/2021/03/android-chrome-144x144-1.png",
    "name": "GitKraken",
    "description": "A CLI for interacting with GitKraken APIs. Includes an MCP server via `gk mcp` that not only wraps GitKraken APIs, but also Jira, GitHub, GitLab, and more.",
    "repository": {
      "url": "https://github.com/gitkraken/gk-cli?tab=readme-ov-file#mcp-server",
      "source": "github",
      "stars": 259,
      "lastUpdated": "2025-08-17T02:04:16Z"
    },
    "tags": [
      "official"
    ]
  },
  {
    "id": "glean:58c7467f",
    "icon": "https://app.glean.com/images/favicon3-196x196.png",
    "name": "Glean",
    "description": "Enterprise search and chat using Glean's API.",
    "repository": {
      "url": "https://github.com/gleanwork/mcp-server",
      "source": "github",
      "stars": 45,
      "lastUpdated": "2025-08-15T01:00:45Z"
    },
    "tags": [
      "official"
    ]
  },
  {
    "id": "globalping:7918b4ac",
    "icon": "https://cdn.jsdelivr.net/gh/jsdelivr/globalping-media@refs/heads/master/icons/android-chrome-192x192.png",
    "name": "Globalping",
    "description": "Access a network of thousands of probes to run network commands like ping, traceroute, mtr, http and DNS resolve.",
    "repository": {
      "url": "https://github.com/jsdelivr/globalping-mcp-server",
      "source": "github",
      "stars": 16,
      "lastUpdated": "2025-08-04T22:11:59Z"
    },
    "tags": [
      "official"
    ],
    "serverName": "globalping",
    "serverConfig": {
      "type": "stdio",
      "command": "npx",
      "args": [
        "mcp-remote",
        "https://mcp.globalping.dev/mcp"
      ]
    }
  },
  {
    "id": "gnucleus-text-to-cad:a6bde7f2",
    "icon": "https://gnucleus.ai/favicon.ico",
    "name": "gNucleus Text-To-CAD",
    "description": "Generate CAD parts and assemblies from text using gNucleus AI models.",
    "repository": {
      "url": "https://github.com/gNucleus/text-to-cad-mcp",
      "source": "github",
      "stars": 9,
      "lastUpdated": "2025-08-08T17:02:12Z"
    },
    "tags": [
      "official"
    ],
    "serverName": "gnucleus-text-to-cad",
    "serverConfig": {
      "type": "stdio",
      "command": "/ABSOLUTE/PATH/TO/YOUR/text-to-cad-mcp/.venv/bin/python",
      "args": [
        "/ABSOLUTE/PATH/TO/YOUR/text-to-cad-mcp/main.py"
      ],
      "env": {
        "GNUCLEUS_HOST": "genai.gnucleus.ai",
        "GNUCLEUS_API_KEY": "YOUR_API_KEY_HERE"
      }
    }
  },
  {
    "id": "google-cloud-run:3c1a3890",
    "icon": "https://www.gstatic.com/cgc/favicon.ico",
    "name": "Google Cloud Run",
    "description": "Deploy code to Google Cloud Run",
    "repository": {
      "url": "https://github.com/GoogleCloudPlatform/cloud-run-mcp",
      "source": "github",
      "stars": 322,
      "lastUpdated": "2025-08-16T20:45:01Z"
    },
    "tags": [
      "official"
    ],
    "serverName": "google-cloud-run",
    "serverConfig": {
      "type": "stdio",
      "command": "npx",
      "args": [
        "-y",
        "@google-cloud/cloud-run-mcp"
      ]
    }
  },
  {
    "id": "gologin-mcp-server:172992a2",
    "icon": "https://api.gologin.com/favicon.ico",
    "name": "GoLogin MCP server",
    "description": "Manage your GoLogin browser profiles and automation directly through AI conversations!",
    "repository": {
      "url": "https://github.com/gologinapp/gologin-mcp",
      "source": "github",
      "stars": 6,
      "lastUpdated": "2025-08-12T15:48:56Z"
    },
    "tags": [
      "official"
    ]
  },
  {
    "id": "google-maps-platform-code-assist:c402033c",
    "icon": "https://avatars.githubusercontent.com/u/3717923?s=200&v=4",
    "name": "Google Maps Platform Code Assist",
    "description": "Ground agents on fresh, official documentation and code samples for optimal geo-related guidance and code..",
    "repository": {
      "url": "https://github.com/googlemaps/platform-ai/tree/main/packages/code-assist",
      "source": "github",
      "stars": 16,
      "lastUpdated": "2025-08-17T01:52:30Z"
    },
    "tags": [
      "official"
    ],
    "serverName": "google-maps-platform-code-assist",
    "serverConfig": {
      "type": "stdio",
      "command": "npx",
      "args": [
        "-y",
        "@googlemaps/code-assist-mcp",
        "--port",
        "5000"
      ]
    }
  },
  {
    "id": "gotohuman:acaabc5c",
    "icon": "https://cdn.prod.website-files.com/6605a2979ff17b2cd1939cd4/6605a460de47e7596ed84f06_icon256.png",
    "name": "gotoHuman",
    "description": "Human-in-the-loop platform - Allow AI agents and automations to send requests for approval to your gotoHuman inbox.",
    "repository": {
      "url": "https://github.com/gotohuman/gotohuman-mcp-server",
      "source": "github",
      "stars": 37,
      "lastUpdated": "2025-08-16T08:00:46Z"
    },
    "tags": [
      "official"
    ],
    "serverName": "gotohuman",
    "serverConfig": {
      "type": "stdio",
      "command": "npx",
      "args": [
        "-y",
        "@gotohuman/mcp-server"
      ],
      "env": {
        "GOTOHUMAN_API_KEY": "your-api-key"
      }
    }
  },
  {
    "id": "grafana:9e46c3d7",
    "icon": "https://grafana.com/favicon.ico",
    "name": "Grafana",
    "description": "Search dashboards, investigate incidents and query datasources in your Grafana instance",
    "repository": {
      "url": "https://github.com/grafana/mcp-grafana",
      "source": "github",
      "stars": 1411,
      "lastUpdated": "2025-08-16T21:07:03Z"
    },
    "tags": [
      "official"
    ],
    "serverName": "grafana",
    "serverConfig": {
      "type": "stdio",
      "command": "docker",
      "args": [
        "run",
        "--rm",
        "-i",
        "-e",
        "GRAFANA_URL",
        "-e",
        "GRAFANA_API_KEY",
        "mcp/grafana",
        "-t",
        "stdio"
      ],
      "env": {
        "GRAFANA_URL": "http://localhost:3000",
        "GRAFANA_API_KEY": "<your service account token>"
      }
    }
  },
  {
    "id": "grafbase:70dda3cb",
    "icon": "https://grafbase.com/favicon.ico",
    "name": "Grafbase",
    "description": "Turn your GraphQL API into an efficient MCP server with schema intelligence in a single command.",
    "repository": {
      "url": "https://github.com/grafbase/grafbase/tree/main/crates/mcp",
      "source": "github",
      "stars": 1153,
      "lastUpdated": "2025-08-16T08:25:28Z"
    },
    "tags": [
      "official"
    ],
    "serverName": "grafbase",
    "serverConfig": {
      "type": "streamable",
      "url": "http://127.0.0.1:5000/mcp"
    }
  },
  {
    "id": "grain:27733308",
    "icon": "https://cdn.prod.website-files.com/5f5e90c17e7c9eb95c7acb17/61d3457a519242f2c75c725c_favicon.png",
    "name": "Grain",
    "description": "Access your Grain meetings notes & transcripts directly in claude and generate reports with native Claude Prompts.",
    "repository": {
      "url": "https://grain.com/release-note/06-18-2025",
      "source": "other"
    },
    "tags": [
      "official"
    ]
  },
  {
    "id": "graphlit:eb40c032",
    "icon": "https://framerusercontent.com/images/KCOWBYLKunDff1Dr452y6EfjiU.png",
    "name": "Graphlit",
    "description": "Ingest anything from Slack to Gmail to podcast feeds, in addition to web crawling, into a searchable Graphlit project.",
    "repository": {
      "url": "https://github.com/graphlit/graphlit-mcp-server",
      "source": "github",
      "stars": 347,
      "lastUpdated": "2025-08-14T10:20:11Z"
    },
    "tags": [
      "official"
    ]
  },
  {
    "id": "gremlin:ea067cf9",
    "icon": "https://cdn.prod.website-files.com/64a5291e7847ac04fe1531ad/64a529af2f1fc7debc26f2a6_favicon-32x32.avif",
    "name": "Gremlin",
    "description": "The official Gremlin MCP server. Analyze your reliability posture, review recent tests and chaos engineering experiments, and create detailed reports.",
    "repository": {
      "url": "https://github.com/gremlin/mcp",
      "source": "github",
      "stars": 0,
      "lastUpdated": "2025-08-11T13:42:29Z"
    },
    "tags": [
      "official"
    ],
    "serverName": "gremlin",
    "serverConfig": {
      "type": "stdio",
      "command": "node",
      "args": [
        "/path/to/gremlin-mcp/build/main.mjs"
      ],
      "env": {
        "GREMLIN_API_KEY": "your_gremlin_api_key_here"
      }
    }
  },
  {
    "id": "greptimedb:cf4fad4c",
    "icon": "https://greptime.com/favicon.ico",
    "name": "GreptimeDB",
    "description": "Provides AI assistants with a secure and structured way to explore and analyze data in GreptimeDB.",
    "repository": {
      "url": "https://github.com/GreptimeTeam/greptimedb-mcp-server",
      "source": "github",
      "stars": 21,
      "lastUpdated": "2025-07-21T14:34:35Z"
    },
    "tags": [
      "official"
    ],
    "serverName": "greptimedb",
    "serverConfig": {
      "type": "stdio",
      "command": "uv",
      "args": [
        "--directory",
        "/path/to/greptimedb-mcp-server",
        "run",
        "-m",
        "greptimedb_mcp_server.server"
      ],
      "env": {
        "GREPTIMEDB_HOST": "localhost",
        "GREPTIMEDB_PORT": "4002",
        "GREPTIMEDB_USER": "root",
        "GREPTIMEDB_PASSWORD": "",
        "GREPTIMEDB_DATABASE": "public",
        "GREPTIMEDB_TIMEZONE": ""
      }
    }
  },
  {
    "id": "growi:08d19a0c",
    "icon": "https://growi.org/assets/images/favicon.ico",
    "name": "GROWI",
    "description": "Official MCP Server to integrate with GROWI APIs.",
    "repository": {
      "url": "https://github.com/growilabs/growi-mcp-server",
      "source": "github",
      "stars": 3,
      "lastUpdated": "2025-07-07T09:15:53Z"
    },
    "tags": [
      "official"
    ],
    "serverName": "growi",
    "serverConfig": {
      "type": "stdio",
      "command": "npx",
      "args": [
        "@growi/mcp-server"
      ],
      "env": {
        "GROWI_BASE_URL": "https://your-growi-instance.com",
        "GROWI_API_TOKEN": "your_growi_api_token"
      }
    }
  },
  {
    "id": "gyazo:0ee25cf2",
    "icon": "https://gyazo.com/favicon.ico",
    "name": "Gyazo",
    "description": "Search, fetch, upload, and interact with Gyazo images, including metadata and OCR data.",
    "repository": {
      "url": "https://github.com/nota/gyazo-mcp-server",
      "source": "github",
      "stars": 23,
      "lastUpdated": "2025-07-31T00:37:08Z"
    },
    "tags": [
      "official"
    ],
    "serverName": "gyazo",
    "serverConfig": {
      "type": "stdio",
      "command": "npx",
      "args": [
        "@notainc/gyazo-mcp-server"
      ],
      "env": {
        "GYAZO_ACCESS_TOKEN": "your-access-token-here"
      }
    }
  },
  {
    "id": "harper:79f54946",
    "icon": "https://cdn.prod.website-files.com/6374050260446c42f94dc90f/63d828be3e13d32ee6973f35_favicon-32x32.png",
    "name": "Harper",
    "description": "An MCP server providing an interface for MCP clients to access data within Harper.",
    "repository": {
      "url": "https://github.com/HarperDB/mcp-server",
      "source": "github",
      "stars": 14,
      "lastUpdated": "2025-07-24T04:18:01Z"
    },
    "tags": [
      "official"
    ]
  },
  {
    "id": "heroku:8aecfb2e",
    "icon": "https://www.herokucdn.com/favicons/favicon.ico",
    "name": "Heroku",
    "description": "Interact with the Heroku Platform through LLM-driven tools for managing apps, add-ons, dynos, databases, and more.",
    "repository": {
      "url": "https://github.com/heroku/heroku-mcp-server",
      "source": "github",
      "stars": 55,
      "lastUpdated": "2025-08-05T13:16:39Z"
    },
    "tags": [
      "official"
    ],
    "serverName": "heroku",
    "serverConfig": {
      "type": "stdio",
      "command": "npx",
      "args": [
        "-y",
        "@heroku/mcp-server"
      ],
      "env": {
        "HEROKU_API_KEY": "<YOUR_HEROKU_AUTH_TOKEN>"
      }
    }
  },
  {
    "id": "hiveflow:5715fe2c",
    "icon": "https://www.hiveflow.ai/favicon.ico",
    "name": "Hiveflow",
    "description": "Create, manage, and execute agentic AI workflows directly from your assistant.",
    "repository": {
      "url": "https://github.com/hiveflowai/hiveflow-mcp-server",
      "source": "github",
      "stars": 1,
      "lastUpdated": "2025-07-07T17:27:11Z"
    },
    "tags": [
      "official"
    ],
    "serverName": "hiveflow",
    "serverConfig": {
      "type": "stdio",
      "command": "npx",
      "args": [
        "-y",
        "@hiveflow/mcp-server"
      ],
      "env": {
        "HIVEFLOW_API_KEY": "your-api-key-here",
        "HIVEFLOW_API_URL": "https://api.hiveflow.ai"
      }
    }
  },
  {
    "id": "hologres:80770aff",
    "icon": "https://img.alicdn.com/imgextra/i3/O1CN01d9qrry1i6lTNa2BRa_!!6000000004364-2-tps-218-200.png",
    "name": "Hologres",
    "description": "Connect to a Hologres instance, get table metadata, query and analyze data.",
    "repository": {
      "url": "https://github.com/aliyun/alibabacloud-hologres-mcp-server",
      "source": "github",
      "stars": 24,
      "lastUpdated": "2025-08-10T11:57:14Z"
    },
    "tags": [
      "official"
    ],
    "serverName": "hologres",
    "serverConfig": {
      "type": "stdio",
      "command": "uvx",
      "args": [
        "hologres-mcp-server"
      ],
      "env": {
        "HOLOGRES_HOST": "host",
        "HOLOGRES_PORT": "port",
        "HOLOGRES_USER": "access_id",
        "HOLOGRES_PASSWORD": "access_key",
        "HOLOGRES_DATABASE": "database"
      }
    }
  },
  {
    "id": "homebrew:ead54c94",
    "icon": "https://brew.sh/assets/img/favicon.ico",
    "name": "Homebrew",
    "description": "",
    "repository": {
      "url": "https://docs.brew.sh/MCP-Server",
      "source": "other"
    },
    "tags": [
      "official"
    ]
  },
  {
    "id": "honeycomb:8a0ec216",
    "icon": "https://www.honeycomb.io/favicon.ico",
    "name": "Honeycomb",
    "description": "",
    "repository": {
      "url": "https://github.com/honeycombio/honeycomb-mcp",
      "source": "github",
      "stars": 36,
      "lastUpdated": "2025-08-13T20:20:25Z"
    },
    "tags": [
      "official"
    ],
    "serverName": "honeycomb",
    "serverConfig": {
      "type": "stdio",
      "command": "node",
      "args": [
        "/fully/qualified/path/to/honeycomb-mcp/build/index.mjs"
      ],
      "env": {
        "HONEYCOMB_API_KEY": "your_api_key"
      }
    }
  },
  {
    "id": "hubspot:d5d4a5da",
    "icon": "https://static.hsinfrastatic.net/StyleGuideUI/static-3.438/img/sprocket/favicon-32x32.png",
    "name": "HubSpot",
    "description": "Connect, manage, and interact with HubSpot CRM data",
    "repository": {
      "url": "https://developer.hubspot.com/mcp",
      "source": "other"
    },
    "tags": [
      "official"
    ]
  },
  {
    "id": "hugging-face:df900a04",
    "icon": "https://huggingface.co/datasets/huggingface/brand-assets/resolve/main/hf-logo.svg",
    "name": "Hugging Face",
    "description": "Connect to the Hugging Face Hub APIs programmatically: semantic search for spaces and papers, exploration of datasets and models, and access to all compatible MCP Gradio tool spaces!",
    "repository": {
      "url": "https://huggingface.co/settings/mcp",
      "source": "other"
    },
    "tags": [
      "official"
    ]
  },
  {
    "id": "hunter:7a1f7b98",
    "icon": "https://hunter.io/favicon.ico",
    "name": "Hunter",
    "description": "Interact with the Hunter API to get B2B data using natural language.",
    "repository": {
      "url": "https://github.com/hunter-io/hunter-mcp",
      "source": "github",
      "stars": 6,
      "lastUpdated": "2025-08-04T08:07:19Z"
    },
    "tags": [
      "official"
    ],
    "serverName": "hunter",
    "serverConfig": {
      "type": "stdio",
      "command": "uv",
      "args": [
        "run",
        "--with",
        "mcp[cli]",
        "mcp",
        "run",
        "PATH_TO_hunter-mcp/main.py"
      ],
      "env": {
        "HUNTER_API_KEY": "YOUR_HUNTER_API_KEY"
      }
    }
  },
  {
    "id": "hyperbolic:32696e59",
    "icon": "https://app.hyperbolic.xyz/hyperbolic-logo.svg",
    "name": "Hyperbolic",
    "description": "Interact with Hyperbolic's GPU cloud, enabling agents and LLMs to view and rent available GPUs, SSH into them, and run GPU-powered workloads for you.",
    "repository": {
      "url": "https://github.com/HyperbolicLabs/hyperbolic-mcp",
      "source": "github",
      "stars": 13,
      "lastUpdated": "2025-07-20T11:49:54Z"
    },
    "tags": [
      "official"
    ],
    "serverName": "hyperbolic",
    "serverConfig": {
      "type": "stdio",
      "command": "node",
      "args": [
        "/path/to/hyperbolic-mcp-server/build/index.js"
      ],
      "env": {
        "HYPERBOLIC_API_TOKEN": "your-hyperbolic-api-token",
        "SSH_PRIVATE_KEY_PATH": "/path/to/your/privatekey"
      }
    }
  },
  {
    "id": "hyperbrowser:4541e10e",
    "icon": "https://hyperbrowser-assets-bucket.s3.us-east-1.amazonaws.com/Hyperbrowser-logo.png",
    "name": "Hyperbrowser",
    "description": "Hyperbrowser is the next-generation platform empowering AI agents and enabling effortless, scalable browser automation.",
    "repository": {
      "url": "https://github.com/hyperbrowserai/mcp",
      "source": "github",
      "stars": 572,
      "lastUpdated": "2025-08-16T04:49:59Z"
    },
    "tags": [
      "official"
    ],
    "serverName": "hyperbrowser",
    "serverConfig": {
      "type": "stdio",
      "command": "npx",
      "args": [
        "-y",
        "hyperbrowser-mcp"
      ],
      "env": {
        "HYPERBROWSER_API_KEY": "YOUR-API-KEY"
      }
    }
  },
  {
    "id": "ibm-wxflows:8aa88b47",
    "icon": null,
    "name": "IBM wxflows",
    "description": "Tool platform by IBM to build, test and deploy tools for any data source",
    "repository": {
      "url": "https://github.com/IBM/wxflows/tree/main/examples/mcp/javascript",
      "source": "github",
      "stars": 100,
      "lastUpdated": "2025-08-13T22:18:53Z"
    },
    "tags": [
      "official"
    ],
    "serverName": "ibm-wxflows",
    "serverConfig": {
      "type": "stdio",
      "command": "node",
      "args": [
        "/path/to/wxflows-server/build/index.js"
      ],
      "env": {
        "WXFLOWS_APIKEY": "YOUR_WXFLOWS_APIKEY",
        "WXFLOWS_ENDPOINT": "YOUR_WXFLOWS_ENDPOINT"
      }
    }
  },
  {
    "id": "inbox-zero:841f6ba2",
    "icon": "https://www.getinboxzero.com/icon.png",
    "name": "Inbox Zero",
    "description": "AI personal assistant for email Inbox Zero",
    "repository": {
      "url": "https://github.com/elie222/inbox-zero/tree/main/apps/mcp-server",
      "source": "github",
      "stars": 8564,
      "lastUpdated": "2025-08-16T21:00:52Z"
    },
    "tags": [
      "official"
    ]
  },
  {
    "id": "inflectra-spira:d15d2a2c",
    "icon": "https://www.inflectra.com/Favicon.ico",
    "name": "Inflectra Spira",
    "description": "Connect to your instance of the SpiraTest, SpiraTeam or SpiraPlan application lifecycle management platform by Inflectra",
    "repository": {
      "url": "https://github.com/Inflectra/mcp-server-spira",
      "source": "github",
      "stars": 0,
      "lastUpdated": "2025-08-13T16:54:16Z"
    },
    "tags": [
      "official"
    ],
    "serverName": "inflectra-spira",
    "serverConfig": {
      "type": "stdio",
      "command": "uv",
      "args": [
        "--directory",
        "C:\\Git\\mcp-server-spira",
        "run",
        "main.py"
      ],
      "env": {
        "INFLECTRA_SPIRA_BASE_URL": "https://mycompany.spiraservice.net",
        "INFLECTRA_SPIRA_USERNAME": "login",
        "INFLECTRA_SPIRA_API_KEY": "{XXXXXX-XXXXXXX-XXXXXXX-XXXXXXX-XXXXX}"
      }
    }
  },
  {
    "id": "inkeep:89ba7b65",
    "icon": "https://inkeep.com/favicon.ico",
    "name": "Inkeep",
    "description": "RAG Search over your content powered by Inkeep",
    "repository": {
      "url": "https://github.com/inkeep/mcp-server-python",
      "source": "github",
      "stars": 18,
      "lastUpdated": "2025-07-09T13:41:07Z"
    },
    "tags": [
      "official"
    ],
    "serverName": "inkeep",
    "serverConfig": {
      "type": "stdio",
      "command": "uv",
      "args": [
        "--directory",
        "<YOUR_INKEEP_MCP_SERVER_ABSOLUTE_PATH>",
        "run",
        "-m",
        "inkeep_mcp_server"
      ],
      "env": {
        "INKEEP_API_BASE_URL": "https://api.inkeep.com/v1",
        "INKEEP_API_KEY": "<YOUR_INKEEP_API_KEY>",
        "INKEEP_API_MODEL": "inkeep-rag",
        "INKEEP_MCP_TOOL_NAME": "search-product-content",
        "INKEEP_MCP_TOOL_DESCRIPTION": "Retrieves product documentation about Inkeep. The query should be framed as a conversational question about Inkeep."
      }
    }
  },
  {
    "id": "integration-app:39da47dd",
    "icon": "https://integration.app/favicon.ico",
    "name": "Integration App",
    "description": "Interact with any other SaaS applications on behalf of your customers.",
    "repository": {
      "url": "https://github.com/integration-app/mcp-server",
      "source": "github",
      "stars": 27,
      "lastUpdated": "2025-08-11T07:12:40Z"
    },
    "tags": [
      "official"
    ],
    "serverName": "integration-app",
    "serverConfig": {
      "type": "sse",
      "url": "https://<HOSTED_MCP_SERVER_URL>/sse?token={ACCESS_TOKEN}"
    }
  },
  {
    "id": "ip2location-io:0328cf49",
    "icon": "https://www.ip2location.io/favicon.ico",
    "name": "IP2Location.io",
    "description": "Interact with IP2Location.io API to retrieve the geolocation information for an IP address.",
    "repository": {
      "url": "https://github.com/ip2location/mcp-ip2location-io",
      "source": "github",
      "stars": 8,
      "lastUpdated": "2025-08-01T15:12:19Z"
    },
    "tags": [
      "official"
    ],
    "serverName": "ip2location-io",
    "serverConfig": {
      "type": "stdio",
      "command": "uv",
      "args": [
        "--directory",
        "/path/to/ip2locationio/src",
        "run",
        "server.py"
      ],
      "env": {
        "IP2LOCATION_API_KEY": "<YOUR API key HERE>"
      }
    }
  },
  {
    "id": "iplocate:3c44bf15",
    "icon": "https://static.iplocate.io/custom/logo-square-rounded.png",
    "name": "IPLocate",
    "description": "Look up IP address geolocation, network information, detect proxies and VPNs, and find abuse contact details using IPLocate.io",
    "repository": {
      "url": "https://github.com/iplocate/mcp-server-iplocate",
      "source": "github",
      "stars": 6,
      "lastUpdated": "2025-08-04T20:51:14Z"
    },
    "tags": [
      "official"
    ]
  },
  {
    "id": "jellyfish:1b7211b9",
    "icon": "https://jellyfish.co/favicon.ico",
    "name": "Jellyfish",
    "description": "",
    "repository": {
      "url": "https://github.com/Jellyfish-AI/jellyfish-mcp",
      "source": "github",
      "stars": 3,
      "lastUpdated": "2025-07-25T18:33:33Z"
    },
    "tags": [
      "official"
    ],
    "serverName": "jellyfish",
    "serverConfig": {
      "type": "stdio",
      "command": "/FULL/PATH/TO/uv",
      "args": [
        "--directory",
        "/ABSOLUTE/PATH/TO/jellyfish-mcp",
        "run",
        "server.py"
      ]
    }
  },
  {
    "id": "jetbrains:c4af57e0",
    "icon": "https://cdn.simpleicons.org/jetbrains",
    "name": "JetBrains",
    "description": "",
    "repository": {
      "url": "https://github.com/JetBrains/mcp-jetbrains",
      "source": "github",
      "stars": 910,
      "lastUpdated": "2025-08-16T13:22:11Z"
    },
    "tags": [
      "official"
    ],
    "serverName": "jetbrains",
    "serverConfig": {
      "type": "stdio",
      "command": "npx",
      "args": [
        "-y",
        "@jetbrains/mcp-proxy"
      ]
    }
  },
  {
    "id": "jfrog:2e0d6f91",
    "icon": "https://speedmedia.jfrog.com/08612fe1-9391-4cf3-ac1a-6dd49c36b276/media.jfrog.com/wp-content/uploads/2019/04/20131046/Jfrog16-1.png",
    "name": "JFrog",
    "description": "Model Context Protocol (MCP) Server for the JFrog Platform API, enabling repository management, build tracking, release lifecycle management, and more.",
    "repository": {
      "url": "https://github.com/jfrog/mcp-jfrog",
      "source": "github",
      "stars": 106,
      "lastUpdated": "2025-08-04T10:06:33Z"
    },
    "tags": [
      "official"
    ],
    "serverName": "jfrog",
    "serverConfig": {
      "type": "stdio",
      "command": "docker",
      "args": [
        "run",
        "--rm",
        "-i",
        "-e",
        "JFROG_ACCESS_TOKEN",
        "-e",
        "JFROG_URL",
        "mcp/jfrog"
      ],
      "env": {
        "JFROG_ACCESS_TOKEN": "<YOUR_TOKEN>",
        "JFROG_URL": "https://your-instance.jfrog.io"
      }
    }
  },
  {
    "id": "kagi-search:a1e849d5",
    "icon": "https://kagi.com/favicon.ico",
    "name": "Kagi Search",
    "description": "Search the web using Kagi's search API",
    "repository": {
      "url": "https://github.com/kagisearch/kagimcp",
      "source": "github",
      "stars": 159,
      "lastUpdated": "2025-08-16T02:21:55Z"
    },
    "tags": [
      "official"
    ],
    "serverName": "kagi-search",
    "serverConfig": {
      "type": "stdio",
      "command": "uvx",
      "args": [
        "kagimcp"
      ],
      "env": {
        "KAGI_API_KEY": "YOUR_API_KEY_HERE",
        "KAGI_SUMMARIZER_ENGINE": "YOUR_ENGINE_CHOICE_HERE"
      }
    }
  },
  {
    "id": "keboola:86ae9edf",
    "icon": "https://connection.keboola.com/favicon.ico",
    "name": "Keboola",
    "description": "Build robust data workflows, integrations, and analytics on a single intuitive platform.",
    "repository": {
      "url": "https://github.com/keboola/keboola-mcp-server",
      "source": "github",
      "stars": 68,
      "lastUpdated": "2025-08-15T13:38:23Z"
    },
    "tags": [
      "official"
    ],
    "serverName": "keboola",
    "serverConfig": {
      "type": "stdio",
      "command": "uvx",
      "args": [
        "keboola_mcp_server"
      ],
      "env": {
        "KBC_STORAGE_API_URL": "https://connection.YOUR_REGION.keboola.com",
        "KBC_STORAGE_TOKEN": "your_keboola_storage_token",
        "KBC_WORKSPACE_SCHEMA": "your_workspace_schema"
      }
    }
  },
  {
    "id": "kernel:2bd3f6ca",
    "icon": "https://mcp.onkernel.com/favicon.svg",
    "name": "Kernel",
    "description": "",
    "repository": {
      "url": "https://github.com/onkernel/kernel-mcp-server",
      "source": "github",
      "stars": 15,
      "lastUpdated": "2025-08-16T23:46:07Z"
    },
    "tags": [
      "official"
    ],
    "serverName": "kernel",
    "serverConfig": {
      "type": "streamable",
      "url": "https://mcp.onkernel.com/mcp"
    }
  },
  {
    "id": "keywords-everywhere:1f01e9bf",
    "icon": "https://keywordseverywhere.com/favicon.ico",
    "name": "Keywords Everywhere",
    "description": "",
    "repository": {
      "url": "https://api.keywordseverywhere.com/docs/#/mcp_integration",
      "source": "other"
    },
    "tags": [
      "official"
    ]
  },
  {
    "id": "keywordspeopleuse-com:bde20456",
    "icon": "https://keywordspeopleuse.com/favicon.ico",
    "name": "KeywordsPeopleUse.com",
    "description": "Find questions people ask online with KeywordsPeopleUse.",
    "repository": {
      "url": "https://github.com/data-skunks/kpu-mcp",
      "source": "github",
      "stars": 4,
      "lastUpdated": "2025-07-26T21:52:20Z"
    },
    "tags": [
      "official"
    ],
    "serverName": "keywordspeopleuse-com",
    "serverConfig": {
      "type": "stdio",
      "command": "npx",
      "args": [
        "mcp-remote",
        "https://mcp-keywordspeopleuse.com/sse",
        "--header",
        "Authorization:YOUR_API_KEY"
      ]
    }
  },
  {
    "id": "kirokuforms:0041edf6",
    "icon": "https://kirokuforms.com/favicon.svg",
    "name": "KirokuForms",
    "description": "KirokuForms is an AI-powered form platform combining professional form building with Human-in-the-Loop (HITL) capabilities. Create custom forms, collect submissions, and integrate human oversight into AI workflows through MCP integration.",
    "repository": {
      "url": "https://www.kirokuforms.com/ai/mcp",
      "source": "other"
    },
    "tags": [
      "official"
    ]
  },
  {
    "id": "klavis-reportgen:5c07d748",
    "icon": "https://raw.githubusercontent.com/klavis-ai/klavis/main/static/klavis-ai.png",
    "name": "Klavis ReportGen",
    "description": "Create professional reports from a simple user query.",
    "repository": {
      "url": "https://github.com/Klavis-AI/klavis/tree/main/mcp_servers/report_generation",
      "source": "github",
      "stars": 3955,
      "lastUpdated": "2025-08-17T02:22:39Z"
    },
    "tags": [
      "official"
    ]
  },
  {
    "id": "klaviyo:e0bbfe2d",
    "icon": "https://www.klaviyo.com/media/Favicon-16by16.png",
    "name": "Klaviyo",
    "description": "Interact with your Klaviyo marketing data.",
    "repository": {
      "url": "https://developers.klaviyo.com/en/docs/klaviyo_mcp_server",
      "source": "other"
    },
    "tags": [
      "official"
    ]
  },
  {
    "id": "kluster-ai:89b60bae",
    "icon": "https://platform.kluster.ai/logo-light.svg",
    "name": "kluster.ai",
    "description": "kluster.ai provides MCP servers that bring AI services directly into your development workflow, including guardrails like hallucination detection.",
    "repository": {
      "url": "https://docs.kluster.ai/get-started/mcp/overview/",
      "source": "other"
    },
    "tags": [
      "official"
    ]
  },
  {
    "id": "knit-mcp-server:04e15e45",
    "icon": "https://cdn.prod.website-files.com/6347ea26001f0287c592ff91/649953ef7a9ffe1f3e492b5a_Knit%20Logo.svg",
    "name": "Knit MCP Server",
    "description": "Production-ready remote MCP servers that enable you to connect with 10000+ tools across CRM, HRIS, Payroll, Accounting, ERP, Calendar, Expense Management, and Chat categories.",
    "repository": {
      "url": "https://developers.getknit.dev/docs/knit-mcp-server-getting-started",
      "source": "other"
    },
    "tags": [
      "official"
    ]
  },
  {
    "id": "knock-mcp-server:198cd78e",
    "icon": "https://knock.app/favicon/favicon-dark.svg",
    "name": "Knock MCP Server",
    "description": "Send product and customer messaging across email, in-app, push, SMS, Slack, MS Teams.",
    "repository": {
      "url": "https://github.com/knocklabs/agent-toolkit#model-context-protocol-mcp",
      "source": "github",
      "stars": 6,
      "lastUpdated": "2025-08-14T21:04:12Z"
    },
    "tags": [
      "official"
    ]
  },
  {
    "id": "kurrentdb:8c16f2a5",
    "icon": "https://www.kurrent.io/favicon.ico",
    "name": "KurrentDB",
    "description": "This is a simple MCP server to help you explore data and prototype projections faster on top of KurrentDB.",
    "repository": {
      "url": "https://github.com/kurrent-io/mcp-server",
      "source": "github",
      "stars": 9,
      "lastUpdated": "2025-08-16T23:09:55Z"
    },
    "tags": [
      "official"
    ],
    "serverName": "kurrentdb",
    "serverConfig": {
      "type": "stdio",
      "command": "python",
      "args": [
        "path to mcp-server folder\\server.py"
      ],
      "env": {
        "KURRENTDB_CONNECTION_STRING": "insert kurrentdb connection here"
      }
    }
  },
  {
    "id": "kuzu:0c6acb4d",
    "icon": "https://kuzudb.com/favicon.ico",
    "name": "Kuzu",
    "description": "This server enables LLMs to inspect database schemas and execute queries on the provided Kuzu graph database. See blog) for a debugging use case.",
    "repository": {
      "url": "https://github.com/kuzudb/kuzu-mcp-server",
      "source": "github",
      "stars": 26,
      "lastUpdated": "2025-08-06T10:55:19Z"
    },
    "tags": [
      "official"
    ],
    "serverName": "kuzu",
    "serverConfig": {
      "type": "stdio",
      "command": "docker",
      "args": [
        "run",
        "-v",
        "{Path to the directory containing Kuzu database file}:/database",
        "-e",
        "KUZU_DB_FILE={Kuzu database file name}",
        "-e",
        "KUZU_READ_ONLY=true",
        "--rm",
        "-i",
        "kuzudb/mcp-server"
      ]
    }
  },
  {
    "id": "kwdb:a47452bd",
    "icon": "https://avatars.githubusercontent.com/u/187484914",
    "name": "KWDB",
    "description": "Reading, writing, querying, modifying data, and performing DDL operations with data in your KWDB Database.",
    "repository": {
      "url": "https://github.com/KWDB/kwdb-mcp-server",
      "source": "github",
      "stars": 4,
      "lastUpdated": "2025-08-05T02:06:47Z"
    },
    "tags": [
      "official"
    ]
  },
  {
    "id": "label-studio:3b9d064a",
    "icon": "https://labelstud.io/favicon-16x16.png",
    "name": "Label Studio",
    "description": "Open Source data labeling platform.",
    "repository": {
      "url": "https://github.com/HumanSignal/label-studio-mcp-server",
      "source": "github",
      "stars": 15,
      "lastUpdated": "2025-08-01T10:45:01Z"
    },
    "tags": [
      "official"
    ],
    "serverName": "label-studio",
    "serverConfig": {
      "type": "stdio",
      "command": "uvx",
      "args": [
        "--from",
        "git+https://github.com/HumanSignal/label-studio-mcp-server",
        "mcp-label-studio"
      ],
      "env": {
        "LABEL_STUDIO_API_KEY": "your_actual_api_key_here",
        "LABEL_STUDIO_URL": "http://localhost:8080"
      }
    }
  },
  {
    "id": "lambda-capture:6258bf72",
    "icon": "https://avatars.githubusercontent.com/u/188884511?s=48&v=4",
    "name": "Lambda Capture",
    "description": "Macroeconomic Forecasts & Semantic Context from Federal Reserve, Bank of England, ECB.",
    "repository": {
      "url": "https://github.com/lambda-capture/mcp-server",
      "source": "github",
      "stars": 7,
      "lastUpdated": "2025-08-05T16:18:18Z"
    },
    "tags": [
      "official"
    ],
    "serverName": "lambda-capture",
    "serverConfig": {
      "type": "stdio",
      "command": "npx",
      "args": [
        "mcp-remote",
        "https://mcp.lambda-capture.com/v1/mcp/",
        "--header",
        "Authorization: Bearer YOUR_ACCESS_TOKEN"
      ]
    }
  },
  {
    "id": "langfuse-prompt-management:3f55996a",
    "icon": "https://langfuse.com/favicon.ico",
    "name": "Langfuse Prompt Management",
    "description": "Open-source tool for collaborative editing, versioning, evaluating, and releasing prompts.",
    "repository": {
      "url": "https://github.com/langfuse/mcp-server-langfuse",
      "source": "github",
      "stars": 126,
      "lastUpdated": "2025-08-10T17:57:13Z"
    },
    "tags": [
      "official"
    ],
    "serverName": "langfuse-prompt-management",
    "serverConfig": {
      "type": "stdio",
      "command": "node",
      "args": [
        "<absolute-path>/build/index.js"
      ],
      "env": {
        "LANGFUSE_PUBLIC_KEY": "your-public-key",
        "LANGFUSE_SECRET_KEY": "your-secret-key",
        "LANGFUSE_BASEURL": "https://cloud.langfuse.com"
      }
    }
  },
  {
    "id": "lara-translate:4fa858ef",
    "icon": "https://laratranslate.com/favicon.ico",
    "name": "Lara Translate",
    "description": "MCP Server for Lara Translate API, enabling powerful translation capabilities with support for language detection and context-aware translations.",
    "repository": {
      "url": "https://github.com/translated/lara-mcp",
      "source": "github",
      "stars": 67,
      "lastUpdated": "2025-08-12T18:20:20Z"
    },
    "tags": [
      "official"
    ],
    "serverName": "lara-translate",
    "serverConfig": {
      "type": "stdio",
      "command": "npx",
      "args": [
        "-y",
        "@translated/lara-mcp@latest"
      ],
      "env": {
        "LARA_ACCESS_KEY_ID": "<YOUR_ACCESS_KEY_ID>",
        "LARA_ACCESS_KEY_SECRET": "<YOUR_ACCESS_KEY_SECRET>"
      }
    }
  },
  {
    "id": "last9:c1deb7fe",
    "icon": "https://last9.io/favicon.png",
    "name": "Last9",
    "description": "Seamlessly bring real-time production context—logs, metrics, and traces—into your local environment to auto-fix code faster.",
    "repository": {
      "url": "https://github.com/last9/last9-mcp-server",
      "source": "github",
      "stars": 41,
      "lastUpdated": "2025-07-30T11:08:42Z"
    },
    "tags": [
      "official"
    ],
    "serverName": "last9",
    "serverConfig": {
      "type": "stdio",
      "command": "/opt/homebrew/bin/last9-mcp",
      "env": {
        "LAST9_BASE_URL": "<last9_otlp_host>",
        "LAST9_AUTH_TOKEN": "<last9_otlp_auth_token>",
        "LAST9_REFRESH_TOKEN": "<last9_write_refresh_token>"
      }
    }
  },
  {
    "id": "launchdarkly:67b6b0ea",
    "icon": "https://www.launchdarkly.com/favicon.ico",
    "name": "LaunchDarkly",
    "description": "LaunchDarkly is a continuous delivery platform that provides feature flags as a service and allows developers to iterate quickly and safely.",
    "repository": {
      "url": "https://github.com/launchdarkly/mcp-server",
      "source": "github",
      "stars": 12,
      "lastUpdated": "2025-08-06T22:00:17Z"
    },
    "tags": [
      "official"
    ],
    "serverName": "launchdarkly",
    "serverConfig": {
      "type": "stdio",
      "command": "npx",
      "args": [
        "-y",
        "--package",
        "@launchdarkly/mcp-server",
        "--",
        "mcp",
        "start",
        "--api-key",
        "api-xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
      ]
    }
  },
  {
    "id": "line:c8688f9f",
    "icon": "https://www.line.me/favicon-32x32.png",
    "name": "LINE",
    "description": "Integrates the LINE Messaging API to connect an AI Agent to the LINE Official Account.",
    "repository": {
      "url": "https://github.com/line/line-bot-mcp-server",
      "source": "github",
      "stars": 442,
      "lastUpdated": "2025-08-15T09:53:23Z"
    },
    "tags": [
      "official"
    ],
    "serverName": "line",
    "serverConfig": {
      "type": "stdio",
      "command": "npx",
      "args": [
        "@line/line-bot-mcp-server"
      ],
      "env": {
        "CHANNEL_ACCESS_TOKEN": "FILL_HERE",
        "DESTINATION_USER_ID": "FILL_HERE"
      }
    }
  },
  {
    "id": "linear:e7558534",
    "icon": "https://linear.app/favicon.ico",
    "name": "Linear",
    "description": "Search, create, and update Linear issues, projects, and comments.",
    "repository": {
      "url": "https://linear.app/docs/mcp",
      "source": "other"
    },
    "tags": [
      "official"
    ]
  },
  {
    "id": "lingo-dev:cf16b426",
    "icon": "https://lingo.dev/favicon.ico",
    "name": "Lingo.dev",
    "description": "Make your AI agent speak every language on the planet, using Lingo.dev Localization Engine.",
    "repository": {
      "url": "https://github.com/lingodotdev/lingo.dev/blob/main/mcp.md",
      "source": "github",
      "stars": 2829,
      "lastUpdated": "2025-08-15T23:05:42Z"
    },
    "tags": [
      "official"
    ]
  },
  {
    "id": "linkedin-mcp-runner:7252086c",
    "icon": "https://ligo.ertiqah.com/favicon.avif",
    "name": "LinkedIn MCP Runner",
    "description": "Write, edit, and schedule LinkedIn posts right from ChatGPT and Claude with LiGo.",
    "repository": {
      "url": "https://github.com/ertiqah/linkedin-mcp-runner",
      "source": "github",
      "stars": 11,
      "lastUpdated": "2025-08-13T05:34:13Z"
    },
    "tags": [
      "official"
    ]
  },
  {
    "id": "lisply:4de916e1",
    "icon": "https://gornschool.com/gorn.png",
    "name": "Lisply",
    "description": "Flexible frontend for compliant Lisp-speaking backends.",
    "repository": {
      "url": "https://github.com/gornskew/lisply-mcp",
      "source": "github",
      "stars": 37,
      "lastUpdated": "2025-08-07T20:24:23Z"
    },
    "tags": [
      "official"
    ],
    "serverName": "lisply",
    "serverConfig": {
      "type": "stdio",
      "command": "wsl",
      "args": [
        "docker",
        "run",
        "-i",
        "--rm",
        "-u",
        "1000:1000",
        "--mount",
        "type=bind,src=/home/user/projects,dst=/projects",
        "mcp/filesystem",
        "/projects"
      ]
    }
  },
  {
    "id": "litmus-io:0467fbe5",
    "icon": "https://litmus.io/favicon.ico",
    "name": "Litmus.io",
    "description": "Official MCP server for configuring Litmus Edge for Industrial Data Collection, Edge Analytics & Industrial AI.",
    "repository": {
      "url": "https://github.com/litmusautomation/litmus-mcp-server",
      "source": "github",
      "stars": 5,
      "lastUpdated": "2025-08-10T08:42:29Z"
    },
    "tags": [
      "official"
    ],
    "serverName": "litmus-io",
    "serverConfig": {
      "type": "sse",
      "url": "http://<IP Address>:8000/sse"
    }
  },
  {
    "id": "liveblocks:e4b20e80",
    "icon": "https://liveblocks.io/favicon.ico",
    "name": "Liveblocks",
    "description": "Ready‑made features for AI & human collaboration—use this to develop your Liveblocks app quicker.",
    "repository": {
      "url": "https://github.com/liveblocks/liveblocks-mcp-server",
      "source": "github",
      "stars": 10,
      "lastUpdated": "2025-08-06T14:01:22Z"
    },
    "tags": [
      "official"
    ],
    "serverName": "liveblocks",
    "serverConfig": {
      "type": "stdio",
      "command": "node",
      "args": [
        "/full/path/to/the/repo/liveblocks-mcp-server/build/index.js"
      ],
      "env": {
        "LIVEBLOCKS_SECRET_KEY": "sk_dev_Ns35f5G..."
      }
    }
  },
  {
    "id": "logfire:ec2a1cff",
    "icon": "https://logfire.pydantic.dev/favicon.ico",
    "name": "Logfire",
    "description": "Provides access to OpenTelemetry traces and metrics through Logfire.",
    "repository": {
      "url": "https://github.com/pydantic/logfire-mcp",
      "source": "github",
      "stars": 99,
      "lastUpdated": "2025-08-14T21:54:10Z"
    },
    "tags": [
      "official"
    ],
    "serverName": "logfire",
    "serverConfig": {
      "type": "stdio",
      "command": "uvx",
      "args": [
        "logfire-mcp@latest",
        "--read-token=YOUR-TOKEN"
      ]
    }
  },
  {
    "id": "magic-meal-kits:06561961",
    "icon": "https://make.magicmealkits.com/favicon.ico",
    "name": "Magic Meal Kits",
    "description": "Unleash Make's Full Potential by Magic Meal Kits",
    "repository": {
      "url": "https://github.com/pureugong/mmk-mcp",
      "source": "github",
      "stars": 0,
      "lastUpdated": "2025-04-08T00:13:17Z"
    },
    "tags": [
      "official"
    ],
    "serverName": "magic-meal-kits",
    "serverConfig": {
      "type": "stdio",
      "command": "npx",
      "args": [
        "-y",
        "mmk-mcp"
      ],
      "env": {
        "MMK_API_KEY": "<your-api-key>",
        "MMK_API_BASE_URL": "<your-api-base-url>"
      }
    }
  },
  {
    "id": "mailgun:8fe503f1",
    "icon": "https://www.mailgun.com/favicon.ico",
    "name": "Mailgun",
    "description": "Interact with Mailgun API.",
    "repository": {
      "url": "https://github.com/mailgun/mailgun-mcp-server",
      "source": "github",
      "stars": 30,
      "lastUpdated": "2025-08-10T17:24:28Z"
    },
    "tags": [
      "official"
    ]
  },
  {
    "id": "mailjet:3249e781",
    "icon": "https://www.mailjet.com/favicon.ico",
    "name": "Mailjet",
    "description": "Official MCP server which allows AI agents to interact with contact, campaign, segmentation, statistics, workflow (and more) APIs from Sinch Mailjet.",
    "repository": {
      "url": "https://github.com/mailgun/mailjet-mcp-server",
      "source": "github",
      "stars": 6,
      "lastUpdated": "2025-08-08T06:19:54Z"
    },
    "tags": [
      "official"
    ]
  },
  {
    "id": "make:11f79202",
    "icon": "https://www.make.com/favicon.ico",
    "name": "Make",
    "description": "Turn your Make scenarios into callable tools for AI assistants.",
    "repository": {
      "url": "https://github.com/integromat/make-mcp-server",
      "source": "github",
      "stars": 125,
      "lastUpdated": "2025-08-15T07:03:26Z"
    },
    "tags": [
      "official"
    ],
    "serverName": "make",
    "serverConfig": {
      "type": "stdio",
      "command": "npx",
      "args": [
        "-y",
        "@makehq/mcp-server"
      ],
      "env": {
        "MAKE_API_KEY": "<your-api-key>",
        "MAKE_ZONE": "<your-zone>",
        "MAKE_TEAM": "<your-team-id>"
      }
    }
  },
  {
    "id": "mapbox:f8175370",
    "icon": "https://static-assets.mapbox.com/branding/favicon/v1/favicon.ico",
    "name": "Mapbox",
    "description": "Unlock geospatial intelligence through Mapbox APIs like geocoding, POI search, directions, isochrones and more.",
    "repository": {
      "url": "https://github.com/mapbox/mcp-server",
      "source": "github",
      "stars": 242,
      "lastUpdated": "2025-08-12T06:35:55Z"
    },
    "tags": [
      "official"
    ]
  },
  {
    "id": "mariadb:59dc4b29",
    "icon": "https://www.mariadb.com/favicon.ico",
    "name": "MariaDB",
    "description": "A standard interface for managing and querying MariaDB databases, supporting both standard SQL operations and advanced vector/embedding-based search.",
    "repository": {
      "url": "https://github.com/mariadb/mcp",
      "source": "github",
      "stars": 44,
      "lastUpdated": "2025-08-14T09:44:26Z"
    },
    "tags": [
      "official"
    ],
    "serverName": "mariadb",
    "serverConfig": {
      "type": "stdio",
      "command": "uv",
      "args": [
        "--directory",
        "path/to/mariadb-mcp-server/",
        "run",
        "server.py"
      ]
    }
  },
  {
    "id": "mcp-discovery:f32c4589",
    "icon": "https://raw.githubusercontent.com/rust-mcp-stack/mcp-discovery/refs/heads/main/docs/_media/mcp-discovery-logo.png",
    "name": "MCP Discovery",
    "description": "A lightweight CLI tool built in Rust for discovering MCP server capabilities.",
    "repository": {
      "url": "https://github.com/rust-mcp-stack/mcp-discovery",
      "source": "github",
      "stars": 42,
      "lastUpdated": "2025-08-13T00:38:49Z"
    },
    "tags": [
      "official"
    ]
  },
  {
    "id": "mcp-toolbox-for-databases:adea1ead",
    "icon": "https://googleapis.github.io/genai-toolbox/favicons/favicon.ico",
    "name": "MCP Toolbox for Databases",
    "description": "Open source MCP server specializing in easy, fast, and secure tools for Databases. Supports  AlloyDB, BigQuery, Bigtable, Cloud SQL, Dgraph, MySQL, Neo4j, Postgres, Spanner, and more.",
    "repository": {
      "url": "https://github.com/googleapis/genai-toolbox",
      "source": "github",
      "stars": 9273,
      "lastUpdated": "2025-08-17T02:17:53Z"
    },
    "tags": [
      "official"
    ]
  },
  {
    "id": "meilisearch:5cf3856b",
    "icon": "https://www.meilisearch.com/favicon.ico",
    "name": "Meilisearch",
    "description": "Interact & query with Meilisearch (Full-text & semantic search API)",
    "repository": {
      "url": "https://github.com/meilisearch/meilisearch-mcp",
      "source": "github",
      "stars": 124,
      "lastUpdated": "2025-08-11T23:50:07Z"
    },
    "tags": [
      "official"
    ],
    "serverName": "meilisearch",
    "serverConfig": {
      "type": "stdio",
      "command": "uvx",
      "args": [
        "-n",
        "meilisearch-mcp"
      ]
    }
  },
  {
    "id": "memgraph:7a9aa67f",
    "icon": "https://memgraph.com/favicon.png",
    "name": "Memgraph",
    "description": "Query your data in Memgraph graph database.",
    "repository": {
      "url": "https://github.com/memgraph/ai-toolkit/tree/main/integrations/mcp-memgraph",
      "source": "github",
      "stars": 29,
      "lastUpdated": "2025-08-15T07:48:54Z"
    },
    "tags": [
      "official"
    ],
    "serverName": "memgraph",
    "serverConfig": {
      "type": "stdio",
      "command": "docker",
      "args": [
        "run",
        "--rm",
        "-i",
        "-e",
        "MCP_TRANSPORT=stdio",
        "mcp-memgraph:latest"
      ]
    }
  },
  {
    "id": "mercado-libre:86d0a690",
    "icon": "https://www.mercadolibre.com.ar/favicon.ico",
    "name": "Mercado Libre",
    "description": "Mercado Libre's official MCP server.",
    "repository": {
      "url": "https://mcp.mercadolibre.com/",
      "source": "other"
    },
    "tags": [
      "official"
    ]
  },
  {
    "id": "mercado-pago:3b87068a",
    "icon": "https://www.mercadopago.com/favicon.ico",
    "name": "Mercado Pago",
    "description": "Mercado Pago's official MCP server.",
    "repository": {
      "url": "https://mcp.mercadopago.com/",
      "source": "other"
    },
    "tags": [
      "official"
    ]
  },
  {
    "id": "metoro:e567a937",
    "icon": "https://metoro.io/static/images/logos/MetoroLogo.png",
    "name": "Metoro",
    "description": "Query and interact with kubernetes environments monitored by Metoro",
    "repository": {
      "url": "https://github.com/metoro-io/metoro-mcp-server",
      "source": "github",
      "stars": 43,
      "lastUpdated": "2025-08-06T20:08:21Z"
    },
    "tags": [
      "official"
    ],
    "serverName": "metoro",
    "serverConfig": {
      "type": "stdio",
      "command": "<your path to Metoro MCP server go executable>/metoro-mcp-server",
      "args": [],
      "env": {
        "METORO_AUTH_TOKEN": "<your auth token>",
        "METORO_API_URL": "https://us-east.metoro.io"
      }
    }
  },
  {
    "id": "microsoft-clarity:52d6cfb9",
    "icon": "https://claritystatic.azureedge.net/images/logo.ico",
    "name": "Microsoft Clarity",
    "description": "Official MCP Server to get your behavioral analytics data and insights from Clarity",
    "repository": {
      "url": "https://github.com/microsoft/clarity-mcp-server",
      "source": "github",
      "stars": 32,
      "lastUpdated": "2025-08-16T14:35:22Z"
    },
    "tags": [
      "official"
    ],
    "serverName": "microsoft-clarity",
    "serverConfig": {
      "type": "stdio",
      "command": "npx",
      "args": [
        "@microsoft/clarity-mcp-server",
        "--clarity_api_token=your-api-token-here"
      ]
    }
  },
  {
    "id": "microsoft-dataverse:06671e90",
    "icon": "https://conn-afd-prod-endpoint-bmc9bqahasf3grgk.b01.azurefd.net/releases/v1.0.1735/1.0.1735.4099/commondataserviceforapps/icon.png",
    "name": "Microsoft Dataverse",
    "description": "Chat over your business data using NL - Discover tables, run queries, retrieve data, insert or update records, and execute custom prompts grounded in business knowledge and context.",
    "repository": {
      "url": "https://go.microsoft.com/fwlink/?linkid=2320176",
      "source": "other"
    },
    "tags": [
      "official"
    ]
  },
  {
    "id": "microsoft-learn-docs:67796167",
    "icon": "https://www.microsoft.com/favicon.ico",
    "name": "Microsoft Learn Docs",
    "description": "An MCP server that provides structured access to Microsoft’s official documentation. Retrieves accurate, authoritative, and context-aware technical content for code generation, question answering, and workflow grounding.",
    "repository": {
      "url": "https://github.com/microsoftdocs/mcp",
      "source": "github",
      "stars": 834,
      "lastUpdated": "2025-08-16T23:24:22Z"
    },
    "tags": [
      "official"
    ],
    "serverName": "microsoft-learn-docs",
    "serverConfig": {
      "type": "http",
      "url": "https://learn.microsoft.com/api/mcp"
    }
  },
  {
    "id": "milvus:1566b113",
    "icon": "https://milvus.io/favicon-32x32.png",
    "name": "Milvus",
    "description": "Search, Query and interact with data in your Milvus Vector Database.",
    "repository": {
      "url": "https://github.com/zilliztech/mcp-server-milvus",
      "source": "github",
      "stars": 167,
      "lastUpdated": "2025-08-15T06:56:12Z"
    },
    "tags": [
      "official"
    ],
    "serverName": "milvus",
    "serverConfig": {
      "type": "sse",
      "url": "http://your_sse_host:port/sse"
    }
  },
  {
    "id": "mimilabs:72ae1b11",
    "icon": "https://www.mimilabs.ai/logos/mimilabsSquare.svg",
    "name": "mimilabs",
    "description": "A US healthcare data discovery guide for 50+ gov sources and thousands of publicly available US healthcare datasets regarding gov-funded programs, policies, drug pricings, clinical trials, etc.",
    "repository": {
      "url": "https://www.mimilabs.ai/mcp",
      "source": "other"
    },
    "tags": [
      "official"
    ]
  },
  {
    "id": "mobb:6212b822",
    "icon": "https://avatars.githubusercontent.com/u/94089762?s=48&v=4",
    "name": "Mobb",
    "description": "The Mobb Vibe Shield MCP server identifies and remediates vulnerabilities in both human and AI-written code, ensuring your applications remain secure without slowing development.",
    "repository": {
      "url": "https://github.com/mobb-dev/bugsy?tab=readme-ov-file#model-context-protocol-mcp-server",
      "source": "github",
      "stars": 57,
      "lastUpdated": "2025-08-15T09:59:45Z"
    },
    "tags": [
      "official"
    ],
    "serverName": "mobb",
    "serverConfig": {
      "type": "stdio",
      "command": "npx",
      "args": [
        "mobbdev",
        "mcp"
      ],
      "env": {
        "API_KEY": "your_mobb_api_key_here",
        "API_URL": "optional__your_mobb_api_url_here"
      }
    }
  },
  {
    "id": "momento:aafb1f00",
    "icon": "https://console.gomomento.com/favicon.ico",
    "name": "Momento",
    "description": "Momento Cache lets you quickly improve your performance, reduce costs, and handle load at any scale.",
    "repository": {
      "url": "https://github.com/momentohq/mcp-momento",
      "source": "github",
      "stars": 2,
      "lastUpdated": "2025-06-03T05:33:22Z"
    },
    "tags": [
      "official"
    ],
    "serverName": "momento",
    "serverConfig": {
      "type": "stdio",
      "command": "npx",
      "args": [
        "-y",
        "@gomomento/mcp-momento"
      ],
      "env": {
        "MOMENTO_API_KEY": "your-api-key",
        "MOMENTO_CACHE_NAME": "your-cache-name",
        "DEFAULT_TTL_SECONDS": 60
      }
    }
  },
  {
    "id": "mongodb:2118aa61",
    "icon": "https://www.mongodb.com/favicon.ico",
    "name": "MongoDB",
    "description": "Both MongoDB Community Server and MongoDB Atlas are supported.",
    "repository": {
      "url": "https://github.com/mongodb-js/mongodb-mcp-server",
      "source": "github",
      "stars": 571,
      "lastUpdated": "2025-08-16T11:40:34Z"
    },
    "tags": [
      "official"
    ],
    "serverName": "mongodb",
    "serverConfig": {
      "type": "stdio",
      "command": "npx",
      "args": [
        "-y",
        "mongodb-mcp-server",
        "--connectionString",
        "mongodb://localhost:27017/myDatabase",
        "--readOnly"
      ]
    }
  },
  {
    "id": "moorcheh:3e7a59ee",
    "icon": "https://moorcheh.ai/Moorcheh-mcp.ico",
    "name": "Moorcheh",
    "description": "Embed, store, and search your documents, and build secure chatbots and RAG systems with Moorcheh's information-theoretic semantic search engine",
    "repository": {
      "url": "https://github.com/moorcheh-ai/moorcheh-mcp",
      "source": "github",
      "stars": 0,
      "lastUpdated": "2025-08-13T13:27:11Z"
    },
    "tags": [
      "official"
    ]
  },
  {
    "id": "motherduck:5472bbd2",
    "icon": "https://www.motherduck.com/favicon.ico",
    "name": "MotherDuck",
    "description": "Query and analyze data with MotherDuck and local DuckDB",
    "repository": {
      "url": "https://github.com/motherduckdb/mcp-server-motherduck",
      "source": "github",
      "stars": 301,
      "lastUpdated": "2025-08-16T22:34:08Z"
    },
    "tags": [
      "official"
    ],
    "serverName": "motherduck",
    "serverConfig": {
      "type": "stdio",
      "command": "uvx",
      "args": [
        "mcp-server-motherduck",
        "--db-path",
        "md:",
        "--motherduck-token",
        "<YOUR_MOTHERDUCK_TOKEN_HERE>"
      ]
    }
  },
  {
    "id": "mulesoft:410b5be0",
    "icon": "https://docs.mulesoft.com/_/img/favicon.ico",
    "name": "Mulesoft",
    "description": "Build, deploy, and manage MuleSoft applications with natural language, directly inside any compatible IDE.",
    "repository": {
      "url": "https://www.npmjs.com/package/@mulesoft/mcp-server",
      "source": "other"
    },
    "tags": [
      "official"
    ]
  },
  {
    "id": "multiplayer:b2d9b5ca",
    "icon": "https://www.multiplayer.app/favicon-32x32.png",
    "name": "Multiplayer",
    "description": "Analyze your full stack session recordings easily. Record a bug with Multiplayer, analyze and fix it with LLM",
    "repository": {
      "url": "https://www.multiplayer.app/docs/ai/mcp-server",
      "source": "other"
    },
    "tags": [
      "official"
    ]
  },
  {
    "id": "nanovms:c284982b",
    "icon": "https://avatars.githubusercontent.com/u/38020270",
    "name": "NanoVMs",
    "description": "Easily Build and Deploy unikernels to any cloud.",
    "repository": {
      "url": "https://github.com/nanovms/ops-mcp",
      "source": "github",
      "stars": 2,
      "lastUpdated": "2025-07-13T01:51:25Z"
    },
    "tags": [
      "official"
    ]
  },
  {
    "id": "needle:fd377338",
    "icon": "https://needle-ai.com/images/needle-logo-orange-2-rounded.png",
    "name": "Needle",
    "description": "Production-ready RAG out of the box to search and retrieve data from your own documents.",
    "repository": {
      "url": "https://github.com/needle-ai/needle-mcp",
      "source": "github",
      "stars": 75,
      "lastUpdated": "2025-08-12T06:54:42Z"
    },
    "tags": [
      "official"
    ],
    "serverName": "needle",
    "serverConfig": {
      "type": "stdio",
      "command": "docker",
      "args": [
        "run",
        "--rm",
        "-i",
        "needle-mcp"
      ],
      "env": {
        "NEEDLE_API_KEY": "<your-needle-api-key>"
      }
    }
  },
  {
    "id": "neo4j:ab52bbe2",
    "icon": "https://neo4j.com/favicon.ico",
    "name": "Neo4j",
    "description": "Neo4j graph database server (schema + read/write-cypher) and separate graph database backed memory",
    "repository": {
      "url": "https://github.com/neo4j-contrib/mcp-neo4j/",
      "source": "github",
      "stars": 624,
      "lastUpdated": "2025-08-16T14:24:32Z"
    },
    "tags": [
      "official"
    ]
  },
  {
    "id": "neo4j-agent-memory:78a7ec5d",
    "icon": "https://knowall.ai/favicon.ico",
    "name": "Neo4j Agent Memory",
    "description": "Memory management for AI agents using Neo4j knowledge graphs",
    "repository": {
      "url": "https://github.com/knowall-ai/mcp-neo4j-agent-memory",
      "source": "github",
      "stars": 10,
      "lastUpdated": "2025-08-14T09:16:28Z"
    },
    "tags": [
      "official"
    ],
    "serverName": "neo4j-agent-memory",
    "serverConfig": {
      "type": "stdio",
      "command": "npx",
      "args": [
        "@knowall-ai/mcp-neo4j-agent-memory"
      ],
      "env": {
        "NEO4J_URI": "bolt://localhost:7687",
        "NEO4J_USERNAME": "neo4j",
        "NEO4J_PASSWORD": "your-password",
        "NEO4J_DATABASE": "neo4j"
      }
    }
  },
  {
    "id": "neo4j-gds:dd896375",
    "icon": "https://neo4j.com/favicon.ico",
    "name": "Neo4j GDS",
    "description": "Neo4j graph data science server with comprehensive graph algorithms that enables complex graph reasoning and Q&A.",
    "repository": {
      "url": "https://github.com/neo4j-contrib/gds-agent",
      "source": "github",
      "stars": 14,
      "lastUpdated": "2025-08-15T05:20:56Z"
    },
    "tags": [
      "official"
    ]
  },
  {
    "id": "neon:1101a4b8",
    "icon": "https://avatars.githubusercontent.com/u/183852044?s=48&v=4",
    "name": "Neon",
    "description": "Interact with the Neon serverless Postgres platform",
    "repository": {
      "url": "https://github.com/neondatabase/mcp-server-neon",
      "source": "github",
      "stars": 411,
      "lastUpdated": "2025-08-16T19:26:24Z"
    },
    "tags": [
      "official"
    ],
    "serverName": "neon",
    "serverConfig": {
      "type": "stdio",
      "command": "npx",
      "args": [
        "-y",
        "@neondatabase/mcp-server-neon",
        "start",
        "<YOUR_NEON_API_KEY>"
      ]
    }
  },
  {
    "id": "nerve:7cfe316a",
    "icon": "https://app.usenerve.com/favicon.ico",
    "name": "Nerve",
    "description": "Search and Act on all your company data across all your SaaS apps via Nerve",
    "repository": {
      "url": "https://github.com/nerve-hq/nerve-mcp-server",
      "source": "github",
      "stars": 0,
      "lastUpdated": "2025-06-11T23:07:18Z"
    },
    "tags": [
      "official"
    ]
  },
  {
    "id": "netdata:37f4d216",
    "icon": "https://www.netdata.cloud/favicon-32x32.png",
    "name": "Netdata",
    "description": "Discovery, exploration, reporting and root cause analysis using all observability data, including metrics, logs, systems, containers, processes, and network connections",
    "repository": {
      "url": "https://github.com/netdata/netdata/blob/master/src/web/mcp/README.md",
      "source": "github",
      "stars": 75553,
      "lastUpdated": "2025-08-17T00:25:50Z"
    },
    "tags": [
      "official"
    ]
  },
  {
    "id": "netlify:26fd7934",
    "icon": "https://www.netlify.com/favicon/icon.svg",
    "name": "Netlify",
    "description": "Create, build, deploy, and manage your websites with Netlify web platform.",
    "repository": {
      "url": "https://docs.netlify.com/welcome/build-with-ai/netlify-mcp-server/",
      "source": "other"
    },
    "tags": [
      "official"
    ]
  },
  {
    "id": "nile:701a9a6c",
    "icon": "https://www.thenile.dev/favicon.ico",
    "name": "Nile",
    "description": "An MCP server that talks to Nile - Postgres re-engineered for B2B apps. Manage and query databases, tenants, users, auth using LLMs",
    "repository": {
      "url": "https://github.com/niledatabase/nile-mcp-server",
      "source": "github",
      "stars": 17,
      "lastUpdated": "2025-07-29T19:21:47Z"
    },
    "tags": [
      "official"
    ],
    "serverName": "nile",
    "serverConfig": {
      "type": "stdio",
      "command": "node",
      "args": [
        "/path/to/your/nile-mcp-server/dist/index.js"
      ],
      "env": {
        "NILE_API_KEY": "your_api_key_here",
        "NILE_WORKSPACE_SLUG": "your_workspace_slug"
      }
    }
  },
  {
    "id": "nodit:8e194471",
    "icon": "https://avatars.githubusercontent.com/u/208441832?s=400&v=4",
    "name": "Nodit",
    "description": "Official Nodit MCP Server enabling access to multi-chain RPC Nodes and Data APIs for blockchain data.",
    "repository": {
      "url": "https://github.com/noditlabs/nodit-mcp-server",
      "source": "github",
      "stars": 13,
      "lastUpdated": "2025-08-10T20:43:10Z"
    },
    "tags": [
      "official"
    ],
    "serverName": "nodit",
    "serverConfig": {
      "type": "stdio",
      "command": "npx",
      "args": [
        "@noditlabs/nodit-mcp-server@latest"
      ],
      "env": {
        "NODIT_API_KEY": "****"
      }
    }
  },
  {
    "id": "norman-finance:0f6c4860",
    "icon": "https://app.norman.finance/favicons/favicon-32x32.png",
    "name": "Norman Finance",
    "description": "MCP server for managing accounting and taxes with Norman Finance.",
    "repository": {
      "url": "https://github.com/norman-finance/norman-mcp-server",
      "source": "github",
      "stars": 7,
      "lastUpdated": "2025-08-15T01:02:00Z"
    },
    "tags": [
      "official"
    ],
    "serverName": "norman-finance",
    "serverConfig": {
      "type": "stdio",
      "command": "npx",
      "args": [
        "mcp-remote",
        "https://mcp.norman.finance/sse"
      ]
    }
  },
  {
    "id": "notion:f5b4f784",
    "icon": "https://avatars.githubusercontent.com/u/4792552?s=200&v=4",
    "name": "Notion",
    "description": "This project implements an MCP server for the Notion API.",
    "repository": {
      "url": "https://github.com/makenotion/notion-mcp-server#readme",
      "source": "github",
      "stars": 2971,
      "lastUpdated": "2025-08-16T14:25:31Z"
    },
    "tags": [
      "official"
    ]
  },
  {
    "id": "nutrient:807cdb46",
    "icon": "https://www.nutrient.io/assets/images/logos/nutrient.svg",
    "name": "Nutrient",
    "description": "Create, Edit, Sign, Extract Documents using Natural Language",
    "repository": {
      "url": "https://github.com/PSPDFKit/nutrient-dws-mcp-server",
      "source": "github",
      "stars": 62,
      "lastUpdated": "2025-07-16T04:54:50Z"
    },
    "tags": [
      "official"
    ],
    "serverName": "nutrient",
    "serverConfig": {
      "type": "stdio",
      "command": "npx",
      "args": [
        "-y",
        "@nutrient-sdk/dws-mcp-server"
      ],
      "env": {
        "NUTRIENT_DWS_API_KEY": "YOUR_API_KEY_HERE",
        "SANDBOX_PATH": "/your/sandbox/directory"
      }
    }
  },
  {
    "id": "nx:b2693014",
    "icon": "https://nx.dev/favicon/favicon.svg",
    "name": "Nx",
    "description": "Makes Nx's understanding of your codebase accessible to LLMs, providing insights into the codebase architecture, project relationships and runnable tasks thus allowing AI to make precise code suggestions.",
    "repository": {
      "url": "https://github.com/nrwl/nx-console/blob/master/apps/nx-mcp",
      "source": "github",
      "stars": 1371,
      "lastUpdated": "2025-08-14T09:47:48Z"
    },
    "tags": [
      "official"
    ]
  },
  {
    "id": "oceanbase:483988f1",
    "icon": "https://avatars.githubusercontent.com/u/82347605?s=48&v=4",
    "name": "OceanBase",
    "description": "MCP Server for OceanBase database and its tools",
    "repository": {
      "url": "https://github.com/oceanbase/mcp-oceanbase",
      "source": "github",
      "stars": 25,
      "lastUpdated": "2025-08-15T03:45:32Z"
    },
    "tags": [
      "official"
    ]
  },
  {
    "id": "octagon:20d51621",
    "icon": "https://docs.octagonagents.com/logo.svg",
    "name": "Octagon",
    "description": "Deliver real-time investment research with extensive private and public market data.",
    "repository": {
      "url": "https://github.com/OctagonAI/octagon-mcp-server",
      "source": "github",
      "stars": 62,
      "lastUpdated": "2025-08-11T22:14:56Z"
    },
    "tags": [
      "official"
    ],
    "serverName": "octagon",
    "serverConfig": {
      "type": "stdio",
      "command": "npx",
      "args": [
        "-y",
        "octagon-mcp@latest"
      ],
      "env": {
        "OCTAGON_API_KEY": "YOUR_API_KEY_HERE"
      }
    }
  },
  {
    "id": "octoeverywhere:e82115e3",
    "icon": "https://octoeverywhere.com/img/logo.png",
    "name": "OctoEverywhere",
    "description": "A 3D Printing MCP server that allows for querying for live state, webcam snapshots, and 3D printer control.",
    "repository": {
      "url": "https://github.com/OctoEverywhere/mcp",
      "source": "github",
      "stars": 4,
      "lastUpdated": "2025-08-08T17:41:24Z"
    },
    "tags": [
      "official"
    ]
  },
  {
    "id": "offorte:bbf782f2",
    "icon": "https://avatars.githubusercontent.com/u/211697972",
    "name": "Offorte",
    "description": "Offorte Proposal Software official MCP server enables creation and sending of business proposals.",
    "repository": {
      "url": "https://github.com/offorte/offorte-mcp-server#readme",
      "source": "github",
      "stars": 3,
      "lastUpdated": "2025-07-16T14:04:14Z"
    },
    "tags": [
      "official"
    ],
    "serverName": "offorte",
    "serverConfig": {
      "type": "stdio",
      "command": "npx",
      "args": [
        "-y",
        "@offorte/mcp-server"
      ],
      "env": {
        "OFFORTE_ACCOUNT_NAME": "<YOUR_ACCOUNT_NAME>",
        "OFFORTE_API_KEY": "<YOUR_TOKEN>"
      }
    }
  },
  {
    "id": "olamaps:ae77e5d9",
    "icon": "https://maps.olakrutrim.com/favicon.ico",
    "name": "OlaMaps",
    "description": "Official Ola Maps MCP Server for services like geocode, directions, place details and many more.",
    "repository": {
      "url": "https://pypi.org/project/ola-maps-mcp-server",
      "source": "other"
    },
    "tags": [
      "official"
    ]
  },
  {
    "id": "onlyoffice-docspace:3bf27b48",
    "icon": "https://static.onlyoffice.com/images/favicon.ico",
    "name": "ONLYOFFICE DocSpace",
    "description": "Interact with ONLYOFFICE DocSpace API to create rooms, manage files and folders.",
    "repository": {
      "url": "https://github.com/ONLYOFFICE/docspace-mcp",
      "source": "github",
      "stars": 3,
      "lastUpdated": "2025-07-31T19:51:33Z"
    },
    "tags": [
      "official"
    ],
    "serverName": "onlyoffice-docspace",
    "serverConfig": {
      "type": "stdio",
      "command": "npx",
      "args": [
        "--yes",
        "@onlyoffice/docspace-mcp"
      ],
      "env": {
        "DOCSPACE_BASE_URL": "https://your-instance.onlyoffice.com",
        "DOCSPACE_API_KEY": "your-api-key"
      }
    }
  },
  {
    "id": "op-gg:5ba2617a",
    "icon": "https://op.gg/favicon.ico",
    "name": "OP.GG",
    "description": "Access real-time gaming data across popular titles like League of Legends, TFT, and Valorant, offering champion analytics, esports schedules, meta compositions, and character statistics.",
    "repository": {
      "url": "https://github.com/opgginc/opgg-mcp",
      "source": "github",
      "stars": 31,
      "lastUpdated": "2025-08-13T08:17:41Z"
    },
    "tags": [
      "official"
    ],
    "serverName": "op-gg",
    "serverConfig": {
      "type": "stdio",
      "command": "npx",
      "args": [
        "-y",
        "supergateway",
        "--streamableHttp",
        "https://mcp-api.op.gg/mcp"
      ]
    }
  },
  {
    "id": "openfort:ed5c5634",
    "icon": "https://www.openfort.io/img/icon.svg",
    "name": "Openfort",
    "description": "Connect your AI to Openfort's smart wallet, auth, and project infrastructure.",
    "repository": {
      "url": "https://github.com/openfort-xyz/mcp",
      "source": "github",
      "stars": 2,
      "lastUpdated": "2025-08-16T14:53:40Z"
    },
    "tags": [
      "official"
    ],
    "serverName": "openfort",
    "serverConfig": {
      "type": "stdio",
      "command": "npx",
      "args": [
        "mcp-remote",
        "https://mcp.openfort.io/sse"
      ]
    }
  },
  {
    "id": "openmetadata:89781c32",
    "icon": "https://open-metadata.org/favicon.ico",
    "name": "OpenMetadata",
    "description": "The first Enterprise-grade MCP server for metadata",
    "repository": {
      "url": "https://open-metadata.org/mcp",
      "source": "other"
    },
    "tags": [
      "official"
    ]
  },
  {
    "id": "opensearch:43eb10c7",
    "icon": "https://opensearch.org/wp-content/uploads/2025/01/opensearch_mark_default.svg",
    "name": "OpenSearch",
    "description": "MCP server that enables AI agents to perform search and analytics use cases on data stored in OpenSearch.",
    "repository": {
      "url": "https://github.com/opensearch-project/opensearch-mcp-server-py",
      "source": "github",
      "stars": 43,
      "lastUpdated": "2025-08-15T09:58:35Z"
    },
    "tags": [
      "official"
    ]
  },
  {
    "id": "opslevel:5c56729f",
    "icon": "https://app.opslevel.com/favicon.ico",
    "name": "OpsLevel",
    "description": "Official MCP Server for OpsLevel.",
    "repository": {
      "url": "https://github.com/opslevel/opslevel-mcp",
      "source": "github",
      "stars": 8,
      "lastUpdated": "2025-08-16T06:37:38Z"
    },
    "tags": [
      "official"
    ],
    "serverName": "opslevel",
    "serverConfig": {
      "type": "stdio",
      "command": "opslevel-mcp",
      "env": {
        "OPSLEVEL_API_TOKEN": "XXXXXXX"
      }
    }
  },
  {
    "id": "optuna:853062cc",
    "icon": "https://optuna.org/assets/img/favicon.ico",
    "name": "Optuna",
    "description": "Official MCP server enabling seamless orchestration of hyperparameter search and other optimization tasks with Optuna.",
    "repository": {
      "url": "https://github.com/optuna/optuna-mcp",
      "source": "github",
      "stars": 48,
      "lastUpdated": "2025-08-13T08:22:22Z"
    },
    "tags": [
      "official"
    ],
    "serverName": "optuna",
    "serverConfig": {
      "type": "stdio",
      "command": "uvx",
      "args": [
        "optuna-mcp"
      ]
    }
  },
  {
    "id": "oracle:df426fd2",
    "icon": "https://raw.githubusercontent.com/oracle/mcp/refs/heads/main/oracle.svg",
    "name": "Oracle",
    "description": "Official Oracle Database: SQLcl  MCP server enabling all access to any Oracle Database via native MCP support directly in SQLcl.",
    "repository": {
      "url": "https://docs.oracle.com/en/database/oracle/sql-developer-command-line/25.2/sqcug/starting-and-managing-sqlcl-mcp-server.html#GUID-5F916B5D-8670-42BD-9F8B-D3D2424EC47E",
      "source": "other"
    },
    "tags": [
      "official"
    ]
  },
  {
    "id": "orshot:ee88e806",
    "icon": "https://orshot.com/brand/favicon.svg",
    "name": "Orshot",
    "description": "Official Orshot MCP server to dynamically generate images from custom design templates.",
    "repository": {
      "url": "https://github.com/rishimohan/orshot-mcp-server",
      "source": "github",
      "stars": 0,
      "lastUpdated": "2025-07-05T23:53:34Z"
    },
    "tags": [
      "official"
    ],
    "serverName": "orshot",
    "serverConfig": {
      "type": "stdio",
      "command": "node",
      "args": [
        "/path/to/orshot-mcp-server/build/index.js"
      ],
      "env": {
        "ORSHOT_API_KEY": "your-api-key"
      }
    }
  },
  {
    "id": "oxylabs:1ba4fa0a",
    "icon": "https://oxylabs.io/favicon.ico",
    "name": "Oxylabs",
    "description": "Scrape websites with Oxylabs Web API, supporting dynamic rendering and parsing for structured data extraction.",
    "repository": {
      "url": "https://github.com/oxylabs/oxylabs-mcp",
      "source": "github",
      "stars": 59,
      "lastUpdated": "2025-08-13T12:31:30Z"
    },
    "tags": [
      "official"
    ],
    "serverName": "oxylabs",
    "serverConfig": {
      "type": "stdio",
      "command": "uvx",
      "args": [
        "oxylabs-mcp"
      ],
      "env": {
        "OXYLABS_USERNAME": "OXYLABS_USERNAME",
        "OXYLABS_PASSWORD": "OXYLABS_PASSWORD",
        "OXYLABS_AI_STUDIO_API_KEY": "OXYLABS_AI_STUDIO_API_KEY"
      }
    }
  },
  {
    "id": "paddle:5079446d",
    "icon": "https://developer.paddle.com/favicon.svg",
    "name": "Paddle",
    "description": "Interact with the Paddle API. Manage product catalog, billing and subscriptions, and reports.",
    "repository": {
      "url": "https://github.com/PaddleHQ/paddle-mcp-server",
      "source": "github",
      "stars": 27,
      "lastUpdated": "2025-08-11T19:12:46Z"
    },
    "tags": [
      "official"
    ],
    "serverName": "paddle",
    "serverConfig": {
      "type": "stdio",
      "command": "npx",
      "args": [
        "-y",
        "@paddle/paddle-mcp",
        "--api-key=PADDLE_API_KEY",
        "--environment=(sandbox|production)"
      ]
    }
  },
  {
    "id": "paddleocr:c3e06762",
    "icon": null,
    "name": "PaddleOCR",
    "description": "An MCP server that brings enterprise-grade OCR and document parsing capabilities to AI applications.",
    "repository": {
      "url": "https://paddlepaddle.github.io/PaddleOCR/latest/en/version3.x/deployment/mcp_server.html",
      "source": "other"
    },
    "tags": [
      "official"
    ]
  },
  {
    "id": "pagerduty:17704f55",
    "icon": "https://cdn.brandfolder.io/YX9ETPCP/at/266537g8kh6mmvt24jvsjb/P-GreenRGB.svg",
    "name": "PagerDuty",
    "description": "Interact with your PagerDuty account, allowing you to manage incidents, services, schedules, and more directly from your MCP-enabled client.",
    "repository": {
      "url": "https://github.com/PagerDuty/pagerduty-mcp-server",
      "source": "github",
      "stars": 20,
      "lastUpdated": "2025-08-16T19:04:02Z"
    },
    "tags": [
      "official"
    ]
  },
  {
    "id": "pagos:8989c862",
    "icon": null,
    "name": "Pagos",
    "description": "Interact with the Pagos API. Query Credit Card BIN Data with more to come.",
    "repository": {
      "url": "https://github.com/pagos-ai/pagos-mcp",
      "source": "github",
      "stars": 0,
      "lastUpdated": "2025-07-21T14:02:03Z"
    },
    "tags": [
      "official"
    ]
  },
  {
    "id": "paiml-mcp-agent-toolkit:5bafeb8c",
    "icon": "https://paiml.com/favicon.ico",
    "name": "PAIML MCP Agent Toolkit",
    "description": "Professional project scaffolding toolkit with zero-configuration AI context generation, template generation for Rust/Deno/Python projects, and hybrid neuro-symbolic code analysis.",
    "repository": {
      "url": "https://github.com/paiml/paiml-mcp-agent-toolkit",
      "source": "github",
      "stars": 75,
      "lastUpdated": "2025-08-16T15:10:23Z"
    },
    "tags": [
      "official"
    ]
  },
  {
    "id": "paper:12d86818",
    "icon": "https://app.paperinvest.io/favicon.svg",
    "name": "Paper",
    "description": "Realistic paper trading platform with market simulation, 22 broker emulations, and professional tools for risk-free trading practice. First trading platform with MCP integration.",
    "repository": {
      "url": "https://github.com/paperinvest/mcp-server",
      "source": "github",
      "stars": 8,
      "lastUpdated": "2025-08-13T17:24:10Z"
    },
    "tags": [
      "official"
    ],
    "serverName": "paper",
    "serverConfig": {
      "type": "stdio",
      "command": "npx",
      "args": [
        "@paperinvest/mcp-server"
      ],
      "env": {
        "PAPER_INVEST_API_KEY": "your-api-key-here"
      }
    }
  },
  {
    "id": "patronus-ai:f456bba3",
    "icon": null,
    "name": "Patronus AI",
    "description": "Test, evaluate, and optimize AI agents and RAG apps",
    "repository": {
      "url": "https://github.com/patronus-ai/patronus-mcp-server",
      "source": "github",
      "stars": 13,
      "lastUpdated": "2025-04-15T10:32:23Z"
    },
    "tags": [
      "official"
    ]
  },
  {
    "id": "paypal:1e980f2f",
    "icon": "https://www.paypalobjects.com/webstatic/icon/favicon.ico",
    "name": "PayPal",
    "description": "PayPal's official MCP server.",
    "repository": {
      "url": "https://mcp.paypal.com",
      "source": "other"
    },
    "tags": [
      "official"
    ]
  },
  {
    "id": "pearl:50e3cda5",
    "icon": "https://ww2-secure.pearl.com/static/pearl/pearl-logo.svg",
    "name": "Pearl",
    "description": "Official MCP Server to interact with Pearl API. Connect your AI Agents with 12,000+ certified experts instantly.",
    "repository": {
      "url": "https://github.com/Pearl-com/pearl_mcp_server",
      "source": "github",
      "stars": 4,
      "lastUpdated": "2025-08-13T12:36:12Z"
    },
    "tags": [
      "official"
    ],
    "serverName": "pearl",
    "serverConfig": {
      "type": "stdio",
      "command": "npx",
      "args": [
        "mcp-remote",
        "https://mcp.pearl.com/sse"
      ]
    }
  },
  {
    "id": "perplexity:88b3b99a",
    "icon": "https://www.perplexity.ai/favicon.ico",
    "name": "Perplexity",
    "description": "An MCP server that connects to Perplexity's Sonar API, enabling real-time web-wide research in conversational AI.",
    "repository": {
      "url": "https://github.com/ppl-ai/modelcontextprotocol",
      "source": "github",
      "stars": 1504,
      "lastUpdated": "2025-08-16T17:06:16Z"
    },
    "tags": [
      "official"
    ],
    "serverName": "perplexity",
    "serverConfig": {
      "type": "stdio",
      "command": "npx",
      "args": [
        "-y",
        "server-perplexity-ask"
      ],
      "env": {
        "PERPLEXITY_API_KEY": "YOUR_API_KEY_HERE"
      }
    }
  },
  {
    "id": "pga-golf:0b9b5dc7",
    "icon": "https://www.pga.com/favicon.ico",
    "name": "PGA (Golf)",
    "description": "PGA's official MCP Server for all things golf-related. Find a coach, play golf, improve your game, and more.",
    "repository": {
      "url": "https://mcp.pga.com",
      "source": "other"
    },
    "tags": [
      "official"
    ]
  },
  {
    "id": "pinecone:cf5cb869",
    "icon": "https://avatars.githubusercontent.com/u/54333248",
    "name": "Pinecone",
    "description": "Pinecone's developer MCP Server assist developers in searching documentation and managing data within their development environment.",
    "repository": {
      "url": "https://github.com/pinecone-io/pinecone-mcp",
      "source": "github",
      "stars": 34,
      "lastUpdated": "2025-08-08T17:31:28Z"
    },
    "tags": [
      "official"
    ]
  },
  {
    "id": "pinecone-assistant:a5f0fb1d",
    "icon": "https://avatars.githubusercontent.com/u/54333248",
    "name": "Pinecone Assistant",
    "description": "Retrieves context from your Pinecone Assistant knowledge base.",
    "repository": {
      "url": "https://github.com/pinecone-io/assistant-mcp",
      "source": "github",
      "stars": 34,
      "lastUpdated": "2025-08-10T16:39:57Z"
    },
    "tags": [
      "official"
    ],
    "serverName": "pinecone-assistant",
    "serverConfig": {
      "type": "stdio",
      "command": "docker",
      "args": [
        "run",
        "-i",
        "--rm",
        "-e",
        "PINECONE_API_KEY",
        "-e",
        "PINECONE_ASSISTANT_HOST",
        "pinecone/assistant-mcp"
      ],
      "env": {
        "PINECONE_API_KEY": "<YOUR_PINECONE_API_KEY_HERE>",
        "PINECONE_ASSISTANT_HOST": "<YOUR_PINECONE_ASSISTANT_HOST_HERE>"
      }
    }
  },
  {
    "id": "pipedream:21625225",
    "icon": "https://pipedream.com/favicon.ico",
    "name": "Pipedream",
    "description": "Connect with 2,500 APIs with 8,000+ prebuilt tools.",
    "repository": {
      "url": "https://github.com/PipedreamHQ/pipedream/tree/master/modelcontextprotocol",
      "source": "github",
      "stars": 10426,
      "lastUpdated": "2025-08-16T22:54:36Z"
    },
    "tags": [
      "official"
    ]
  },
  {
    "id": "playcanvas:919b7d22",
    "icon": "https://playcanvas.com/static-assets/images/icons/favicon.png",
    "name": "PlayCanvas",
    "description": "Create interactive 3D web apps with the PlayCanvas Editor.",
    "repository": {
      "url": "https://github.com/playcanvas/editor-mcp-server",
      "source": "github",
      "stars": 59,
      "lastUpdated": "2025-08-07T02:39:52Z"
    },
    "tags": [
      "official"
    ],
    "serverName": "playcanvas",
    "serverConfig": {
      "type": "stdio",
      "command": "npx",
      "args": [
        "tsx",
        "/path/to/mcp-editor/src/server.ts"
      ],
      "env": {
        "PORT": "52000"
      }
    }
  },
  {
    "id": "plugged-in:12256101",
    "icon": "https://www.plugged.in/favicon.ico",
    "name": "Plugged.in",
    "description": "A comprehensive proxy that combines multiple MCP servers into a single MCP. It provides discovery and management of tools, prompts, resources, and templates across servers, plus a playground for debugging when building MCP servers.",
    "repository": {
      "url": "https://github.com/VeriTeknik/pluggedin-mcp",
      "source": "github",
      "stars": 19,
      "lastUpdated": "2025-08-12T09:41:29Z"
    },
    "tags": [
      "official"
    ],
    "serverName": "plugged-in",
    "serverConfig": {
      "type": "stdio",
      "command": "npx",
      "args": [
        "-y",
        "@pluggedin/pluggedin-mcp-proxy@latest"
      ],
      "env": {
        "PLUGGEDIN_API_KEY": "YOUR_API_KEY"
      }
    }
  },
  {
    "id": "port-io:0f1a077d",
    "icon": "https://github.com/port-labs/port-mcp-server/blob/main/assets/port_symbol_white.svg",
    "name": "Port IO",
    "description": "Access and manage your software catalog to improve service quality and compliance.",
    "repository": {
      "url": "https://github.com/port-labs/port-mcp-server",
      "source": "github",
      "stars": 12,
      "lastUpdated": "2025-07-29T17:28:42Z"
    },
    "tags": [
      "official"
    ],
    "serverName": "port-io",
    "serverConfig": {
      "type": "stdio",
      "command": "uvx",
      "args": [
        "mcp-server-port@0.2.8",
        "--client-id",
        "<PORT_CLIENT_ID>",
        "--client-secret",
        "<PORT_CLIENT_SECRET>",
        "--region",
        "<PORT_REGION>"
      ],
      "env": {
        "PORT_CLIENT_ID": "<PORT_CLIENT_ID>",
        "PORT_CLIENT_SECRET": "<PORT_CLIENT_SECRET>",
        "PORT_REGION": "<PORT_REGION>",
        "PYTHONPATH": "/Users/matangrady/.venv-port-mcp/bin/python"
      }
    }
  },
  {
    "id": "posthog:d8da0c55",
    "icon": null,
    "name": "PostHog",
    "description": "Interact with PostHog analytics, feature flags, error tracking and more with the official PostHog MCP server.",
    "repository": {
      "url": "https://github.com/posthog/mcp",
      "source": "github",
      "stars": 108,
      "lastUpdated": "2025-08-15T14:50:29Z"
    },
    "tags": [
      "official"
    ],
    "serverName": "posthog",
    "serverConfig": {
      "type": "stdio",
      "command": "npx",
      "args": [
        "-y",
        "mcp-remote@latest",
        "https://mcp.posthog.com/mcp",
        "--header",
        "Authorization:${POSTHOG_AUTH_HEADER}"
      ],
      "env": {
        "POSTHOG_AUTH_HEADER": "Bearer {INSERT_YOUR_PERSONAL_API_KEY_HERE}"
      }
    }
  },
  {
    "id": "postman-api:6f6a9b2c",
    "icon": null,
    "name": "Postman API",
    "description": "Manage your Postman resources using the Postman API.",
    "repository": {
      "url": "https://github.com/postmanlabs/postman-api-mcp",
      "source": "github",
      "stars": 15,
      "lastUpdated": "2025-08-14T19:29:35Z"
    },
    "tags": [
      "official"
    ],
    "serverName": "postman-api",
    "serverConfig": {
      "type": "sse",
      "url": "https://mcp.postman.com/mcp",
      "headers": {
        "Authorization": "Bearer ${input:postman-api-key}"
      }
    }
  },
  {
    "id": "powerdrill:1e772572",
    "icon": "https://powerdrill.ai/_next/static/media/powerdrill.0fa27d00.webp",
    "name": "Powerdrill",
    "description": "An MCP server that provides tools to interact with Powerdrill datasets, enabling smart AI data analysis and insights.",
    "repository": {
      "url": "https://github.com/powerdrillai/powerdrill-mcp",
      "source": "github",
      "stars": 12,
      "lastUpdated": "2025-08-11T16:38:04Z"
    },
    "tags": [
      "official"
    ],
    "serverName": "powerdrill",
    "serverConfig": {
      "type": "stdio",
      "command": "npx",
      "args": [
        "-y",
        "@powerdrillai/powerdrill-mcp@latest"
      ],
      "env": {
        "POWERDRILL_USER_ID": "your_actual_user_id",
        "POWERDRILL_PROJECT_API_KEY": "your_actual_project_api_key"
      }
    }
  },
  {
    "id": "prisma:5f84a70d",
    "icon": "https://www.prisma.io/images/favicon-32x32.png",
    "name": "Prisma",
    "description": "Create and manage Prisma Postgres databases",
    "repository": {
      "url": "https://www.prisma.io/docs/postgres/mcp-server",
      "source": "other"
    },
    "tags": [
      "official"
    ]
  },
  {
    "id": "probe-dev:efdfe72a",
    "icon": "https://probe.dev/favicon.ico",
    "name": "Probe.dev",
    "description": "Comprehensive media analysis and validation powered by Probe.dev. Hosted MCP server with FFprobe, MediaInfo, and Probe Report analysis capabilities.",
    "repository": {
      "url": "https://docs.probe.dev/guides/mcp-integration",
      "source": "other"
    },
    "tags": [
      "official"
    ]
  },
  {
    "id": "prompthouse:8e9b2ab6",
    "icon": "https://github.com/newtype-01/prompthouse-mcp/raw/main/prompthouse-logo-12x12.png",
    "name": "PromptHouse",
    "description": "Personal prompt library with MCP integration for AI clients.",
    "repository": {
      "url": "https://github.com/newtype-01/prompthouse-mcp",
      "source": "github",
      "stars": 16,
      "lastUpdated": "2025-08-13T07:01:15Z"
    },
    "tags": [
      "official"
    ],
    "serverName": "prompthouse",
    "serverConfig": {
      "type": "stdio",
      "command": "npx",
      "args": [
        "prompthouse-mcp"
      ],
      "env": {
        "PROMPTHOUSE_ACCESS_LINK": "your-access-link-here"
      }
    }
  },
  {
    "id": "proxymock:da79a1cc",
    "icon": "https://docs.speedscale.com/img/favicon.ico",
    "name": "proxymock",
    "description": "An MCP server that automatically generates tests and mocks by recording a live app.",
    "repository": {
      "url": "https://docs.speedscale.com/proxymock/reference/mcp/",
      "source": "other"
    },
    "tags": [
      "official"
    ]
  },
  {
    "id": "pubnub:75a73fff",
    "icon": "https://www.pubnub.com/favicon/favicon-32x32.png",
    "name": "PubNub",
    "description": "Retrieves context for developing with PubNub SDKs and calling APIs.",
    "repository": {
      "url": "https://github.com/pubnub/pubnub-mcp-server",
      "source": "github",
      "stars": 7,
      "lastUpdated": "2025-08-08T22:51:31Z"
    },
    "tags": [
      "official"
    ],
    "serverName": "pubnub",
    "serverConfig": {
      "type": "stdio",
      "command": "npx",
      "args": [
        "-y",
        "@pubnub/mcp"
      ],
      "env": {
        "PUBNUB_PUBLISH_KEY": "YOUR_PUBLISH_KEY",
        "PUBNUB_SUBSCRIBE_KEY": "YOUR_SUBSCRIBE_KEY"
      }
    }
  },
  {
    "id": "pulumi:d663d6c1",
    "icon": "https://www.pulumi.com/images/favicon.ico",
    "name": "Pulumi",
    "description": "Deploy and manage cloud infrastructure using Pulumi.",
    "repository": {
      "url": "https://github.com/pulumi/mcp-server",
      "source": "github",
      "stars": 61,
      "lastUpdated": "2025-08-14T19:19:49Z"
    },
    "tags": [
      "official"
    ],
    "serverName": "pulumi",
    "serverConfig": {
      "type": "stdio",
      "command": "npx",
      "args": [
        "@pulumi/mcp-server@latest",
        "stdio"
      ]
    }
  },
  {
    "id": "pure-md:afade629",
    "icon": "https://pure.md/favicon.png",
    "name": "Pure.md",
    "description": "Reliably access web content in markdown format with pure.md (bot detection avoidance, proxy rotation, and headless JS rendering built in).",
    "repository": {
      "url": "https://github.com/puremd/puremd-mcp",
      "source": "github",
      "stars": 33,
      "lastUpdated": "2025-08-08T14:42:20Z"
    },
    "tags": [
      "official"
    ],
    "serverName": "pure-md",
    "serverConfig": {
      "type": "stdio",
      "command": "npx",
      "args": [
        "-y",
        "puremd-mcp"
      ],
      "env": {
        "PUREMD_API_KEY": "<TOKEN>"
      }
    }
  },
  {
    "id": "put-io:8cabb4bf",
    "icon": "https://put.io/images/favicon.ico",
    "name": "Put.io",
    "description": "Interact with your Put.io account to download torrents.",
    "repository": {
      "url": "https://github.com/putdotio/putio-mcp-server",
      "source": "github",
      "stars": 9,
      "lastUpdated": "2025-07-10T14:38:39Z"
    },
    "tags": [
      "official"
    ],
    "serverName": "put-io",
    "serverConfig": {
      "type": "stdio",
      "command": "uvx",
      "args": [
        "putio-mcp-server"
      ],
      "env": {
        "PUTIO_TOKEN": "<your-putio-api-token>"
      }
    }
  },
  {
    "id": "qdrant:88ce4605",
    "icon": "https://qdrant.tech/img/brand-resources-logos/logomark.svg",
    "name": "Qdrant",
    "description": "Implement semantic memory layer on top of the Qdrant vector search engine",
    "repository": {
      "url": "https://github.com/qdrant/mcp-server-qdrant/",
      "source": "github",
      "stars": 856,
      "lastUpdated": "2025-08-16T23:14:08Z"
    },
    "tags": [
      "official"
    ],
    "serverName": "qdrant",
    "serverConfig": {
      "type": "stdio",
      "command": "uvx",
      "args": [
        "mcp-server-qdrant"
      ],
      "env": {
        "QDRANT_URL": "${input:qdrantUrl}",
        "QDRANT_API_KEY": "${input:qdrantApiKey}",
        "COLLECTION_NAME": "${input:collectionName}"
      }
    }
  },
  {
    "id": "qorus:9d64721d",
    "icon": "https://api.qoretechnologies.com/api/public/apps/Qorus/qorus-logo.svg",
    "name": "Qorus",
    "description": "Connect to any application, system, or technology and automate your business processes without coding and with AI",
    "repository": {
      "url": "https://qoretechnologies.com/manual/qorus/current/qorus/sysarch.html#mcp_server",
      "source": "other"
    },
    "tags": [
      "official"
    ]
  },
  {
    "id": "quickchat-ai:03f5814b",
    "icon": null,
    "name": "Quickchat AI",
    "description": "Launch your conversational Quickchat AI agent as an MCP to give AI apps real-time access to its Knowledge Base and conversational capabilities",
    "repository": {
      "url": "https://github.com/incentivai/quickchat-ai-mcp",
      "source": "github",
      "stars": 20,
      "lastUpdated": "2025-07-02T22:54:11Z"
    },
    "tags": [
      "official"
    ]
  },
  {
    "id": "ragie:8ade7512",
    "icon": "https://avatars.githubusercontent.com/u/165178062",
    "name": "Ragie",
    "description": "Retrieve context from your Ragie (RAG) knowledge base connected to integrations like Google Drive, Notion, JIRA and more.",
    "repository": {
      "url": "https://github.com/ragieai/ragie-mcp-server/",
      "source": "github",
      "stars": 64,
      "lastUpdated": "2025-08-11T20:51:08Z"
    },
    "tags": [
      "official"
    ],
    "serverName": "ragie",
    "serverConfig": {
      "type": "stdio",
      "command": "npx",
      "args": [
        "-y",
        "@ragieai/mcp-server",
        "--partition",
        "optional_partition_id"
      ],
      "env": {
        "RAGIE_API_KEY": "your_api_key"
      }
    }
  },
  {
    "id": "ramp:dadb87a3",
    "icon": "https://www.ramp.com/favicon.ico",
    "name": "Ramp",
    "description": "Interact with Ramp's Developer API to run analysis on your spend and gain insights leveraging LLMs",
    "repository": {
      "url": "https://github.com/ramp-public/ramp-mcp",
      "source": "github",
      "stars": 25,
      "lastUpdated": "2025-08-03T00:06:12Z"
    },
    "tags": [
      "official"
    ],
    "serverName": "ramp",
    "serverConfig": {
      "type": "stdio",
      "command": "uv",
      "args": [
        "--directory",
        "/<ABSOLUTE-PATH-TO>/ramp-mcp",
        "run",
        "ramp-mcp",
        "-s",
        "transactions:read,reimbursements:read"
      ],
      "env": {
        "RAMP_CLIENT_ID": "<CLIENT_ID>",
        "RAMP_CLIENT_SECRET": "<CLIENT_SECRET>",
        "RAMP_ENV": "<demo|qa|prd>"
      }
    }
  },
  {
    "id": "raygun:8a646cfd",
    "icon": null,
    "name": "Raygun",
    "description": "Interact with your crash reporting and real using monitoring data on your Raygun account",
    "repository": {
      "url": "https://github.com/MindscapeHQ/mcp-server-raygun",
      "source": "github",
      "stars": 16,
      "lastUpdated": "2025-07-21T11:10:52Z"
    },
    "tags": [
      "official"
    ],
    "serverName": "raygun",
    "serverConfig": {
      "type": "stdio",
      "command": "npx",
      "args": [
        "-y",
        "@raygun.io/mcp-server-raygun"
      ],
      "env": {
        "RAYGUN_PAT_TOKEN": "your-pat-token-here"
      }
    }
  },
  {
    "id": "razorpay:4de30b36",
    "icon": "https://framerusercontent.com/images/CU1m0xFonUl76ZeaW0IdkQ0M.png",
    "name": "Razorpay",
    "description": "Razorpay's official MCP server",
    "repository": {
      "url": "https://github.com/razorpay/razorpay-mcp-server",
      "source": "github",
      "stars": 204,
      "lastUpdated": "2025-08-16T15:26:40Z"
    },
    "tags": [
      "official"
    ],
    "serverName": "razorpay",
    "serverConfig": {
      "type": "stdio",
      "command": "docker",
      "args": [
        "run",
        "--rm",
        "-i",
        "-e",
        "RAZORPAY_KEY_ID",
        "-e",
        "RAZORPAY_KEY_SECRET",
        "razorpay/mcp"
      ],
      "env": {
        "RAZORPAY_KEY_ID": "your_razorpay_key_id",
        "RAZORPAY_KEY_SECRET": "your_razorpay_key_secret"
      }
    }
  },
  {
    "id": "recraft:b2129ef7",
    "icon": "https://www.recraft.ai/favicons/icon.svg",
    "name": "Recraft",
    "description": "Generate raster and vector (SVG) images using Recraft. Also you can edit, upscale images, create your own styles, and vectorize raster images",
    "repository": {
      "url": "https://github.com/recraft-ai/mcp-recraft-server",
      "source": "github",
      "stars": 31,
      "lastUpdated": "2025-08-13T21:33:12Z"
    },
    "tags": [
      "official"
    ],
    "serverName": "recraft",
    "serverConfig": {
      "type": "stdio",
      "command": "npx",
      "args": [
        "-y",
        "@recraft-ai/mcp-recraft-server@latest"
      ],
      "env": {
        "RECRAFT_API_KEY": "<YOUR_RECRAFT_API_KEY>",
        "IMAGE_STORAGE_DIRECTORY": "<YOUR_IMAGE_STORAGE_DIRECTORY>",
        "RECRAFT_REMOTE_RESULTS_STORAGE": "<YOUR_REMOTE_RESULTS_STORAGE_INDICATOR>"
      }
    }
  },
  {
    "id": "redis:9d496aac",
    "icon": "https://avatars.githubusercontent.com/u/1529926",
    "name": "Redis",
    "description": "The Redis official MCP Server offers an interface to manage and search data in Redis.",
    "repository": {
      "url": "https://github.com/redis/mcp-redis/",
      "source": "github",
      "stars": 206,
      "lastUpdated": "2025-08-16T13:27:49Z"
    },
    "tags": [
      "official"
    ],
    "serverName": "redis",
    "serverConfig": {
      "type": "stdio",
      "command": "uvx",
      "args": [
        "--from",
        "git+https://github.com/redis/mcp-redis.git",
        "redis-mcp-server",
        "--url",
        "redis://localhost:6379/0"
      ]
    }
  },
  {
    "id": "redis-cloud-api:603ef5c5",
    "icon": "https://avatars.githubusercontent.com/u/1529926",
    "name": "Redis Cloud API",
    "description": "The Redis Cloud API MCP Server allows you to manage your Redis Cloud resources using natural language.",
    "repository": {
      "url": "https://github.com/redis/mcp-redis-cloud/",
      "source": "github",
      "stars": 32,
      "lastUpdated": "2025-08-09T15:24:19Z"
    },
    "tags": [
      "official"
    ]
  },
  {
    "id": "reexpress:bb1ff6d5",
    "icon": "https://avatars.githubusercontent.com/u/149024635",
    "name": "Reexpress",
    "description": "Enable Similarity-Distance-Magnitude statistical verification for your search, software, and data science workflows",
    "repository": {
      "url": "https://github.com/ReexpressAI/reexpress_mcp_server",
      "source": "github",
      "stars": 4,
      "lastUpdated": "2025-08-17T02:20:23Z"
    },
    "tags": [
      "official"
    ]
  },
  {
    "id": "reltio:11ed9799",
    "icon": "https://www.reltio.com/wp-content/uploads/2024/03/cropped-cropped-Reltio_Light_Mode_Dark_Mode_Favicon-270x270.png",
    "name": "Reltio",
    "description": "A lightweight, plugin-based MCP server designed to perform advanced entity matching with language models in Reltio environments.",
    "repository": {
      "url": "https://github.com/reltio-ai/reltio-mcp-server",
      "source": "github",
      "stars": 0,
      "lastUpdated": "2025-08-05T12:34:02Z"
    },
    "tags": [
      "official"
    ],
    "serverName": "reltio",
    "serverConfig": {
      "type": "stdio",
      "command": "npx",
      "args": [
        "mcp-remote@0.0.22",
        "http://localhost:8000/sse"
      ]
    }
  },
  {
    "id": "rember:ea416132",
    "icon": "https://www.rember.com/favicon.ico",
    "name": "Rember",
    "description": "Create spaced repetition flashcards in Rember to remember anything you learn in your chats",
    "repository": {
      "url": "https://github.com/rember/rember-mcp",
      "source": "github",
      "stars": 52,
      "lastUpdated": "2025-08-16T02:22:21Z"
    },
    "tags": [
      "official"
    ],
    "serverName": "rember",
    "serverConfig": {
      "type": "stdio",
      "command": "npx",
      "args": [
        "-y",
        "@getrember/mcp",
        "--api-key=YOUR_REMBER_API_KEY"
      ]
    }
  },
  {
    "id": "revit:26f3b650",
    "icon": "http://nonica.io/Nonica-logo.ico",
    "name": "Revit",
    "description": "Connect and interact with your Revit models live.",
    "repository": {
      "url": "https://github.com/NonicaTeam/AI-Connector-for-Revit",
      "source": "github",
      "stars": 2,
      "lastUpdated": "2025-07-11T23:44:54Z"
    },
    "tags": [
      "official"
    ]
  },
  {
    "id": "rill-data:815dc046",
    "icon": "https://ui.rilldata.com/favicon.png",
    "name": "Rill Data",
    "description": "Interact with Rill Data to query and analyze your data.",
    "repository": {
      "url": "https://docs.rilldata.com/explore/mcp",
      "source": "other"
    },
    "tags": [
      "official"
    ]
  },
  {
    "id": "riza:e09e8b48",
    "icon": "https://riza.io/favicon.ico",
    "name": "Riza",
    "description": "Arbitrary code execution and tool-use platform for LLMs by Riza",
    "repository": {
      "url": "https://github.com/riza-io/riza-mcp",
      "source": "github",
      "stars": 11,
      "lastUpdated": "2025-07-07T02:43:08Z"
    },
    "tags": [
      "official"
    ],
    "serverName": "riza",
    "serverConfig": {
      "type": "stdio",
      "command": "npx",
      "args": [
        "@riza-io/riza-mcp"
      ],
      "env": {
        "RIZA_API_KEY": "your-api-key"
      }
    }
  },
  {
    "id": "roblox-studio:7752dd0c",
    "icon": "https://cdn.foundation.roblox.com/current/RobloxStudio.ico",
    "name": "Roblox Studio",
    "description": "Roblox Studio MCP Server, create and manipulate scenes, scripts in Roblox Studio",
    "repository": {
      "url": "https://github.com/Roblox/studio-rust-mcp-server",
      "source": "github",
      "stars": 103,
      "lastUpdated": "2025-08-16T23:49:40Z"
    },
    "tags": [
      "official"
    ],
    "serverName": "roblox-studio",
    "serverConfig": {
      "type": "stdio",
      "command": "Path-to-downloaded\\rbx-studio-mcp.exe",
      "args": [
        "--stdio"
      ]
    }
  },
  {
    "id": "rodin:e6a32293",
    "icon": "https://hyper3d.ai/favicon.ico",
    "name": "Rodin",
    "description": "Generate 3D Models with Hyper3D Rodin",
    "repository": {
      "url": "https://github.com/DeemosTech/rodin-api-mcp",
      "source": "github",
      "stars": 3,
      "lastUpdated": "2025-08-02T02:33:20Z"
    },
    "tags": [
      "official"
    ]
  },
  {
    "id": "root-signals:0a002d28",
    "icon": "https://cdn.prod.website-files.com/66b7de6a233c04f4dac200a6/66bed52680d689629483c18b_faviconV2%20(2).png",
    "name": "Root Signals",
    "description": "Improve and quality control your outputs with evaluations using LLM-as-Judge",
    "repository": {
      "url": "https://github.com/root-signals/root-signals-mcp",
      "source": "github",
      "stars": 7,
      "lastUpdated": "2025-07-21T11:10:53Z"
    },
    "tags": [
      "official"
    ],
    "serverName": "root-signals",
    "serverConfig": {
      "type": "sse",
      "url": "http://localhost:9090/sse"
    }
  },
  {
    "id": "routine:4004c3f2",
    "icon": null,
    "name": "Routine",
    "description": "MCP server to interact with Routine: calendars, tasks, notes, etc.",
    "repository": {
      "url": "https://github.com/routineco/mcp-server",
      "source": "github",
      "stars": 2,
      "lastUpdated": "2025-08-01T12:37:43Z"
    },
    "tags": [
      "official"
    ],
    "serverName": "routine",
    "serverConfig": {
      "type": "stdio",
      "command": "npx",
      "args": [
        "routine-mcp-server"
      ]
    }
  },
  {
    "id": "safedep:18215459",
    "icon": "https://raw.githubusercontent.com/safedep/.github/refs/heads/main/assets/logo/1.png",
    "name": "SafeDep",
    "description": "SafeDep `vet-mcp` helps in  vetting open source packages for security risks—such as vulnerabilities and malicious code—before they're used in your project, especially with AI-generated code suggestions.",
    "repository": {
      "url": "https://github.com/safedep/vet/blob/main/docs/mcp.md",
      "source": "github",
      "stars": 658,
      "lastUpdated": "2025-08-15T18:04:23Z"
    },
    "tags": [
      "official"
    ]
  },
  {
    "id": "safeline:6e32aa2e",
    "icon": "https://waf-ce.chaitin.cn/favicon.ico",
    "name": "SafeLine",
    "description": "SafeLine is a self-hosted WAF(Web Application Firewall) to protect your web apps from attacks and exploits.",
    "repository": {
      "url": "https://github.com/chaitin/SafeLine/tree/main/mcp_server",
      "source": "github",
      "stars": 17413,
      "lastUpdated": "2025-08-17T02:28:40Z"
    },
    "tags": [
      "official"
    ]
  },
  {
    "id": "scrapi:10075019",
    "icon": "https://scrapi.tech/favicon.ico",
    "name": "ScrAPI",
    "description": "Web scraping using ScrAPI. Extract website content that is difficult to access because of bot detection, captchas or even geolocation restrictions.",
    "repository": {
      "url": "https://github.com/DevEnterpriseSoftware/scrapi-mcp",
      "source": "github",
      "stars": 10,
      "lastUpdated": "2025-08-14T01:44:12Z"
    },
    "tags": [
      "official"
    ],
    "serverName": "scrapi",
    "serverConfig": {
      "type": "stdio",
      "command": "npx",
      "args": [
        "-y",
        "@deventerprisesoftware/scrapi-mcp"
      ],
      "env": {
        "SCRAPI_API_KEY": "<YOUR_API_KEY>"
      }
    }
  },
  {
    "id": "screenshotmcp:b451adc8",
    "icon": "https://upnorthmedia.co/favicon.ico",
    "name": "ScreenshotMCP",
    "description": "A Model Context Protocol MCP server for capturing website screenshots with full page, element, and device size features.",
    "repository": {
      "url": "https://github.com/upnorthmedia/ScreenshotMCP/",
      "source": "github",
      "stars": 8,
      "lastUpdated": "2025-08-13T03:52:20Z"
    },
    "tags": [
      "official"
    ]
  },
  {
    "id": "screenshotone:6cf59dca",
    "icon": "https://screenshotone.com/favicon.ico",
    "name": "ScreenshotOne",
    "description": "Render website screenshots with ScreenshotOne",
    "repository": {
      "url": "https://github.com/screenshotone/mcp/",
      "source": "github",
      "stars": 29,
      "lastUpdated": "2025-08-04T01:06:19Z"
    },
    "tags": [
      "official"
    ],
    "serverName": "screenshotone",
    "serverConfig": {
      "type": "stdio",
      "command": "node",
      "args": [
        "path/to/screenshotone/mcp/build/index.js"
      ],
      "env": {
        "SCREENSHOTONE_API_KEY": "<your api key>"
      }
    }
  },
  {
    "id": "search1api:2b90a6b3",
    "icon": "https://pics.fatwang2.com/56912e614b35093426c515860f9f2234.svg",
    "name": "Search1API",
    "description": "One API for Search, Crawling, and Sitemaps",
    "repository": {
      "url": "https://github.com/fatwang2/search1api-mcp",
      "source": "github",
      "stars": 148,
      "lastUpdated": "2025-08-05T22:45:57Z"
    },
    "tags": [
      "official"
    ],
    "serverName": "search1api",
    "serverConfig": {
      "type": "stdio",
      "command": "npx",
      "args": [
        "-y",
        "search1api-mcp"
      ],
      "env": {
        "SEARCH1API_KEY": "YOUR_SEARCH1API_KEY"
      }
    }
  },
  {
    "id": "searchunify:cce14c1b",
    "icon": "https://www.searchunify.com/favicon.ico",
    "name": "SearchUnify",
    "description": "SearchUnify MCP Server (su-mcp) enables seamless integration of SearchUnify with Claude Desktop",
    "repository": {
      "url": "https://github.com/searchunify/su-mcp/",
      "source": "github",
      "stars": 2,
      "lastUpdated": "2025-05-07T10:37:56Z"
    },
    "tags": [
      "official"
    ],
    "serverName": "searchunify",
    "serverConfig": {
      "type": "stdio",
      "command": "docker",
      "args": [
        "run",
        "-i",
        "--rm",
        "-v",
        "<path_to_creds.json>:/input/creds.json:ro",
        "searchunifyutils/su-mcp"
      ]
    }
  },
  {
    "id": "secureframe:b4f2ae68",
    "icon": "https://secureframe.com/favicon.ico",
    "name": "Secureframe",
    "description": "Query security controls, monitor compliance tests, and access audit data across SOC 2, ISO 27001, CMMC, FedRAMP, and other frameworks from Secureframe.",
    "repository": {
      "url": "https://github.com/secureframe/secureframe-mcp-server",
      "source": "github",
      "stars": 3,
      "lastUpdated": "2025-07-05T11:29:56Z"
    },
    "tags": [
      "official"
    ],
    "serverName": "secureframe",
    "serverConfig": {
      "type": "stdio",
      "command": "python",
      "args": [
        "/absolute/path/to/secureframe-mcp-server/main.py"
      ],
      "env": {
        "SECUREFRAME_API_KEY": "your_api_key",
        "SECUREFRAME_API_SECRET": "your_api_secret",
        "SECUREFRAME_API_URL": "https://api.secureframe.com"
      }
    }
  },
  {
    "id": "semgrep:32f573c8",
    "icon": "https://semgrep.dev/favicon.ico",
    "name": "Semgrep",
    "description": "Enable AI agents to secure code with Semgrep.",
    "repository": {
      "url": "https://github.com/semgrep/mcp",
      "source": "github",
      "stars": 447,
      "lastUpdated": "2025-08-17T01:12:23Z"
    },
    "tags": [
      "official"
    ],
    "serverName": "semgrep",
    "serverConfig": {
      "type": "stdio",
      "command": "uvx",
      "args": [
        "semgrep-mcp"
      ],
      "env": {
        "SEMGREP_APP_TOKEN": "<token>"
      }
    }
  },
  {
    "id": "sequa-ai:7d337ced",
    "icon": "https://avatars.githubusercontent.com/u/187640573?s=48&v=4",
    "name": "Sequa.AI",
    "description": "Stop stitching context for Copilot and Cursor. With Sequa MCP, your AI tools know all your codebases and docs out of the box.",
    "repository": {
      "url": "https://github.com/sequa-ai/sequa-mcp",
      "source": "github",
      "stars": 4,
      "lastUpdated": "2025-08-16T10:19:20Z"
    },
    "tags": [
      "official"
    ],
    "serverName": "sequa-ai",
    "serverConfig": {
      "type": "stdio",
      "command": "npx",
      "args": [
        "-y",
        "@sequa-ai/sequa-mcp@latest",
        "https://mcp.sequa.ai/v1/setup-code-assistant"
      ]
    }
  },
  {
    "id": "shortcut:bde64465",
    "icon": "https://cdn.prod.website-files.com/6372338e5477e047032b37a5/64f85e6388a2a5c8c9525b4d_favLogo.png",
    "name": "Shortcut",
    "description": "Access and implement all of your projects and tasks (Stories) from Shortcut.",
    "repository": {
      "url": "https://github.com/useshortcut/mcp-server-shortcut",
      "source": "github",
      "stars": 61,
      "lastUpdated": "2025-08-16T21:17:32Z"
    },
    "tags": [
      "official"
    ],
    "serverName": "shortcut",
    "serverConfig": {
      "type": "stdio",
      "command": "npx",
      "args": [
        "-y",
        "@shortcut/mcp@latest"
      ],
      "env": {
        "SHORTCUT_API_TOKEN": "<YOUR_SHORTCUT_API_TOKEN>"
      }
    }
  },
  {
    "id": "singlestore:3aeb15af",
    "icon": "https://www.singlestore.com/favicon-32x32.png?v=277b9cbbe31e8bc416504cf3b902d430",
    "name": "SingleStore",
    "description": "Interact with the SingleStore database platform",
    "repository": {
      "url": "https://github.com/singlestore-labs/mcp-server-singlestore",
      "source": "github",
      "stars": 25,
      "lastUpdated": "2025-08-13T16:02:06Z"
    },
    "tags": [
      "official"
    ],
    "serverName": "singlestore",
    "serverConfig": {
      "type": "stdio",
      "command": "uvx",
      "args": [
        "singlestore-mcp-server",
        "start"
      ]
    }
  },
  {
    "id": "smartbear:a499e2db",
    "icon": "https://smartbear.com/smartbear/assets/img/favicon.png",
    "name": "SmartBear",
    "description": "Provides access to multiple capabilities across SmartBear's API Hub, Test Hub, and Insight Hub, all through dedicated tools and resources.",
    "repository": {
      "url": "https://github.com/SmartBear/smartbear-mcp",
      "source": "github",
      "stars": 14,
      "lastUpdated": "2025-08-13T14:52:13Z"
    },
    "tags": [
      "official"
    ],
    "serverName": "smartbear",
    "serverConfig": {
      "type": "stdio",
      "command": "npx",
      "args": [
        "-y",
        "@smartbear/mcp@latest"
      ],
      "env": {
        "INSIGHT_HUB_AUTH_TOKEN": "your_personal_auth_token",
        "INSIGHT_HUB_PROJECT_API_KEY": "your_project_api_key",
        "REFLECT_API_TOKEN": "your_reflect_token",
        "API_HUB_API_KEY": "your_api_hub_key"
      }
    }
  },
  {
    "id": "smooth-operator:3fd8b9a3",
    "icon": "https://smooth-operator.online/logo48.png",
    "name": "Smooth Operator",
    "description": "Tools to automate Windows via AI Vision, Mouse, Keyboard, Automation Trees, Webbrowser",
    "repository": {
      "url": "https://smooth-operator.online/agent-tools-api-docs/toolserverdocs",
      "source": "other"
    },
    "tags": [
      "official"
    ]
  },
  {
    "id": "snyk:ac9ad360",
    "icon": "https://app.snyk.io/bundle/favicon-faj49uD9.png",
    "name": "Snyk",
    "description": "Enhance security posture by embedding Snyk vulnerability scanning directly into agentic workflows.",
    "repository": {
      "url": "https://github.com/snyk/snyk-ls/blob/main/mcp_extension/README.md",
      "source": "github",
      "stars": 63,
      "lastUpdated": "2025-08-15T15:31:02Z"
    },
    "tags": [
      "official"
    ]
  },
  {
    "id": "sonarqube:7eb727cf",
    "icon": "https://www.sonarsource.com/favicon.ico",
    "name": "SonarQube",
    "description": "Enables seamless integration with SonarQube Server or Cloud and allows for code snippet analysis within the agent context.",
    "repository": {
      "url": "https://github.com/SonarSource/sonarqube-mcp-server",
      "source": "github",
      "stars": 68,
      "lastUpdated": "2025-08-16T16:22:57Z"
    },
    "tags": [
      "official"
    ]
  },
  {
    "id": "sophtron:8e277aab",
    "icon": "https://sophtron.com/favicon.ico",
    "name": "Sophtron",
    "description": "Connect to your bank, credit card, utilities accounts to retrieve account balances and transactions with Sophtron Bank Integration.",
    "repository": {
      "url": "https://github.com/sophtron/Sophtron-Integration/tree/main/modelcontextprotocol",
      "source": "github",
      "stars": 7,
      "lastUpdated": "2025-07-01T05:10:13Z"
    },
    "tags": [
      "official"
    ],
    "serverName": "sophtron",
    "serverConfig": {
      "type": "stdio",
      "command": "npx",
      "args": [
        "-y",
        "@sophtron/server-sophtron"
      ],
      "env": {
        "SOPHTRON_USER_ID": "<YOUR_USER_ID>",
        "SOPHTRON_ACCESS_KEY": "<YOUR_ACCESS_KEY>"
      }
    }
  },
  {
    "id": "stackhawk:690c989b",
    "icon": "https://www.stackhawk.com/wp-content/uploads/2025/03/icon-512x512-2-150x150.png",
    "name": "StackHawk",
    "description": "Use StackHawk to test for and FIX security problems in your code or vibe coded app.",
    "repository": {
      "url": "https://github.com/stackhawk/stackhawk-mcp",
      "source": "github",
      "stars": 0,
      "lastUpdated": "2025-07-15T22:35:51Z"
    },
    "tags": [
      "official"
    ]
  },
  {
    "id": "starrocks:5708af8e",
    "icon": "https://www.starrocks.io/favicon.ico",
    "name": "StarRocks",
    "description": "Interact with StarRocks",
    "repository": {
      "url": "https://github.com/StarRocks/mcp-server-starrocks",
      "source": "github",
      "stars": 102,
      "lastUpdated": "2025-08-14T01:08:19Z"
    },
    "tags": [
      "official"
    ],
    "serverName": "starrocks",
    "serverConfig": {
      "type": "stdio",
      "command": "uv",
      "args": [
        "run",
        "--with",
        "mcp-server-starrocks",
        "mcp-server-starrocks"
      ],
      "env": {
        "STARROCKS_HOST": "default localhost",
        "STARROCKS_PORT": "default 9030",
        "STARROCKS_USER": "default root",
        "STARROCKS_PASSWORD": "default empty",
        "STARROCKS_DB": "default empty",
        "STARROCKS_OVERVIEW_LIMIT": "default 20000",
        "STARROCKS_MYSQL_AUTH_PLUGIN": "mysql_clear_password"
      }
    }
  },
  {
    "id": "steadybit:3c48386e",
    "icon": "https://downloads.steadybit.com/logomark.svg",
    "name": "Steadybit",
    "description": "Interact with Steadybit",
    "repository": {
      "url": "https://github.com/steadybit/mcp",
      "source": "github",
      "stars": 0,
      "lastUpdated": "2025-07-18T09:04:16Z"
    },
    "tags": [
      "official"
    ]
  },
  {
    "id": "stripe:fe1694e5",
    "icon": "https://stripe.com/favicon.ico",
    "name": "Stripe",
    "description": "Interact with Stripe API",
    "repository": {
      "url": "https://github.com/stripe/agent-toolkit",
      "source": "github",
      "stars": 930,
      "lastUpdated": "2025-08-15T00:54:43Z"
    },
    "tags": [
      "official"
    ]
  },
  {
    "id": "sunra-ai:9d7eadd7",
    "icon": "https://sunra.ai/favicon.ico",
    "name": "Sunra AI",
    "description": "Search for and run AI models on Sunra.ai. Discover models, create video, image, and 3D model content, track their status, and manage the generated media.",
    "repository": {
      "url": "https://github.com/sunra-ai/sunra-clients/tree/main/mcp-server",
      "source": "github",
      "stars": 6,
      "lastUpdated": "2025-08-13T03:35:34Z"
    },
    "tags": [
      "official"
    ],
    "serverName": "sunra-ai",
    "serverConfig": {
      "type": "stdio",
      "command": "npx",
      "args": [
        "@sunra/mcp-server"
      ],
      "env": {
        "SUNRA_KEY": "${SUNRA_KEY}"
      }
    }
  },
  {
    "id": "supabase:5a2b1bfa",
    "icon": "https://supabase.com/favicon/favicon.ico",
    "name": "Supabase",
    "description": "Interact with Supabase: Create tables, query data, deploy edge functions, and more.",
    "repository": {
      "url": "https://github.com/supabase-community/supabase-mcp",
      "source": "github",
      "stars": 1952,
      "lastUpdated": "2025-08-16T14:38:49Z"
    },
    "tags": [
      "official"
    ],
    "serverName": "supabase",
    "serverConfig": {
      "type": "stdio",
      "command": "npx",
      "args": [
        "-y",
        "@supabase/mcp-server-supabase@latest",
        "--read-only",
        "--project-ref=<project-ref>"
      ],
      "env": {
        "SUPABASE_ACCESS_TOKEN": "<personal-access-token>"
      }
    }
  },
  {
    "id": "supadata:d1a1141b",
    "icon": "https://supadata.ai/favicon.ico",
    "name": "Supadata",
    "description": "Official MCP server for Supadata - YouTube, TikTok, X and Web data for makers.",
    "repository": {
      "url": "https://github.com/supadata-ai/mcp",
      "source": "github",
      "stars": 3,
      "lastUpdated": "2025-08-16T01:05:01Z"
    },
    "tags": [
      "official"
    ],
    "serverName": "supadata",
    "serverConfig": {
      "type": "stdio",
      "command": "npx",
      "args": [
        "-y",
        "supadata-mcp"
      ],
      "env": {
        "SUPADATA_API_KEY": "YOUR_API_KEY"
      }
    }
  },
  {
    "id": "tako:ff715a7c",
    "icon": "https://d12w4pyrrczi5e.cloudfront.net/archive/50eb154ab859c63a8f1c850f9fe094e25d35e929/images/favicon.ico",
    "name": "Tako",
    "description": "Use natural language to search Tako for real-time financial, sports, weather, and public data with visualization",
    "repository": {
      "url": "https://github.com/TakoData/tako-mcp",
      "source": "github",
      "stars": 1,
      "lastUpdated": "2025-08-03T20:45:35Z"
    },
    "tags": [
      "official"
    ],
    "serverName": "tako",
    "serverConfig": {
      "type": "stdio",
      "command": "uv",
      "args": [
        "--directory",
        "/path/to/tako/mcp",
        "run",
        "main.py"
      ],
      "env": {
        "TAKO_API_KEY": "<TAKO_API_KEY>"
      }
    }
  },
  {
    "id": "tavily:81fe5304",
    "icon": "https://tavily.com/favicon.ico",
    "name": "Tavily",
    "description": "Search engine for AI agents (search + extract) powered by Tavily",
    "repository": {
      "url": "https://github.com/tavily-ai/tavily-mcp",
      "source": "github",
      "stars": 679,
      "lastUpdated": "2025-08-16T20:09:56Z"
    },
    "tags": [
      "official"
    ],
    "serverName": "tavily",
    "serverConfig": {
      "type": "stdio",
      "command": "npx",
      "args": [
        "-y",
        "tavily-mcp@latest"
      ],
      "env": {
        "TAVILY_API_KEY": "your-api-key-here"
      }
    }
  },
  {
    "id": "telnyx:5bfb49c9",
    "icon": "https://avatars.githubusercontent.com/u/10522416?s=200&v=4",
    "name": "Telnyx",
    "description": "Official MCP server for building AI-powered communication apps. Create voice assistants, send SMS campaigns, manage phone numbers, and integrate real-time messaging with enterprise-grade reliability. Includes remote streamable-http and sse servers.",
    "repository": {
      "url": "https://github.com/team-telnyx/telnyx-mcp-server",
      "source": "github",
      "stars": 15,
      "lastUpdated": "2025-08-05T07:35:47Z"
    },
    "tags": [
      "official"
    ],
    "serverName": "telnyx",
    "serverConfig": {
      "type": "stdio",
      "command": "uvx",
      "args": [
        "--from",
        "git+https://github.com/team-telnyx/telnyx-mcp-server.git",
        "telnyx-mcp-server"
      ],
      "env": {
        "TELNYX_API_KEY": "<insert-your-api-key-here>"
      }
    }
  },
  {
    "id": "teradata:8d495a68",
    "icon": "https://avatars.githubusercontent.com/u/1615979?s=200&v=4",
    "name": "Teradata",
    "description": "This MCP Server support tools and prompts for multi task data analytics on a Teradata platform.",
    "repository": {
      "url": "https://github.com/Teradata/teradata-mcp-server",
      "source": "github",
      "stars": 17,
      "lastUpdated": "2025-08-15T20:32:43Z"
    },
    "tags": [
      "official"
    ]
  },
  {
    "id": "terraform:c68d6ca0",
    "icon": "https://raw.githubusercontent.com/hashicorp/terraform-mcp-server/main/public/images/Terraform-LogoMark_onDark.svg",
    "name": "Terraform",
    "description": "Seamlessly integrate with Terraform ecosystem, enabling advanced automation and interaction capabilities for Infrastructure as Code (IaC) development powered by Terraform",
    "repository": {
      "url": "https://github.com/hashicorp/terraform-mcp-server",
      "source": "github",
      "stars": 834,
      "lastUpdated": "2025-08-17T01:52:05Z"
    },
    "tags": [
      "official"
    ],
    "serverName": "terraform",
    "serverConfig": {
      "type": "stdio",
      "command": "docker",
      "args": [
        "run",
        "-i",
        "--rm",
        "hashicorp/terraform-mcp-server"
      ]
    }
  },
  {
    "id": "textin:470f34da",
    "icon": "https://www.textin.com/favicon.png",
    "name": "TextIn",
    "description": "An MCP server for the TextIn API, is a tool for extracting text and performing OCR on documents, it also supports converting documents into Markdown",
    "repository": {
      "url": "https://github.com/intsig-textin/textin-mcp",
      "source": "github",
      "stars": 19,
      "lastUpdated": "2025-08-09T06:47:23Z"
    },
    "tags": [
      "official"
    ],
    "serverName": "textin",
    "serverConfig": {
      "type": "stdio",
      "command": "npx",
      "args": [
        "-y",
        "@intsig/server-textin"
      ],
      "env": {
        "APP_ID": "<YOUR_APP_ID>",
        "APP_SECRET": "<YOUR_APP_SECRET>",
        "MCP_SERVER_REQUEST_TIMEOUT": "600000"
      }
    }
  },
  {
    "id": "thena:d30784a2",
    "icon": "https://avatars.githubusercontent.com/u/106156665?s=200",
    "name": "Thena",
    "description": "Thena's MCP server for enabling users and AI agents to interact with Thena's services and manage customers across different channels such as Slack, Email, Web, Discord etc.",
    "repository": {
      "url": "https://mcp.thena.ai",
      "source": "other"
    },
    "tags": [
      "official"
    ]
  },
  {
    "id": "thingsboard:ddc519af",
    "icon": "https://avatars.githubusercontent.com/u/24291394?v=4",
    "name": "ThingsBoard",
    "description": "The ThingsBoard MCP Server provides a natural language interface for LLMs and AI agents to interact with your ThingsBoard IoT platform.",
    "repository": {
      "url": "https://github.com/thingsboard/thingsboard-mcp",
      "source": "github",
      "stars": 62,
      "lastUpdated": "2025-08-15T14:57:32Z"
    },
    "tags": [
      "official"
    ],
    "serverName": "thingsboard",
    "serverConfig": {
      "type": "stdio",
      "command": "docker",
      "args": [
        "run",
        "-i",
        "--rm",
        "-e",
        "THINGSBOARD_URL",
        "-e",
        "THINGSBOARD_USERNAME",
        "-e",
        "THINGSBOARD_PASSWORD",
        "-e",
        "LOGGING_PATTERN_CONSOLE",
        "thingsboard/mcp"
      ],
      "env": {
        "THINGSBOARD_URL": "<thingsboard_url>",
        "THINGSBOARD_USERNAME": "<thingsboard_username>",
        "THINGSBOARD_PASSWORD": "<thingsboard_password>",
        "LOGGING_PATTERN_CONSOLE": ""
      }
    }
  },
  {
    "id": "thinq-connect:ee78b5fe",
    "icon": "https://www.lg.com/favicon.ico",
    "name": "ThinQ Connect",
    "description": "Interact with LG ThinQ smart home devices and appliances through the ThinQ Connect MCP server.",
    "repository": {
      "url": "https://github.com/thinq-connect/thinqconnect-mcp",
      "source": "github",
      "stars": 10,
      "lastUpdated": "2025-08-09T13:04:13Z"
    },
    "tags": [
      "official"
    ],
    "serverName": "thinq-connect",
    "serverConfig": {
      "type": "stdio",
      "command": "uvx",
      "args": [
        "thinqconnect-mcp"
      ],
      "env": {
        "THINQ_PAT": "your_personal_access_token_here",
        "THINQ_COUNTRY": "your_country_code_here"
      }
    }
  },
  {
    "id": "thirdweb:4915156e",
    "icon": "https://thirdweb.com/favicon.ico",
    "name": "Thirdweb",
    "description": "Read/write to over 2k blockchains, enabling data querying, contract analysis/deployment, and transaction execution, powered by Thirdweb",
    "repository": {
      "url": "https://github.com/thirdweb-dev/ai/tree/main/python/thirdweb-mcp",
      "source": "github",
      "stars": 15,
      "lastUpdated": "2025-08-12T05:12:03Z"
    },
    "tags": [
      "official"
    ]
  },
  {
    "id": "thoughtspot:f9f863ff",
    "icon": "https://www.thoughtspot.com/favicon-16x16.png",
    "name": "ThoughtSpot",
    "description": "AI is the new BI. A dedicated data analyst for everyone on your team. Bring ThoughtSpot powers into Claude or any MCP host.",
    "repository": {
      "url": "https://github.com/thoughtspot/mcp-server",
      "source": "github",
      "stars": 9,
      "lastUpdated": "2025-08-15T00:33:37Z"
    },
    "tags": [
      "official"
    ],
    "serverName": "thoughtspot",
    "serverConfig": {
      "type": "stdio",
      "command": "npx",
      "args": [
        "@thoughtspot/mcp-server"
      ],
      "env": {
        "TS_INSTANCE": "<your Thoughtspot Instance URL>",
        "TS_AUTH_TOKEN": "<ThoughtSpot Access Token>"
      }
    }
  },
  {
    "id": "tianji:e85012b7",
    "icon": "https://tianji.msgbyte.com/img/dark-brand.svg",
    "name": "Tianji",
    "description": "Interact with Tianji platform whatever selfhosted or cloud platform, powered by Tianji.",
    "repository": {
      "url": "https://github.com/msgbyte/tianji/tree/master/apps/mcp-server",
      "source": "github",
      "stars": 2469,
      "lastUpdated": "2025-08-16T19:32:56Z"
    },
    "tags": [
      "official"
    ],
    "serverName": "tianji",
    "serverConfig": {
      "type": "stdio",
      "command": "npx",
      "args": [
        "-y",
        "tianji-mcp-server"
      ],
      "env": {
        "TIANJI_BASE_URL": "https://tianji.example.com",
        "TIANJI_API_KEY": "<your-api-key>",
        "TIANJI_WORKSPACE_ID": "<your-workspace-id>"
      }
    }
  },
  {
    "id": "tidb:88a329c8",
    "icon": "https://www.pingcap.com/favicon.ico",
    "name": "TiDB",
    "description": "MCP Server to interact with TiDB database platform.",
    "repository": {
      "url": "https://github.com/pingcap/pytidb",
      "source": "github",
      "stars": 20,
      "lastUpdated": "2025-08-13T01:45:45Z"
    },
    "tags": [
      "official"
    ]
  },
  {
    "id": "tinybird:8470e3d6",
    "icon": "https://www.tinybird.co/favicon.ico",
    "name": "Tinybird",
    "description": "Interact with Tinybird serverless ClickHouse platform",
    "repository": {
      "url": "https://github.com/tinybirdco/mcp-tinybird",
      "source": "github",
      "stars": 70,
      "lastUpdated": "2025-08-14T14:17:44Z"
    },
    "tags": [
      "official"
    ],
    "serverName": "tinybird",
    "serverConfig": {
      "type": "stdio",
      "command": "uvx",
      "args": [
        "mcp-tinybird",
        "stdio"
      ],
      "env": {
        "TB_API_URL": "<TINYBIRD_API_URL>",
        "TB_ADMIN_TOKEN": "<TINYBIRD_ADMIN_TOKEN>"
      }
    }
  },
  {
    "id": "tldv:40e53e3f",
    "icon": "https://b2729162.smushcdn.com/2729162/wp-content/uploads/2023/10/cropped-Favicon-1-192x192.png?lossy=1&strip=1&webp=1",
    "name": "Tldv",
    "description": "Connect your AI agents to Google-Meet, Zoom & Microsoft Teams through tl;dv",
    "repository": {
      "url": "https://gitlab.com/tldv/tldv-mcp-server",
      "source": "gitlab"
    },
    "tags": [
      "official"
    ]
  },
  {
    "id": "token-metrics:d3016e9a",
    "icon": "https://cdn.tokenmetrics.com/logo.svg",
    "name": "Token Metrics",
    "description": "Token Metrics integration for fetching real-time crypto market data, trading signals, price predictions, and advanced analytics.",
    "repository": {
      "url": "https://github.com/token-metrics/mcp",
      "source": "github",
      "stars": 1,
      "lastUpdated": "2025-08-10T04:01:45Z"
    },
    "tags": [
      "official"
    ],
    "serverName": "token-metrics",
    "serverConfig": {
      "type": "stdio",
      "command": "npx",
      "args": [
        "-y",
        "@token-metrics-ai/mcp@latest"
      ],
      "env": {
        "TOKEN_METRICS_API_KEY": "YOUR_API_KEY"
      }
    }
  },
  {
    "id": "tomtom-mcp:ff485afb",
    "icon": "https://di8m9w6rqrh5d.cloudfront.net/2G3TRwfv1w3GTLfmT7Dmco1VddoFTI5P/1920_6b7e7ec2-d897-4cd7-94f3-46a8301212c3.png",
    "name": "TomTom-MCP",
    "description": "The TomTom MCP Server simplifies geospatial development by providing seamless access to TomTom's location services, including search, routing, traffic and static maps data.",
    "repository": {
      "url": "https://github.com/tomtom-international/tomtom-mcp",
      "source": "github",
      "stars": 26,
      "lastUpdated": "2025-08-15T20:32:09Z"
    },
    "tags": [
      "official"
    ]
  },
  {
    "id": "trade-agent:335ce436",
    "icon": "https://images.thetradeagent.ai/trade_agent/logo.svg",
    "name": "Trade Agent",
    "description": "Execute stock and crypto trades on your brokerage via Trade Agent",
    "repository": {
      "url": "https://github.com/Trade-Agent/trade-agent-mcp",
      "source": "github",
      "stars": 24,
      "lastUpdated": "2025-08-14T00:34:32Z"
    },
    "tags": [
      "official"
    ]
  },
  {
    "id": "twelve-data:f06a179b",
    "icon": "https://github.com/twelvedata/mcp/raw/develop/favicon.ico",
    "name": "Twelve Data",
    "description": "",
    "repository": {
      "url": "https://github.com/twelvedata/mcp",
      "source": "github",
      "stars": 25,
      "lastUpdated": "2025-08-14T21:19:39Z"
    },
    "tags": [
      "official"
    ],
    "serverName": "twelve-data",
    "serverConfig": {
      "type": "stdio",
      "command": "uvx",
      "args": [
        "mcp-server-twelve-data@latest",
        "-k",
        "YOUR_TWELVE_DATA_API_KEY",
        "-u",
        "YOUR_OPEN_AI_APIKEY"
      ]
    }
  },
  {
    "id": "twilio:b257092d",
    "icon": "https://www.twilio.com/content/dam/twilio-com/core-assets/social/favicon-16x16.png",
    "name": "Twilio",
    "description": "Interact with Twilio APIs to send SMS messages, manage phone numbers, configure your account, and more.",
    "repository": {
      "url": "https://github.com/twilio-labs/mcp",
      "source": "github",
      "stars": 54,
      "lastUpdated": "2025-08-11T20:51:38Z"
    },
    "tags": [
      "official"
    ],
    "serverName": "twilio",
    "serverConfig": {
      "type": "stdio",
      "command": "npx",
      "args": [
        "-y",
        "@twilio-alpha/mcp",
        "YOUR_ACCOUNT_SID/YOUR_API_KEY:YOUR_API_SECRET"
      ]
    }
  },
  {
    "id": "uberall:45b05a5b",
    "icon": "https://uberall.com/media/favicon.svg",
    "name": "Uberall",
    "description": "",
    "repository": {
      "url": "https://github.com/uberall/uberall-mcp-server",
      "source": "github",
      "stars": 0,
      "lastUpdated": "2025-06-25T12:43:57Z"
    },
    "tags": [
      "official"
    ],
    "serverName": "uberall",
    "serverConfig": {
      "type": "stdio",
      "command": "docker",
      "args": [
        "run",
        "--rm",
        "-i",
        "-e",
        "UBERALL_ACCESS_TOKEN",
        "-e",
        "UBERALL_URL",
        "uberall/uberall-mcp-server:latest"
      ],
      "env": {
        "UBERALL_ACCESS_TOKEN": "your_access_token_here",
        "UBERALL_URL": "https://sandbox.uberall.com"
      }
    }
  },
  {
    "id": "unblocked:a6e1c9f1",
    "icon": "https://avatars.githubusercontent.com/u/91906527",
    "name": "Unblocked",
    "description": "",
    "repository": {
      "url": "https://docs.getunblocked.com/unblocked-mcp",
      "source": "other"
    },
    "tags": [
      "official"
    ]
  },
  {
    "id": "unifai:43c77d3f",
    "icon": "https://unifai.network/favicon.ico",
    "name": "UnifAI",
    "description": "Dynamically search and call tools using UnifAI Network",
    "repository": {
      "url": "https://github.com/unifai-network/unifai-mcp-server",
      "source": "github",
      "stars": 4,
      "lastUpdated": "2025-07-02T23:49:08Z"
    },
    "tags": [
      "official"
    ]
  },
  {
    "id": "unstructured:0a12fdc4",
    "icon": "https://framerusercontent.com/images/plcQevjrOYnyriuGw90NfQBPoQ.jpg",
    "name": "Unstructured",
    "description": "Set up and interact with your unstructured data processing workflows in Unstructured Platform",
    "repository": {
      "url": "https://github.com/Unstructured-IO/UNS-MCP",
      "source": "github",
      "stars": 35,
      "lastUpdated": "2025-08-17T02:35:41Z"
    },
    "tags": [
      "official"
    ],
    "serverName": "unstructured",
    "serverConfig": {
      "type": "stdio",
      "command": "uvx",
      "args": [
        "uns_mcp"
      ],
      "env": {
        "UNSTRUCTURED_API_KEY": "<your-key>"
      }
    }
  },
  {
    "id": "upstash:7ec97aeb",
    "icon": "https://upstash.com/icons/favicon-32x32.png",
    "name": "Upstash",
    "description": "Manage Redis databases and run Redis commands on Upstash with natural language.",
    "repository": {
      "url": "https://github.com/upstash/mcp-server",
      "source": "github",
      "stars": 48,
      "lastUpdated": "2025-08-14T14:17:48Z"
    },
    "tags": [
      "official"
    ],
    "serverName": "upstash",
    "serverConfig": {
      "type": "stdio",
      "command": "node",
      "args": [
        "<path-to-repo>/dist/index.js",
        "run",
        "<UPSTASH_EMAIL>",
        "<UPSTASH_API_KEY>"
      ]
    }
  },
  {
    "id": "vantage:997015a0",
    "icon": "https://www.vantage.sh/favicon.ico",
    "name": "Vantage",
    "description": "Interact with your organization's cloud cost spend.",
    "repository": {
      "url": "https://github.com/vantage-sh/vantage-mcp-server",
      "source": "github",
      "stars": 75,
      "lastUpdated": "2025-08-12T18:47:12Z"
    },
    "tags": [
      "official"
    ]
  },
  {
    "id": "variflight:51d9efa1",
    "icon": "https://mcp.variflight.com/favicon.ico",
    "name": "VariFlight",
    "description": "VariFlight's official MCP server provides tools to query flight information, weather data, comfort metrics, the lowest available fares, and other civil aviation-related data.",
    "repository": {
      "url": "https://github.com/variflight/variflight-mcp",
      "source": "github",
      "stars": 12,
      "lastUpdated": "2025-07-19T23:07:27Z"
    },
    "tags": [
      "official"
    ],
    "serverName": "variflight",
    "serverConfig": {
      "type": "stdio",
      "command": "npx",
      "args": [
        "-y",
        "@variflight-ai/variflight-mcp"
      ],
      "env": {
        "VARIFLIGHT_API_KEY": "your_api_key_here"
      }
    }
  },
  {
    "id": "vcagents:26385aed",
    "icon": "https://docs.octagonagents.com/logo.svg",
    "name": "VCAgents",
    "description": "Interact with investor agents—think Wilson or Thiel—continuously updated with market intel.",
    "repository": {
      "url": "https://github.com/OctagonAI/octagon-vc-agents",
      "source": "github",
      "stars": 14,
      "lastUpdated": "2025-08-07T15:48:10Z"
    },
    "tags": [
      "official"
    ],
    "serverName": "vcagents",
    "serverConfig": {
      "type": "stdio",
      "command": "pipx",
      "args": [
        "run",
        "--pip-args=\"--no-cache-dir\"",
        "octagon-vc-agents",
        "run"
      ],
      "env": {
        "OPENAI_API_KEY": "YOUR_OPENAI_API_KEY_HERE",
        "OCTAGON_API_KEY": "YOUR_OCTAGON_API_KEY_HERE"
      }
    }
  },
  {
    "id": "vectorize:abae9f25",
    "icon": null,
    "name": "Vectorize",
    "description": "Vectorize MCP server for advanced retrieval, Private Deep Research, Anything-to-Markdown file extraction and text chunking.",
    "repository": {
      "url": "https://github.com/vectorize-io/vectorize-mcp-server/",
      "source": "github",
      "stars": 87,
      "lastUpdated": "2025-08-14T21:40:14Z"
    },
    "tags": [
      "official"
    ],
    "serverName": "vectorize",
    "serverConfig": {
      "type": "stdio",
      "command": "npx",
      "args": [
        "-y",
        "@vectorize-io/vectorize-mcp-server@latest"
      ],
      "env": {
        "VECTORIZE_ORG_ID": "your-org-id",
        "VECTORIZE_TOKEN": "your-token",
        "VECTORIZE_PIPELINE_ID": "your-pipeline-id"
      }
    }
  },
  {
    "id": "verbwire:5a2d66da",
    "icon": "https://static.verbwire.com/favicon-16x16.png",
    "name": "Verbwire",
    "description": "Deploy smart contracts, mint NFTs, manage IPFS storage, and more through the Verbwire API",
    "repository": {
      "url": "https://github.com/verbwire/verbwire-mcp-server",
      "source": "github",
      "stars": 1,
      "lastUpdated": "2025-07-10T14:39:48Z"
    },
    "tags": [
      "official"
    ],
    "serverName": "verbwire",
    "serverConfig": {
      "type": "stdio",
      "command": "npx",
      "args": [
        "-y",
        "@verbwire/verbwire-mcp-server"
      ],
      "env": {
        "VERBWIRE_API_KEY": "YOUR_API_KEY_HERE"
      }
    }
  },
  {
    "id": "vercel:58bf2aa6",
    "icon": "http://vercel.com/favicon.ico",
    "name": "Vercel",
    "description": "Access logs, search docs, and manage projects and deployments.",
    "repository": {
      "url": "https://vercel.com/docs/mcp/vercel-mcp",
      "source": "other"
    },
    "tags": [
      "official"
    ]
  },
  {
    "id": "verodat:a5fb0381",
    "icon": "https://verodat.io/assets/favicon-16x16.png",
    "name": "Verodat",
    "description": "Interact with Verodat AI Ready Data platform",
    "repository": {
      "url": "https://github.com/Verodat/verodat-mcp-server",
      "source": "github",
      "stars": 2,
      "lastUpdated": "2025-08-01T06:53:37Z"
    },
    "tags": [
      "official"
    ],
    "serverName": "verodat",
    "serverConfig": {
      "type": "stdio",
      "command": "node",
      "args": [
        "path/to/verodat-mcp-server/build/src/consume.js"
      ],
      "env": {
        "VERODAT_AI_API_KEY": "your-api-key",
        "VERODAT_API_BASE_URL": "https://verodat.io/api/v3"
      }
    }
  },
  {
    "id": "veyrax:e9f37f01",
    "icon": "https://www.veyrax.com/favicon.ico",
    "name": "VeyraX",
    "description": "Single tool to control all 100+ API integrations, and UI components",
    "repository": {
      "url": "https://github.com/VeyraX/veyrax-mcp",
      "source": "github",
      "stars": 42,
      "lastUpdated": "2025-08-14T21:34:13Z"
    },
    "tags": [
      "official"
    ]
  },
  {
    "id": "victoriametrics:9f76d4e2",
    "icon": "https://avatars.githubusercontent.com/u/174736222?s=200&v=4",
    "name": "VictoriaMetrics",
    "description": "Comprehensive integration with VictoriaMetrics APIs and documentation for monitoring, observability, and debugging tasks related to your VictoriaMetrics instances.",
    "repository": {
      "url": "https://github.com/VictoriaMetrics-Community/mcp-victoriametrics",
      "source": "github",
      "stars": 63,
      "lastUpdated": "2025-08-14T16:34:00Z"
    },
    "tags": [
      "official"
    ],
    "serverName": "victoriametrics",
    "serverConfig": {
      "type": "stdio",
      "command": "/path/to/mcp-victoriametrics",
      "env": {
        "VM_INSTANCE_ENTRYPOINT": "<YOUR_VM_INSTANCE>",
        "VM_INSTANCE_TYPE": "<YOUR_VM_INSTANCE_TYPE>",
        "VM_INSTANCE_BEARER_TOKEN": "<YOUR_VM_BEARER_TOKEN>"
      }
    }
  },
  {
    "id": "videodb-director:bb9aba80",
    "icon": "https://framerusercontent.com/images/ijlYG00LOcMD6zR1XLMxHbAwZkM.png",
    "name": "VideoDB Director",
    "description": "Create AI-powered video workflows including automatic editing, content moderation, voice cloning, highlight generation, and searchable video moments—all accessible via simple APIs and intuitive chat-based interfaces.",
    "repository": {
      "url": "https://github.com/video-db/agent-toolkit/tree/main/modelcontextprotocol",
      "source": "github",
      "stars": 37,
      "lastUpdated": "2025-08-15T05:05:46Z"
    },
    "tags": [
      "official"
    ]
  },
  {
    "id": "visionagent-mcp:1721ed34",
    "icon": "https://landing.ai/wp-content/uploads/2024/04/cropped-favicon-192x192.png",
    "name": "VisionAgent MCP",
    "description": "A simple MCP server that enables your LLM to better reason over images, video and documents.",
    "repository": {
      "url": "https://github.com/landing-ai/vision-agent-mcp",
      "source": "github",
      "stars": 10,
      "lastUpdated": "2025-08-13T09:46:26Z"
    },
    "tags": [
      "official"
    ],
    "serverName": "visionagent-mcp",
    "serverConfig": {
      "type": "stdio",
      "command": "node",
      "args": [
        "/path/to/build/index.js"
      ],
      "env": {
        "VISION_AGENT_API_KEY": "<YOUR_API_KEY>",
        "OUTPUT_DIRECTORY": "../../output",
        "IMAGE_DISPLAY_ENABLED": "true"
      }
    }
  },
  {
    "id": "vizro:dae29cbf",
    "icon": "https://raw.githubusercontent.com/mckinsey/vizro/main/vizro-core/docs/assets/images/favicon.png",
    "name": "Vizro",
    "description": "Tools and templates to create validated and maintainable data charts and dashboards",
    "repository": {
      "url": "https://github.com/mckinsey/vizro/tree/main/vizro-mcp",
      "source": "github",
      "stars": 3034,
      "lastUpdated": "2025-08-16T22:33:04Z"
    },
    "tags": [
      "official"
    ]
  },
  {
    "id": "wavespeed:c5a3ad31",
    "icon": "https://wavespeed.ai/logo.webp",
    "name": "WaveSpeed",
    "description": "WaveSpeed MCP server providing AI agents with image and video generation capabilities.",
    "repository": {
      "url": "https://github.com/WaveSpeedAI/mcp-server",
      "source": "github",
      "stars": 17,
      "lastUpdated": "2025-08-15T03:16:57Z"
    },
    "tags": [
      "official"
    ],
    "serverName": "wavespeed",
    "serverConfig": {
      "type": "stdio",
      "command": "wavespeed-mcp",
      "env": {
        "WAVESPEED_API_KEY": "wavespeedkey"
      }
    }
  },
  {
    "id": "waystation:c2a05aae",
    "icon": "https://waystation.ai/images/logo.svg",
    "name": "WayStation",
    "description": "Universal MCP server to connect to popular productivity tools such as Notion, Monday, AirTable, and many more",
    "repository": {
      "url": "https://github.com/waystation-ai/mcp",
      "source": "github",
      "stars": 26,
      "lastUpdated": "2025-07-29T19:19:44Z"
    },
    "tags": [
      "official"
    ],
    "serverName": "waystation",
    "serverConfig": {
      "type": "streamable",
      "url": "https://waystation.ai/mcp/<user_unique_id>"
    }
  },
  {
    "id": "webflow:1569645a",
    "icon": "https://www.webflow.com/favicon.ico",
    "name": "Webflow",
    "description": "Interact with Webflow sites, pages, and collections",
    "repository": {
      "url": "https://github.com/webflow/mcp-server",
      "source": "github",
      "stars": 68,
      "lastUpdated": "2025-08-13T19:15:17Z"
    },
    "tags": [
      "official"
    ],
    "serverName": "webflow",
    "serverConfig": {
      "type": "stdio",
      "command": "npx",
      "args": [
        "-y",
        "webflow-mcp-server@0.6.0"
      ],
      "env": {
        "WEBFLOW_TOKEN": "<YOUR_WEBFLOW_TOKEN>"
      }
    }
  },
  {
    "id": "webscraping-ai:b9acd0b7",
    "icon": "https://webscraping.ai/favicon.ico",
    "name": "WebScraping.AI",
    "description": "Interact with **WebScraping.AI** for web data extraction and scraping",
    "repository": {
      "url": "https://github.com/webscraping-ai/webscraping-ai-mcp-server",
      "source": "github",
      "stars": 24,
      "lastUpdated": "2025-08-06T23:39:51Z"
    },
    "tags": [
      "official"
    ],
    "serverName": "webscraping-ai",
    "serverConfig": {
      "type": "stdio",
      "command": "npx",
      "args": [
        "-y",
        "webscraping-ai-mcp"
      ],
      "env": {
        "WEBSCRAPING_AI_API_KEY": "YOUR_API_KEY_HERE",
        "WEBSCRAPING_AI_CONCURRENCY_LIMIT": "5"
      }
    }
  },
  {
    "id": "winston-ai:060d5c59",
    "icon": "https://winston-app-production-public.s3.us-east-1.amazonaws.com/winston-ai-favicon-light.svg",
    "name": "Winston AI",
    "description": "AI detector MCP server with industry leading accuracy rates in detecting use of AI in text and images. The Winston AI MCP server also offers a robust plagiarism checker to help maintain integrity.",
    "repository": {
      "url": "https://github.com/gowinston-ai/winston-ai-mcp-server",
      "source": "github",
      "stars": 2,
      "lastUpdated": "2025-08-13T17:29:26Z"
    },
    "tags": [
      "official"
    ],
    "serverName": "winston-ai",
    "serverConfig": {
      "type": "stdio",
      "command": "npx",
      "args": [
        "-y",
        "winston-ai-mcp"
      ],
      "env": {
        "WINSTONAI_API_KEY": "your-api-key"
      }
    }
  },
  {
    "id": "xero:0aa3cf0d",
    "icon": "https://www.xero.com/favicon.ico",
    "name": "Xero",
    "description": "Interact with the accounting data in your business using our official MCP server",
    "repository": {
      "url": "https://github.com/XeroAPI/xero-mcp-server",
      "source": "github",
      "stars": 110,
      "lastUpdated": "2025-08-16T13:23:14Z"
    },
    "tags": [
      "official"
    ],
    "serverName": "xero",
    "serverConfig": {
      "type": "stdio",
      "command": "npx",
      "args": [
        "-y",
        "@xeroapi/xero-mcp-server@latest"
      ],
      "env": {
        "XERO_CLIENT_ID": "your_client_id_here",
        "XERO_CLIENT_SECRET": "your_client_secret_here"
      }
    }
  },
  {
    "id": "ydb:155b0a09",
    "icon": "https://storage.yandexcloud.net/ydb-www-prod-site-assets/favicon-202305/favicon.ico",
    "name": "YDB",
    "description": "Query YDB databases",
    "repository": {
      "url": "https://github.com/ydb-platform/ydb-mcp",
      "source": "github",
      "stars": 22,
      "lastUpdated": "2025-08-16T09:03:11Z"
    },
    "tags": [
      "official"
    ],
    "serverName": "ydb",
    "serverConfig": {
      "type": "stdio",
      "command": "uvx",
      "args": [
        "ydb-mcp",
        "--ydb-endpoint",
        "grpc://localhost:2136",
        "--ydb-database",
        "/local"
      ]
    }
  },
  {
    "id": "yeelight-mcp-server:306c5248",
    "icon": "https://fe-resource.yeelight.com/logo-black.jpeg",
    "name": "Yeelight MCP Server",
    "description": "The official Yeelight MCP Server enables users to control and query their Yeelight smart devices using natural language, offering a seamless and efficient human-AI interaction experience.",
    "repository": {
      "url": "https://github.com/Yeelight/yeelight-iot-mcp",
      "source": "github",
      "stars": 3,
      "lastUpdated": "2025-07-23T01:54:37Z"
    },
    "tags": [
      "official"
    ]
  },
  {
    "id": "yepcode:3a7c634c",
    "icon": "https://cdn.prod.website-files.com/632cd328ed2b485519c3f689/6334977a5d1a542102d4b9b5_favicon-32x32.png",
    "name": "YepCode",
    "description": "Run code in a secure, scalable sandbox environment with full support for dependencies, secrets, logs, and access to APIs or databases. Powered by YepCode",
    "repository": {
      "url": "https://github.com/yepcode/mcp-server-js",
      "source": "github",
      "stars": 29,
      "lastUpdated": "2025-08-08T19:23:11Z"
    },
    "tags": [
      "official"
    ]
  },
  {
    "id": "yugabytedb:6fb27183",
    "icon": "https://www.yugabyte.com/favicon-16x16.png",
    "name": "YugabyteDB",
    "description": "MCP Server to interact with your YugabyteDB database",
    "repository": {
      "url": "https://github.com/yugabyte/yugabytedb-mcp-server",
      "source": "github",
      "stars": 6,
      "lastUpdated": "2025-08-05T07:59:19Z"
    },
    "tags": [
      "official"
    ],
    "serverName": "yugabytedb",
    "serverConfig": {
      "type": "stdio",
      "command": "docker",
      "args": [
        "run",
        "--rm",
        "-i",
        "-e",
        "YUGABYTEDB_URL=dbname=yugabyte host=host.docker.internal port=5433 user=yugabyte password=yugabyte load_balance=false",
        "mcp/yugabytedb"
      ]
    }
  },
  {
    "id": "yunxin:91c5416f",
    "icon": "https://avatars.githubusercontent.com/u/14069894",
    "name": "Yunxin",
    "description": "An MCP server that connects to Yunxin's IM/RTC/DATA Open-API",
    "repository": {
      "url": "https://github.com/netease-im/yunxin-mcp-server",
      "source": "github",
      "stars": 7,
      "lastUpdated": "2025-07-24T03:07:55Z"
    },
    "tags": [
      "official"
    ]
  },
  {
    "id": "zapier:a726be0e",
    "icon": "https://cdn.zapier.com/zapier/images/favicon.ico",
    "name": "Zapier",
    "description": "Connect your AI Agents to 8,000 apps instantly.",
    "repository": {
      "url": "https://zapier.com/mcp",
      "source": "other"
    },
    "tags": [
      "official"
    ]
  },
  {
    "id": "zenml:7c283907",
    "icon": null,
    "name": "ZenML",
    "description": "Interact with your MLOps and LLMOps pipelines through your ZenML MCP server",
    "repository": {
      "url": "https://github.com/zenml-io/mcp-zenml",
      "source": "github",
      "stars": 25,
      "lastUpdated": "2025-08-16T10:40:27Z"
    },
    "tags": [
      "official"
    ],
    "serverName": "zenml",
    "serverConfig": {
      "type": "stdio",
      "command": "/usr/local/bin/uv",
      "args": [
        "run",
        "path/to/server/zenml_server.py"
      ],
      "env": {
        "LOGLEVEL": "INFO",
        "NO_COLOR": "1",
        "PYTHONUNBUFFERED": "1",
        "PYTHONIOENCODING": "UTF-8",
        "ZENML_STORE_URL": "https://your-zenml-server-goes-here.com",
        "ZENML_STORE_API_KEY": "your-api-key-here"
      }
    }
  },
  {
    "id": "zizai-recruitment:53de77a0",
    "icon": "https://zizai.work/images/logo.jpg",
    "name": "ZIZAI Recruitment",
    "description": "Interact with the next-generation intelligent recruitment platform for employees and employers, powered by ZIZAI Recruitment.",
    "repository": {
      "url": "https://github.com/zaiwork/mcp",
      "source": "github",
      "stars": 1,
      "lastUpdated": "2025-05-14T02:49:51Z"
    },
    "tags": [
      "official"
    ],
    "serverName": "zizai-recruitment",
    "serverConfig": {
      "type": "stdio",
      "command": "npx",
      "args": [
        "-y",
        "@zizaiwork/mcp"
      ],
      "env": {
        "ZAI_API_KEY": "<YOUR_API_KEY>"
      }
    }
  },
  {
    "id": "1panel:39514102",
    "icon": null,
    "name": "1Panel",
    "description": "MCP server implementation that provides 1Panel interaction.",
    "repository": {
      "url": "https://github.com/1Panel-dev/mcp-1panel",
      "source": "github",
      "stars": 139,
      "lastUpdated": "2025-08-14T14:18:09Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "1panel",
    "serverConfig": {
      "type": "stdio",
      "command": "docker",
      "args": [
        "run",
        "-i",
        "--rm",
        "-e",
        "PANEL_HOST",
        "-e",
        "PANEL_ACCESS_TOKEN",
        "1panel/1panel-mcp-server"
      ],
      "env": {
        "PANEL_HOST": "such as http://localhost:8080",
        "PANEL_ACCESS_TOKEN": "<your 1Panel access token>"
      }
    }
  },
  {
    "id": "a2a:b184585b",
    "icon": null,
    "name": "A2A",
    "description": "An MCP server that bridges the Model Context Protocol (MCP) with the Agent-to-Agent (A2A) protocol, enabling MCP-compatible AI assistants (like Claude) to seamlessly interact with A2A agents.",
    "repository": {
      "url": "https://github.com/GongRzhe/A2A-MCP-Server",
      "source": "github",
      "stars": 79,
      "lastUpdated": "2025-08-16T14:46:00Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "a2a",
    "serverConfig": {
      "type": "stdio",
      "command": "uvx",
      "args": [
        "a2a-mcp-server"
      ]
    }
  },
  {
    "id": "ableton-live:a987c86d",
    "icon": null,
    "name": "Ableton Live",
    "description": "an MCP server to control Ableton Live.",
    "repository": {
      "url": "https://github.com/Simon-Kansara/ableton-live-mcp-server",
      "source": "github",
      "stars": 311,
      "lastUpdated": "2025-08-16T12:16:00Z"
    },
    "tags": [
      "community"
    ]
  },
  {
    "id": "ableton-live:4e03a164",
    "icon": null,
    "name": "Ableton Live",
    "description": "",
    "repository": {
      "url": "https://github.com/ahujasid/ableton-mcp",
      "source": "github",
      "stars": 1863,
      "lastUpdated": "2025-08-16T12:15:44Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "ableton-live",
    "serverConfig": {
      "type": "stdio",
      "command": "uvx",
      "args": [
        "ableton-mcp"
      ]
    }
  },
  {
    "id": "actor-critic-thinking:19805b54",
    "icon": null,
    "name": "Actor Critic Thinking",
    "description": "Actor-critic thinking for performance evaluation",
    "repository": {
      "url": "https://github.com/aquarius-wing/actor-critic-thinking-mcp",
      "source": "github",
      "stars": 20,
      "lastUpdated": "2025-08-01T05:03:06Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "actor-critic-thinking",
    "serverConfig": {
      "type": "stdio",
      "command": "npx",
      "args": [
        "-y",
        "mcp-server-actor-critic-thinking"
      ]
    }
  },
  {
    "id": "adobe-commerce:d2bcca27",
    "icon": null,
    "name": "Adobe Commerce",
    "description": "",
    "repository": {
      "url": "https://github.com/rafaelstz/adobe-commerce-dev-mcp",
      "source": "github",
      "stars": 21,
      "lastUpdated": "2025-08-07T12:53:40Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "adobe-commerce",
    "serverConfig": {
      "type": "stdio",
      "command": "npx",
      "args": [
        "-y",
        "@rafaelcg/adobe-commerce-dev-mcp@latest"
      ]
    }
  },
  {
    "id": "adr-analysis:43d7bc91",
    "icon": null,
    "name": "ADR Analysis",
    "description": "AI-powered Architectural Decision Records (ADR) analysis server that provides architectural insights, technology stack detection, security checks, and TDD workflow enhancement for software development projects.",
    "repository": {
      "url": "https://github.com/tosin2013/mcp-adr-analysis-server",
      "source": "github",
      "stars": 2,
      "lastUpdated": "2025-08-16T10:22:02Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "adr-analysis",
    "serverConfig": {
      "type": "stdio",
      "command": "npx",
      "args": [
        "mcp-adr-analysis-server"
      ],
      "env": {
        "PROJECT_PATH": "${workspaceFolder}",
        "ADR_DIRECTORY": "docs/adrs",
        "LOG_LEVEL": "ERROR"
      }
    }
  },
  {
    "id": "agentbay:93300340",
    "icon": null,
    "name": "AgentBay",
    "description": "An MCP server for providing serverless cloud infrastructure for AI agents.",
    "repository": {
      "url": "https://github.com/Michael98671/agentbay",
      "source": "github",
      "stars": 4,
      "lastUpdated": "2025-07-02T23:52:03Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "agentbay",
    "serverConfig": {
      "type": "sse",
      "url": "https://agentbay.wuying.aliyun.com/sse?APIKEY=YOUR_API_KEY"
    }
  },
  {
    "id": "agentmode:74087429",
    "icon": null,
    "name": "AgentMode",
    "description": "Connect to dozens of databases, data warehouses, Github & more, from a single MCP server.  Run the Docker image locally, in the cloud, or on-premise.",
    "repository": {
      "url": "https://www.agentmode.app",
      "source": "other"
    },
    "tags": [
      "community"
    ]
  },
  {
    "id": "ai-agent-marketplace-index:9a1f4e44",
    "icon": null,
    "name": "AI Agent Marketplace Index",
    "description": "MCP server to search more than 5000+ AI agents and tools of various categories from AI Agent Marketplace Index and monitor traffic of AI Agents.",
    "repository": {
      "url": "https://github.com/AI-Agent-Hub/ai-agent-marketplace-index-mcp",
      "source": "github",
      "stars": 36,
      "lastUpdated": "2025-08-13T04:10:20Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "ai-agent-marketplace-index",
    "serverConfig": {
      "type": "stdio",
      "command": "uv",
      "args": [
        "--directory",
        "/ABSOLUTE/PATH/TO/PARENT/FOLDER/ai-agent-marketplace-index-mcp/src/ai-agent-marketplace-index",
        "run",
        "server.py"
      ]
    }
  },
  {
    "id": "ai-tasks:308d881a",
    "icon": null,
    "name": "AI Tasks",
    "description": "Let the AI manage complex plans with integrated task management and tracking tools. Supports STDIO, SSE and Streamable HTTP transports.",
    "repository": {
      "url": "https://github.com/jbrinkman/valkey-ai-tasks",
      "source": "github",
      "stars": 10,
      "lastUpdated": "2025-07-23T12:47:08Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "ai-tasks",
    "serverConfig": {}
  },
  {
    "id": "ai-bible:30d16065",
    "icon": null,
    "name": "ai-Bible",
    "description": "Search the bible reliably and repeatably ai-Bible Labs",
    "repository": {
      "url": "https://github.com/AdbC99/ai-bible",
      "source": "github",
      "stars": 2,
      "lastUpdated": "2025-07-23T21:24:47Z"
    },
    "tags": [
      "community"
    ]
  },
  {
    "id": "airbnb:d9649e24",
    "icon": null,
    "name": "Airbnb",
    "description": "Provides tools to search Airbnb and get listing details.",
    "repository": {
      "url": "https://github.com/openbnb-org/mcp-server-airbnb",
      "source": "github",
      "stars": 259,
      "lastUpdated": "2025-08-15T12:32:53Z"
    },
    "tags": [
      "community"
    ]
  },
  {
    "id": "airflow:8035ca3f",
    "icon": null,
    "name": "Airflow",
    "description": "An MCP Server that connects to Apache Airflow using official python client.",
    "repository": {
      "url": "https://github.com/yangkyeongmo/mcp-server-apache-airflow",
      "source": "github",
      "stars": 77,
      "lastUpdated": "2025-08-14T04:42:17Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "airflow",
    "serverConfig": {
      "type": "stdio",
      "command": "uvx",
      "args": [
        "mcp-server-apache-airflow"
      ],
      "env": {
        "AIRFLOW_HOST": "https://your-airflow-host",
        "AIRFLOW_USERNAME": "your-username",
        "AIRFLOW_PASSWORD": "your-password"
      }
    }
  },
  {
    "id": "airtable:4c435f3a",
    "icon": null,
    "name": "Airtable",
    "description": "Read and write access to Airtable databases, with schema inspection.",
    "repository": {
      "url": "https://github.com/domdomegg/airtable-mcp-server",
      "source": "github",
      "stars": 254,
      "lastUpdated": "2025-08-17T01:51:29Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "airtable",
    "serverConfig": {
      "type": "stdio",
      "command": "npx",
      "args": [
        "-y",
        "airtable-mcp-server"
      ],
      "env": {
        "AIRTABLE_API_KEY": "pat123.abc123"
      }
    }
  },
  {
    "id": "airtable:2137246a",
    "icon": null,
    "name": "Airtable",
    "description": "Airtable Model Context Protocol Server.",
    "repository": {
      "url": "https://github.com/felores/airtable-mcp",
      "source": "github",
      "stars": 64,
      "lastUpdated": "2025-08-17T01:51:39Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "airtable",
    "serverConfig": {
      "type": "stdio",
      "command": "npx",
      "args": [
        "@felores/airtable-mcp-server"
      ],
      "env": {
        "AIRTABLE_API_KEY": "your_api_key_here"
      }
    }
  },
  {
    "id": "algorand:5216357d",
    "icon": null,
    "name": "Algorand",
    "description": "A comprehensive MCP server for tooling interactions (40+) and resource accessibility (60+) plus many useful prompts for interacting with the Algorand blockchain.",
    "repository": {
      "url": "https://github.com/GoPlausible/algorand-mcp",
      "source": "github",
      "stars": 37,
      "lastUpdated": "2025-07-31T11:01:53Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "algorand",
    "serverConfig": {
      "type": "stdio",
      "command": "node",
      "args": [
        "PATH_ON_YOUR_MACHINE/Claude/mcp-servers/algorand-mcp/packages/server/dist/index.js"
      ],
      "env": {
        "ALGORAND_NETWORK": "testnet",
        "ALGORAND_ALGOD_API": "https://testnet-api.algonode.cloud/v2",
        "ALGORAND_ALGOD": "https://testnet-api.algonode.cloud",
        "ALGORAND_INDEXER_API": "https://testnet-idx.algonode.cloud/v2",
        "ALGORAND_INDEXER": "https://testnet-idx.algonode.cloud",
        "ALGORAND_ALGOD_PORT": "",
        "ALGORAND_INDEXER_PORT": "",
        "ALGORAND_TOKEN": "",
        "ALGORAND_AGENT_WALLET": "problem aim online jaguar upper oil flight stumble mystery aerobic toy avoid file tomato moment exclude witness guard lab opera crunch noodle dune abandon broccoli",
        "NFD_API_URL": "https://api.nf.domains",
        "NFD_API_KEY": "",
        "TINYMAN_ACTIVE": "false",
        "ULTRADE_ACTIVE": "false",
        "ULTRADE_API_URL": "https://api.ultrade.io",
        "VESTIGE_ACTIVE": "false",
        "VESTIGE_API_URL": "https://api.vestigelabs.org",
        "VESTIGE_API_KEY": "",
        "ITEMS_PER_PAGE": "10"
      }
    }
  },
  {
    "id": "amadeus:2f0955f5",
    "icon": null,
    "name": "Amadeus",
    "description": "",
    "repository": {
      "url": "https://github.com/donghyun-chae/mcp-amadeus",
      "source": "github",
      "stars": 32,
      "lastUpdated": "2025-08-13T10:28:14Z"
    },
    "tags": [
      "community"
    ]
  },
  {
    "id": "amazon-ads:368c6d22",
    "icon": null,
    "name": "Amazon Ads",
    "description": "MCP Server that provides interaction capabilities with Amazon Advertising through MarketplaceAdPros/",
    "repository": {
      "url": "https://github.com/MarketplaceAdPros/amazon-ads-mcp-server",
      "source": "github",
      "stars": 9,
      "lastUpdated": "2025-08-15T07:01:58Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "amazon-ads",
    "serverConfig": {
      "type": "stdio",
      "command": "npx",
      "args": [
        "@marketplaceadpros/amazon-ads-mcp-server"
      ],
      "env": {
        "BEARER_TOKEN": "abcdefghijklmnop"
      }
    }
  },
  {
    "id": "anilist:729013dd",
    "icon": null,
    "name": "AniList",
    "description": "",
    "repository": {
      "url": "https://github.com/yuna0x0/anilist-mcp",
      "source": "github",
      "stars": 49,
      "lastUpdated": "2025-08-13T04:10:22Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "anilist",
    "serverConfig": {
      "type": "stdio",
      "command": "npx",
      "args": [
        "-y",
        "anilist-mcp"
      ],
      "env": {
        "ANILIST_TOKEN": "your_api_token"
      }
    }
  },
  {
    "id": "anki:074aeb9a",
    "icon": null,
    "name": "Anki",
    "description": "An MCP server for interacting with your Anki decks and cards.",
    "repository": {
      "url": "https://github.com/scorzeth/anki-mcp-server",
      "source": "github",
      "stars": 159,
      "lastUpdated": "2025-08-16T13:28:30Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "anki",
    "serverConfig": {
      "type": "stdio",
      "command": "/path/to/anki-mcp-server/build/index.js"
    }
  },
  {
    "id": "anki:c8347cd8",
    "icon": null,
    "name": "Anki",
    "description": "MCP server to run locally with Anki and Ankiconnect. Supports creating, updating, searching and filtering cards and decks. Include mass update and other advanced tools.",
    "repository": {
      "url": "https://github.com/nietus/anki-mcp",
      "source": "github",
      "stars": 24,
      "lastUpdated": "2025-08-09T20:16:20Z"
    },
    "tags": [
      "community"
    ]
  },
  {
    "id": "antv-chart:553e9a0c",
    "icon": null,
    "name": "AntV Chart",
    "description": "A Model Context Protocol server for generating 15+ visual charts using AntV.",
    "repository": {
      "url": "https://github.com/antvis/mcp-server-chart",
      "source": "github",
      "stars": 2475,
      "lastUpdated": "2025-08-17T02:41:27Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "antv-chart",
    "serverConfig": {
      "type": "stdio",
      "command": "npx",
      "args": [
        "-y",
        "@antv/mcp-server-chart"
      ]
    }
  },
  {
    "id": "any-chat-completions:9bffc075",
    "icon": null,
    "name": "Any Chat Completions",
    "description": "Interact with any OpenAI SDK Compatible Chat Completions API like OpenAI, Perplexity, Groq, xAI and many more.",
    "repository": {
      "url": "https://github.com/pyroprompts/any-chat-completions-mcp",
      "source": "github",
      "stars": 140,
      "lastUpdated": "2025-08-07T20:13:37Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "any-chat-completions",
    "serverConfig": {
      "type": "stdio",
      "command": "npx",
      "args": [
        "@pyroprompts/any-chat-completions-mcp"
      ],
      "env": {
        "AI_CHAT_KEY": "OPENAI_KEY",
        "AI_CHAT_NAME": "OpenAI",
        "AI_CHAT_MODEL": "gpt-4o",
        "AI_CHAT_BASE_URL": "https://api.openai.com/v1"
      }
    }
  },
  {
    "id": "apache-gravitino-incubating:43edef39",
    "icon": null,
    "name": "Apache Gravitino(incubating)",
    "description": "Allow LLMs to explore metadata of structured data and unstructured data with Gravitino, and perform data governance tasks including tagging/classification.",
    "repository": {
      "url": "https://github.com/datastrato/mcp-server-gravitino",
      "source": "github",
      "stars": 19,
      "lastUpdated": "2025-08-06T07:38:38Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "apache-gravitino-incubating",
    "serverConfig": {
      "type": "stdio",
      "command": "uv",
      "args": [
        "--directory",
        "/Users/user/workspace/mcp-server-gravitino",
        "run",
        "--with",
        "fastmcp",
        "--with",
        "httpx",
        "--with",
        "mcp-server-gravitino",
        "python",
        "-m",
        "mcp_server_gravitino.server"
      ],
      "env": {
        "GRAVITINO_URI": "http://localhost:8090",
        "GRAVITINO_USERNAME": "admin",
        "GRAVITINO_PASSWORD": "admin",
        "GRAVITINO_METALAKE": "metalake_demo"
      }
    }
  },
  {
    "id": "apiweaver:def4eec4",
    "icon": null,
    "name": "APIWeaver",
    "description": "An MCP server that dynamically creates MCP  servers from web API configurations. This allows you to easily integrate any REST API, GraphQL endpoint, or web service into an MCP-compatible tool that can be used by AI assistants like Claude.",
    "repository": {
      "url": "https://github.com/GongRzhe/APIWeaver",
      "source": "github",
      "stars": 27,
      "lastUpdated": "2025-08-13T04:10:27Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "apiweaver",
    "serverConfig": {
      "type": "stdio",
      "command": "uvx",
      "args": [
        "apiweaver",
        "run"
      ]
    }
  },
  {
    "id": "apollo-io-mcp-server:f3c5536f",
    "icon": null,
    "name": "Apollo IO MCP Server",
    "description": "apollo.io mcp server. Get/enrich contact data for people and organizations agentically.",
    "repository": {
      "url": "https://github.com/AgentX-ai/apollo-io-mcp-server",
      "source": "github",
      "stars": 1,
      "lastUpdated": "2025-07-23T23:57:38Z"
    },
    "tags": [
      "community"
    ]
  },
  {
    "id": "apple-books:58cb9923",
    "icon": null,
    "name": "Apple Books",
    "description": "Interact with your library on Apple Books, manage your book collection, summarize highlights, notes, and much more.",
    "repository": {
      "url": "https://github.com/vgnshiyer/apple-books-mcp",
      "source": "github",
      "stars": 25,
      "lastUpdated": "2025-08-15T08:51:09Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "apple-books",
    "serverConfig": {
      "type": "stdio",
      "command": "uvx",
      "args": [
        "apple-books-mcp@latest"
      ]
    }
  },
  {
    "id": "apple-calendar:080b78d4",
    "icon": null,
    "name": "Apple Calendar",
    "description": "An MCP server that allows you to interact with your macOS Calendar through natural language, including features such as event creation, modification, schedule listing, finding free time slots etc.",
    "repository": {
      "url": "https://github.com/Omar-v2/mcp-ical",
      "source": "github",
      "stars": 165,
      "lastUpdated": "2025-08-15T14:58:02Z"
    },
    "tags": [
      "community"
    ]
  },
  {
    "id": "apple-docs:f8715008",
    "icon": null,
    "name": "Apple Docs",
    "description": "A powerful Model Context Protocol (MCP) server that provides seamless access to Apple Developer Documentation through natural language queries. Search, explore, and get detailed information about Apple frameworks, APIs, sample code, and more directly in your AI-powered development environment.",
    "repository": {
      "url": "https://github.com/kimsungwhee/apple-docs-mcp",
      "source": "github",
      "stars": 318,
      "lastUpdated": "2025-08-16T15:12:40Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "apple-docs",
    "serverConfig": {
      "type": "stdio",
      "command": "npx",
      "args": [
        "-y",
        "@kimsungwhee/apple-docs-mcp"
      ]
    }
  },
  {
    "id": "apple-script:07dc11e8",
    "icon": null,
    "name": "Apple Script",
    "description": "MCP server that lets LLM run AppleScript code to to fully control anything on Mac, no setup needed.",
    "repository": {
      "url": "https://github.com/peakmojo/applescript-mcp",
      "source": "github",
      "stars": 344,
      "lastUpdated": "2025-08-16T01:34:53Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "apple-script",
    "serverConfig": {
      "type": "stdio",
      "command": "npx",
      "args": [
        "@peakmojo/applescript-mcp"
      ]
    }
  },
  {
    "id": "apt-mcp:421533c0",
    "icon": null,
    "name": "APT MCP",
    "description": "MCP server which runs debian package manager (apt) commands for you using ai agents.",
    "repository": {
      "url": "https://github.com/GdMacmillan/apt-mcp-server",
      "source": "github",
      "stars": 2,
      "lastUpdated": "2025-07-20T11:08:54Z"
    },
    "tags": [
      "community"
    ]
  },
  {
    "id": "aranet4:b01c51af",
    "icon": null,
    "name": "Aranet4",
    "description": "MCP Server to manage your Aranet4 CO2 sensor. Fetch data and store in a local SQLite. Ask questions about historical data.",
    "repository": {
      "url": "https://github.com/diegobit/aranet4-mcp-server",
      "source": "github",
      "stars": 4,
      "lastUpdated": "2025-08-15T20:10:58Z"
    },
    "tags": [
      "community"
    ]
  },
  {
    "id": "arangodb:1cf52d5a",
    "icon": null,
    "name": "ArangoDB",
    "description": "MCP Server that provides database interaction capabilities through ArangoDB.",
    "repository": {
      "url": "https://github.com/ravenwits/mcp-server-arangodb",
      "source": "github",
      "stars": 37,
      "lastUpdated": "2025-08-12T01:16:41Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "arangodb",
    "serverConfig": {
      "type": "stdio",
      "command": "node",
      "args": [
        "/path/to/arango-server/build/index.js"
      ],
      "env": {
        "ARANGO_URL": "your_database_url",
        "ARANGO_DB": "your_database_name",
        "ARANGO_USERNAME": "your_username",
        "ARANGO_PASSWORD": "your_password"
      }
    }
  },
  {
    "id": "arduino:7e64a42a",
    "icon": null,
    "name": "Arduino",
    "description": "MCP Server that enables AI-powered robotics using Claude AI and Arduino (ESP32) for real-world automation and interaction with robots.",
    "repository": {
      "url": "https://github.com/vishalmysore/choturobo",
      "source": "github",
      "stars": 64,
      "lastUpdated": "2025-08-16T21:24:40Z"
    },
    "tags": [
      "community"
    ]
  },
  {
    "id": "arxiv-api:265eb146",
    "icon": null,
    "name": "arXiv API",
    "description": "An MCP server that enables interacting with the arXiv API using natural language.",
    "repository": {
      "url": "https://github.com/prashalruchiranga/arxiv-mcp-server",
      "source": "github",
      "stars": 21,
      "lastUpdated": "2025-08-15T01:35:46Z"
    },
    "tags": [
      "community"
    ]
  },
  {
    "id": "arxiv-latex-mcp:f40fbb70",
    "icon": null,
    "name": "arxiv-latex-mcp",
    "description": "MCP server that fetches and processes arXiv LaTeX sources for precise interpretation of mathematical expressions in papers.",
    "repository": {
      "url": "https://github.com/takashiishida/arxiv-latex-mcp",
      "source": "github",
      "stars": 45,
      "lastUpdated": "2025-08-16T01:32:25Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "arxiv-latex-mcp",
    "serverConfig": {
      "type": "stdio",
      "command": "uv",
      "args": [
        "--directory",
        "/ABSOLUTE/PATH/TO/arxiv-latex-mcp",
        "run",
        "server/main.py"
      ]
    }
  },
  {
    "id": "atlassian:fb062c5e",
    "icon": null,
    "name": "Atlassian",
    "description": "Interact with Atlassian Cloud products (Confluence and Jira) including searching/reading Confluence spaces/pages, accessing Jira issues, and project metadata.",
    "repository": {
      "url": "https://github.com/sooperset/mcp-atlassian",
      "source": "github",
      "stars": 2828,
      "lastUpdated": "2025-08-17T01:32:39Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "atlassian",
    "serverConfig": {
      "type": "stdio",
      "command": "docker",
      "args": [
        "run",
        "-i",
        "--rm",
        "-e",
        "CONFLUENCE_URL",
        "-e",
        "CONFLUENCE_USERNAME",
        "-e",
        "CONFLUENCE_API_TOKEN",
        "-e",
        "JIRA_URL",
        "-e",
        "JIRA_USERNAME",
        "-e",
        "JIRA_API_TOKEN",
        "ghcr.io/sooperset/mcp-atlassian:latest"
      ],
      "env": {
        "CONFLUENCE_URL": "https://your-company.atlassian.net/wiki",
        "CONFLUENCE_USERNAME": "your.email@company.com",
        "CONFLUENCE_API_TOKEN": "your_confluence_api_token",
        "JIRA_URL": "https://your-company.atlassian.net",
        "JIRA_USERNAME": "your.email@company.com",
        "JIRA_API_TOKEN": "your_jira_api_token"
      }
    }
  },
  {
    "id": "atlassian-server-by-phuc-nt:528f7171",
    "icon": null,
    "name": "Atlassian Server (by phuc-nt)",
    "description": "An MCP server that connects AI agents (Cline, Claude Desktop, Cursor, etc.) to Atlassian Jira & Confluence, enabling data queries and actions through the Model Context Protocol.",
    "repository": {
      "url": "https://github.com/phuc-nt/mcp-atlassian-server",
      "source": "github",
      "stars": 40,
      "lastUpdated": "2025-08-15T01:36:10Z"
    },
    "tags": [
      "community"
    ]
  },
  {
    "id": "attestable-mcp:d6679f87",
    "icon": null,
    "name": "Attestable MCP",
    "description": "An MCP server running inside a trusted execution environment (TEE) via Gramine, showcasing remote attestation using RA-TLS. This allows an MCP client to verify the server before connecting.",
    "repository": {
      "url": "https://github.com/co-browser/attestable-mcp-server",
      "source": "github",
      "stars": 16,
      "lastUpdated": "2025-08-15T14:51:41Z"
    },
    "tags": [
      "community"
    ]
  },
  {
    "id": "audius:506f4242",
    "icon": null,
    "name": "Audius",
    "description": "Audius + AI = Atris. Interact with fans, stream music, tip your favorite artists, and more on Audius: all through Claude.",
    "repository": {
      "url": "https://github.com/glassBead-tc/audius-mcp-atris",
      "source": "github",
      "stars": 0,
      "lastUpdated": "2025-07-26T14:21:44Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "audius",
    "serverConfig": {
      "type": "stdio",
      "command": "npx",
      "args": [
        "audius-mcp-atris"
      ],
      "env": {
        "AUDIUS_API_KEY": "your_api_key_here",
        "AUDIUS_API_SECRET": "your_api_secret_here"
      }
    }
  },
  {
    "id": "automl:070e0622",
    "icon": null,
    "name": "AutoML",
    "description": "",
    "repository": {
      "url": "https://github.com/emircansoftware/MCP_Server_DataScience",
      "source": "github",
      "stars": 2,
      "lastUpdated": "2025-08-13T03:19:06Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "automl",
    "serverConfig": {
      "type": "stdio",
      "command": "uv",
      "args": [
        "--directory",
        "C:\\YOUR\\PROJECT\\PATH\\AutoML",
        "run",
        "main.py"
      ]
    }
  },
  {
    "id": "aws:ef87b6cf",
    "icon": null,
    "name": "AWS",
    "description": "Perform operations on your AWS resources using an LLM.",
    "repository": {
      "url": "https://github.com/rishikavikondala/mcp-server-aws",
      "source": "github",
      "stars": 125,
      "lastUpdated": "2025-08-04T22:53:21Z"
    },
    "tags": [
      "community"
    ]
  },
  {
    "id": "aws-athena:2fae40e5",
    "icon": null,
    "name": "AWS Athena",
    "description": "An MCP server for AWS Athena to run SQL queries on Glue Catalog.",
    "repository": {
      "url": "https://github.com/lishenxydlgzs/aws-athena-mcp",
      "source": "github",
      "stars": 33,
      "lastUpdated": "2025-08-05T21:47:44Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "aws-athena",
    "serverConfig": {
      "type": "stdio",
      "command": "npx",
      "args": [
        "-y",
        "@lishenxydlgzs/aws-athena-mcp"
      ],
      "env": {
        "OUTPUT_S3_PATH": "s3://your-bucket/athena-results/",
        "AWS_REGION": "us-east-1",
        "AWS_PROFILE": "default",
        "AWS_ACCESS_KEY_ID": "",
        "AWS_SECRET_ACCESS_KEY": "",
        "AWS_SESSION_TOKEN": "",
        "ATHENA_WORKGROUP": "default_workgroup",
        "QUERY_TIMEOUT_MS": "300000",
        "MAX_RETRIES": "100",
        "RETRY_DELAY_MS": "500"
      }
    }
  },
  {
    "id": "aws-cognito:0913777f",
    "icon": null,
    "name": "AWS Cognito",
    "description": "An MCP server that connects to AWS Cognito for authentication and user management.",
    "repository": {
      "url": "https://github.com/gitCarrot/mcp-server-aws-cognito",
      "source": "github",
      "stars": 1,
      "lastUpdated": "2025-08-11T19:11:57Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "aws-cognito",
    "serverConfig": {
      "type": "stdio",
      "command": "/path/to/mcp-server-aws-cognito/build/index.js",
      "env": {
        "AWS_COGNITO_USER_POOL_ID": "your-user-pool-id",
        "AWS_COGNITO_USER_POOL_CLIENT_ID": "your-app-client-id"
      }
    }
  },
  {
    "id": "aws-cost-explorer:f0a19c10",
    "icon": null,
    "name": "AWS Cost Explorer",
    "description": "Optimize your AWS spend (including Amazon Bedrock spend) with this MCP server by examining spend across regions, services, instance types and foundation models (demo video).",
    "repository": {
      "url": "https://github.com/aarora79/aws-cost-explorer-mcp-server",
      "source": "github",
      "stars": 121,
      "lastUpdated": "2025-07-17T04:57:01Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "aws-cost-explorer",
    "serverConfig": {
      "type": "stdio",
      "command": "docker",
      "args": [
        "run",
        "-i",
        "--rm",
        "-e",
        "AWS_ACCESS_KEY_ID",
        "-e",
        "AWS_SECRET_ACCESS_KEY",
        "-e",
        "AWS_REGION",
        "-e",
        "BEDROCK_LOG_GROUP_NAME",
        "-e",
        "MCP_TRANSPORT",
        "-e",
        "CROSS_ACCOUNT_ROLE_NAME",
        "aws-cost-explorer-mcp:latest"
      ],
      "env": {
        "AWS_ACCESS_KEY_ID": "YOUR_ACCESS_KEY_ID",
        "AWS_SECRET_ACCESS_KEY": "YOUR_SECRET_ACCESS_KEY",
        "AWS_REGION": "us-east-1",
        "BEDROCK_LOG_GROUP_NAME": "YOUR_CLOUDWATCH_BEDROCK_MODEL_INVOCATION_LOG_GROUP_NAME",
        "CROSS_ACCOUNT_ROLE_NAME": "ROLE_NAME_FOR_THE_ROLE_TO_ASSUME_IN_OTHER_ACCOUNTS",
        "MCP_TRANSPORT": "stdio"
      }
    }
  },
  {
    "id": "aws-resources-operations:be62c557",
    "icon": null,
    "name": "AWS Resources Operations",
    "description": "Run generated python code to securely query or modify any AWS resources supported by boto3.",
    "repository": {
      "url": "https://github.com/baryhuang/mcp-server-aws-resources-python",
      "source": "github",
      "stars": 19,
      "lastUpdated": "2025-08-13T16:39:29Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "aws-resources-operations",
    "serverConfig": {
      "type": "stdio",
      "command": "docker",
      "args": [
        "run",
        "-i",
        "--rm",
        "-e",
        "AWS_ACCESS_KEY_ID=your_access_key_id_here",
        "-e",
        "AWS_SECRET_ACCESS_KEY=your_secret_access_key_here",
        "-e",
        "AWS_DEFAULT_REGION=us-east-1",
        "buryhuang/mcp-server-aws-resources:latest"
      ]
    }
  },
  {
    "id": "aws-s3:9fe04eae",
    "icon": null,
    "name": "AWS S3",
    "description": "A sample MCP server for AWS S3 that flexibly fetches objects from S3 such as PDF documents.",
    "repository": {
      "url": "https://github.com/aws-samples/sample-mcp-server-s3",
      "source": "github",
      "stars": 59,
      "lastUpdated": "2025-08-08T08:59:07Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "aws-s3",
    "serverConfig": {
      "type": "stdio",
      "command": "uvx",
      "args": [
        "s3-mcp-server"
      ]
    }
  },
  {
    "id": "aws-ses:9763f2dc",
    "icon": null,
    "name": "AWS SES",
    "description": "",
    "repository": {
      "url": "https://github.com/aws-samples/sample-for-amazon-ses-mcp",
      "source": "github",
      "stars": 3,
      "lastUpdated": "2025-07-15T12:20:02Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "aws-ses",
    "serverConfig": {
      "type": "stdio",
      "command": "java",
      "args": [
        "-jar",
        "JAR_PATH_FROM_BUILD_OUTPUT"
      ]
    }
  },
  {
    "id": "azure-adx:21af86dd",
    "icon": null,
    "name": "Azure ADX",
    "description": "Query and analyze Azure Data Explorer databases.",
    "repository": {
      "url": "https://github.com/pab1it0/adx-mcp-server",
      "source": "github",
      "stars": 45,
      "lastUpdated": "2025-07-26T16:25:14Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "azure-adx",
    "serverConfig": {
      "type": "stdio",
      "command": "docker",
      "args": [
        "run",
        "--rm",
        "-i",
        "-e",
        "ADX_CLUSTER_URL",
        "-e",
        "ADX_DATABASE",
        "-e",
        "AZURE_TENANT_ID",
        "-e",
        "AZURE_CLIENT_ID",
        "-e",
        "ADX_TOKEN_FILE_PATH",
        "adx-mcp-server"
      ],
      "env": {
        "ADX_CLUSTER_URL": "https://yourcluster.region.kusto.windows.net",
        "ADX_DATABASE": "your_database",
        "AZURE_TENANT_ID": "your_tenant_id",
        "AZURE_CLIENT_ID": "your_client_id",
        "ADX_TOKEN_FILE_PATH": "/var/run/secrets/azure/tokens/azure-identity-token"
      }
    }
  },
  {
    "id": "azure-devops:4d0dfe0e",
    "icon": null,
    "name": "Azure DevOps",
    "description": "An MCP server that provides a bridge to Azure DevOps services, enabling AI assistants to query and manage work items.",
    "repository": {
      "url": "https://github.com/Vortiago/mcp-azure-devops",
      "source": "github",
      "stars": 73,
      "lastUpdated": "2025-08-14T07:37:11Z"
    },
    "tags": [
      "community"
    ]
  },
  {
    "id": "azure-mcp-hub:7e08f9fe",
    "icon": null,
    "name": "Azure MCP Hub",
    "description": "A curated list of all MCP servers and related resources for Azure developers by **Arun Sekhar**",
    "repository": {
      "url": "https://github.com/Azure-Samples/mcp",
      "source": "github",
      "stars": 34,
      "lastUpdated": "2025-08-14T07:33:17Z"
    },
    "tags": [
      "community"
    ]
  },
  {
    "id": "azure-openai-dall-e-3-mcp-server:578c30f9",
    "icon": null,
    "name": "Azure OpenAI DALL-E 3 MCP Server",
    "description": "An MCP server for Azure OpenAI DALL-E 3 service to generate image from text.",
    "repository": {
      "url": "https://github.com/jacwu/mcp-server-aoai-dalle3",
      "source": "github",
      "stars": 2,
      "lastUpdated": "2025-08-14T07:37:18Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "azure-openai-dall-e-3-mcp-server",
    "serverConfig": {
      "type": "stdio",
      "command": "node",
      "args": [
        "path/to/mcp-server-aoai-dalle3/build/index.js"
      ],
      "env": {
        "AZURE_OPENAI_ENDPOINT": "<endpoint>",
        "AZURE_OPENAI_API_KEY": "<key>",
        "AZURE_OPENAI_DEPLOYMENT_NAME": "<deployment>"
      }
    }
  },
  {
    "id": "azure-wiki-search:7e398a4b",
    "icon": null,
    "name": "Azure Wiki Search",
    "description": "An MCP that enables AI to query the wiki hosted on Azure Devops Wiki.",
    "repository": {
      "url": "https://github.com/coder-linping/azure-wiki-search-server",
      "source": "github",
      "stars": 4,
      "lastUpdated": "2025-07-14T12:30:32Z"
    },
    "tags": [
      "community"
    ]
  },
  {
    "id": "baidu-ai-search:ba3d3c02",
    "icon": null,
    "name": "Baidu AI Search",
    "description": "Web search with Baidu Cloud's AI Search",
    "repository": {
      "url": "https://github.com/baidubce/app-builder/tree/master/python/mcp_server/ai_search",
      "source": "github",
      "stars": 548,
      "lastUpdated": "2025-08-15T09:16:15Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "baidu-ai-search",
    "serverConfig": {
      "type": "sse",
      "url": "http://appbuilder.baidu.com/v2/ai_search/mcp/sse?api_key=Bearer+bce-v3/ALTAK..."
    }
  },
  {
    "id": "bamboohr-mcp:494345cc",
    "icon": null,
    "name": "BambooHR MCP",
    "description": "An MCP server that interfaces with the BambooHR APIs, providing access to employee data, time tracking, and HR management features.",
    "repository": {
      "url": "https://github.com/encoreshao/bamboohr-mcp",
      "source": "github",
      "stars": 1,
      "lastUpdated": "2025-07-18T10:20:04Z"
    },
    "tags": [
      "community"
    ]
  },
  {
    "id": "base-free-usdc-transfer:ab3a3327",
    "icon": null,
    "name": "Base Free USDC Transfer",
    "description": "Send USDC on Base for free using Claude AI! Built with Coinbase CDP.",
    "repository": {
      "url": "https://github.com/magnetai/mcp-free-usdc-transfer",
      "source": "github",
      "stars": 16,
      "lastUpdated": "2025-06-29T21:04:54Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "base-free-usdc-transfer",
    "serverConfig": {
      "type": "stdio",
      "command": "npx",
      "args": [
        "-y",
        "@magnetai/free-usdc-transfer"
      ],
      "env": {
        "COINBASE_CDP_API_KEY_NAME": "YOUR_COINBASE_CDP_API_KEY_NAME",
        "COINBASE_CDP_PRIVATE_KEY": "YOUR_COINBASE_CDP_PRIVATE_KEY"
      }
    }
  },
  {
    "id": "basic-memory:c5f00cae",
    "icon": null,
    "name": "Basic Memory",
    "description": "Local-first knowledge management system that builds a semantic graph from Markdown files, enabling persistent memory across conversations with LLMs.",
    "repository": {
      "url": "https://github.com/basicmachines-co/basic-memory",
      "source": "github",
      "stars": 1604,
      "lastUpdated": "2025-08-17T01:32:25Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "basic-memory",
    "serverConfig": {
      "type": "stdio",
      "command": "uvx",
      "args": [
        "basic-memory",
        "mcp"
      ]
    }
  },
  {
    "id": "bgg-mcp:e8549b03",
    "icon": null,
    "name": "BGG MCP",
    "description": "",
    "repository": {
      "url": "https://github.com/kkjdaniel/bgg-mcp",
      "source": "github",
      "stars": 10,
      "lastUpdated": "2025-08-08T07:53:47Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "bgg-mcp",
    "serverConfig": {
      "type": "stdio",
      "command": "path/to/build/bgg-mcp",
      "args": []
    }
  },
  {
    "id": "bible:7cff0ed3",
    "icon": null,
    "name": "Bible",
    "description": "Add biblical context to your generative AI applications.",
    "repository": {
      "url": "https://github.com/trevato/bible-mcp",
      "source": "github",
      "stars": 0,
      "lastUpdated": "2025-05-07T15:27:46Z"
    },
    "tags": [
      "community"
    ]
  },
  {
    "id": "bigquery:6fef24e9",
    "icon": null,
    "name": "BigQuery",
    "description": "",
    "repository": {
      "url": "https://github.com/LucasHild/mcp-server-bigquery",
      "source": "github",
      "stars": 115,
      "lastUpdated": "2025-08-11T22:51:35Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "bigquery",
    "serverConfig": {
      "type": "stdio",
      "command": "uvx",
      "args": [
        "mcp-server-bigquery",
        "--project",
        "{{GCP_PROJECT_ID}}",
        "--location",
        "{{GCP_LOCATION}}"
      ]
    }
  },
  {
    "id": "bigquery:1d30c64a",
    "icon": null,
    "name": "BigQuery",
    "description": "",
    "repository": {
      "url": "https://github.com/ergut/mcp-bigquery-server",
      "source": "github",
      "stars": 115,
      "lastUpdated": "2025-08-14T14:17:45Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "bigquery",
    "serverConfig": {
      "type": "stdio",
      "command": "node",
      "args": [
        "/path/to/your/clone/mcp-bigquery-server/dist/index.js",
        "--project-id",
        "your-project-id",
        "--location",
        "us-central1",
        "--key-file",
        "/path/to/service-account-key.json"
      ]
    }
  },
  {
    "id": "bilibili:82589623",
    "icon": null,
    "name": "Bilibili",
    "description": "This MCP server provides tools to fetch Bilibili user profiles, video metadata, search videos, and more.",
    "repository": {
      "url": "https://github.com/wangshunnn/bilibili-mcp-server",
      "source": "github",
      "stars": 10,
      "lastUpdated": "2025-08-16T15:51:18Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "bilibili",
    "serverConfig": {
      "type": "stdio",
      "command": "npx",
      "args": [
        "-y",
        "@wangshunnn/bilibili-mcp-server"
      ]
    }
  },
  {
    "id": "binance:78d22fd9",
    "icon": null,
    "name": "Binance",
    "description": "Cryptocurrency trading and market data access through Binance API integration.",
    "repository": {
      "url": "https://github.com/ethancod1ng/binance-mcp-server",
      "source": "github",
      "stars": 7,
      "lastUpdated": "2025-08-16T05:30:15Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "binance",
    "serverConfig": {
      "type": "stdio",
      "command": "npx",
      "args": [
        "binance-mcp-server"
      ],
      "env": {
        "BINANCE_API_KEY": "your_api_key",
        "BINANCE_API_SECRET": "your_api_secret",
        "BINANCE_TESTNET": "false"
      }
    }
  },
  {
    "id": "binance:3aac4f8d",
    "icon": null,
    "name": "Binance",
    "description": "",
    "repository": {
      "url": "https://github.com/AnalyticAce/BinanceMCPServer",
      "source": "github",
      "stars": 13,
      "lastUpdated": "2025-08-09T23:13:36Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "binance",
    "serverConfig": {
      "type": "stdio",
      "command": "binance-mcp-server",
      "args": [
        "--api-key",
        "your_api_key",
        "--api-secret",
        "your_secret",
        "--binance-testnet"
      ]
    }
  },
  {
    "id": "bing-web-search-api:29a99a21",
    "icon": null,
    "name": "Bing Web Search API",
    "description": "",
    "repository": {
      "url": "https://github.com/leehanchung/bing-search-mcp",
      "source": "github",
      "stars": 54,
      "lastUpdated": "2025-08-17T01:36:09Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "bing-web-search-api",
    "serverConfig": {
      "type": "stdio",
      "command": "uvx",
      "args": [
        "/path/to/your/bing-search-mcp"
      ],
      "env": {
        "BING_API_KEY": "your-bing-api-key"
      }
    }
  },
  {
    "id": "biomcp:ab5234cb",
    "icon": null,
    "name": "BioMCP",
    "description": "",
    "repository": {
      "url": "https://github.com/genomoncology/biomcp",
      "source": "github",
      "stars": 255,
      "lastUpdated": "2025-08-16T23:03:15Z"
    },
    "tags": [
      "community"
    ]
  },
  {
    "id": "biorxiv:3673d1bb",
    "icon": null,
    "name": "bioRxiv",
    "description": "🔍 Enable AI assistants to search and access bioRxiv papers through a simple MCP interface.",
    "repository": {
      "url": "https://github.com/JackKuo666/bioRxiv-MCP-Server",
      "source": "github",
      "stars": 18,
      "lastUpdated": "2025-07-29T12:27:12Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "biorxiv",
    "serverConfig": {
      "type": "stdio",
      "command": "python",
      "args": [
        "-m",
        "biorxiv-mcp-server"
      ]
    }
  },
  {
    "id": "bitable-mcp:f4855a90",
    "icon": null,
    "name": "Bitable MCP",
    "description": "",
    "repository": {
      "url": "https://github.com/lloydzhou/bitable-mcp",
      "source": "github",
      "stars": 2,
      "lastUpdated": "2025-07-18T04:08:43Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "bitable-mcp",
    "serverConfig": {
      "type": "stdio",
      "command": "uvx",
      "args": [
        "bitable-mcp"
      ],
      "env": {
        "PERSONAL_BASE_TOKEN": "your-personal-base-token",
        "APP_TOKEN": "your-app-token"
      }
    }
  },
  {
    "id": "blender:d593f340",
    "icon": null,
    "name": "Blender",
    "description": "",
    "repository": {
      "url": "https://github.com/ahujasid/blender-mcp",
      "source": "github",
      "stars": 12910,
      "lastUpdated": "2025-08-17T00:19:08Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "blender",
    "serverConfig": {
      "type": "stdio",
      "command": "uvx",
      "args": [
        "blender-mcp"
      ]
    }
  },
  {
    "id": "blender-mcp:a70af9f4",
    "icon": null,
    "name": "Blender MCP",
    "description": "MCP server to create professional like 3d scenes on blender using natural language.",
    "repository": {
      "url": "https://github.com/pranav-deshmukh/blender-mcp",
      "source": "github",
      "stars": 72,
      "lastUpdated": "2025-08-16T12:59:25Z"
    },
    "tags": [
      "community"
    ]
  },
  {
    "id": "blockchain-mcp:2cc8b1ca",
    "icon": null,
    "name": "Blockchain MCP",
    "description": "MCP Server for Blockchain Data from **Tatum** that instantly unlocks blockchain access for your AI agents. This official Tatum MCP server connects to any LLM in seconds.",
    "repository": {
      "url": "https://github.com/tatumio/blockchain-mcp",
      "source": "github",
      "stars": 8,
      "lastUpdated": "2025-08-14T16:22:12Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "blockchain-mcp",
    "serverConfig": {
      "type": "stdio",
      "command": "npx",
      "args": [
        "@tatumio/blockchain-mcp"
      ],
      "env": {
        "TATUM_API_KEY": "YOUR_API_KEY"
      }
    }
  },
  {
    "id": "bluesky:0b6485dc",
    "icon": null,
    "name": "Bluesky",
    "description": "",
    "repository": {
      "url": "https://github.com/semioz/bluesky-mcp",
      "source": "github",
      "stars": 5,
      "lastUpdated": "2025-07-30T06:08:18Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "bluesky",
    "serverConfig": {
      "type": "stdio",
      "command": "npx",
      "args": [
        "-y",
        "@semihberkay/bluesky-mcp"
      ],
      "env": {
        "BLUESKY_IDENTIFIER": "your.handle.bsky.social",
        "BLUESKY_PASSWORD": "your-app-password"
      }
    }
  },
  {
    "id": "bluetooth-mcp-server:433fad95",
    "icon": null,
    "name": "Bluetooth MCP Server",
    "description": "Control Bluetooth devices and manage connections through natural language commands, including device discovery, pairing, and audio controls.",
    "repository": {
      "url": "https://github.com/Hypijump31/bluetooth-mcp-server",
      "source": "github",
      "stars": 8,
      "lastUpdated": "2025-08-06T13:51:27Z"
    },
    "tags": [
      "community"
    ]
  },
  {
    "id": "bnbchain-mcp:e625fd87",
    "icon": null,
    "name": "BNBChain MCP",
    "description": "An MCP server for interacting with BSC, opBNB, and the Greenfield blockchain.",
    "repository": {
      "url": "https://github.com/bnb-chain/bnbchain-mcp",
      "source": "github",
      "stars": 35,
      "lastUpdated": "2025-08-12T11:00:40Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "bnbchain-mcp",
    "serverConfig": {
      "type": "stdio",
      "command": "npx",
      "args": [
        "-y",
        "@bnb-chain/mcp@latest"
      ],
      "env": {
        "PRIVATE_KEY": "your_private_key_here. (optional)"
      }
    }
  },
  {
    "id": "braintree:f37053de",
    "icon": null,
    "name": "Braintree",
    "description": "Unofficial PayPal Braintree payment gateway MCP Server for AI agents to process payments, manage customers, and handle transactions securely.",
    "repository": {
      "url": "https://github.com/QuentinCody/braintree-mcp-server",
      "source": "github",
      "stars": 2,
      "lastUpdated": "2025-08-02T11:39:45Z"
    },
    "tags": [
      "community"
    ]
  },
  {
    "id": "brazilian-law:86521390",
    "icon": null,
    "name": "Brazilian Law",
    "description": "",
    "repository": {
      "url": "https://github.com/pdmtt/brlaw_mcp_server/",
      "source": "github",
      "stars": 14,
      "lastUpdated": "2025-08-16T04:24:32Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "brazilian-law",
    "serverConfig": {
      "type": "stdio",
      "command": "uv",
      "args": [
        "--directory",
        "/<path>/brlaw_mcp_server",
        "run",
        "serve"
      ]
    }
  },
  {
    "id": "breakoutroom:e2e7536d",
    "icon": null,
    "name": "BreakoutRoom",
    "description": "Agents accomplishing goals together in p2p rooms",
    "repository": {
      "url": "https://github.com/agree-able/room-mcp",
      "source": "github",
      "stars": 15,
      "lastUpdated": "2025-07-30T19:22:09Z"
    },
    "tags": [
      "community"
    ]
  },
  {
    "id": "browser-mcp:04fcf528",
    "icon": null,
    "name": "Browser MCP",
    "description": "",
    "repository": {
      "url": "https://github.com/bytedance/UI-TARS-desktop/tree/main/packages/agent-infra/mcp-servers/browser",
      "source": "github",
      "stars": 16988,
      "lastUpdated": "2025-08-17T02:38:38Z"
    },
    "tags": [
      "community"
    ]
  },
  {
    "id": "browser-use:bd4c36de",
    "icon": null,
    "name": "browser-use",
    "description": "",
    "repository": {
      "url": "https://github.com/co-browser/browser-use-mcp-server",
      "source": "github",
      "stars": 692,
      "lastUpdated": "2025-08-15T16:54:49Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "browser-use",
    "serverConfig": {
      "type": "sse",
      "url": "http://localhost:8000/sse"
    }
  },
  {
    "id": "browserloop:d26eb62d",
    "icon": null,
    "name": "BrowserLoop",
    "description": "An MCP server for taking screenshots of web pages using Playwright. Supports high-quality capture with configurable formats, viewport sizes, cookie-based authentication, and both full page and element-specific screenshots.",
    "repository": {
      "url": "https://github.com/mattiasw/browserloop",
      "source": "github",
      "stars": 18,
      "lastUpdated": "2025-08-14T09:29:43Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "browserloop",
    "serverConfig": {
      "type": "stdio",
      "command": "npx",
      "args": [
        "-y",
        "browserloop@latest"
      ]
    }
  },
  {
    "id": "bsc-mcp:f9c98d66",
    "icon": null,
    "name": "Bsc-mcp",
    "description": "",
    "repository": {
      "url": "https://github.com/TermiX-official/bsc-mcp",
      "source": "github",
      "stars": 82,
      "lastUpdated": "2025-07-20T13:37:20Z"
    },
    "tags": [
      "community"
    ]
  },
  {
    "id": "bugbug-mcp-server:0f407c9e",
    "icon": null,
    "name": "BugBug MCP Server",
    "description": "Unofficial MCP server for BugBug API.",
    "repository": {
      "url": "https://github.com/simplypixi/bugbug-mcp-server",
      "source": "github",
      "stars": 0,
      "lastUpdated": "2025-08-16T09:48:14Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "bugbug-mcp-server",
    "serverConfig": {
      "type": "stdio",
      "command": "npx",
      "args": [
        "-y",
        "@simplypixi/bugbug-mcp-server@latest"
      ],
      "env": {
        "API_KEY": "your_bugbug_api_token_here"
      }
    }
  },
  {
    "id": "bvg-mcp-server-unofficial:2c8804c2",
    "icon": null,
    "name": "BVG MCP Server - (Unofficial) ",
    "description": "Unofficial MCP server for Berliner Verkehrsbetriebe Api.",
    "repository": {
      "url": "https://github.com/svkaizoku/mcp-bvg",
      "source": "github",
      "stars": 0,
      "lastUpdated": "2025-05-12T13:14:22Z"
    },
    "tags": [
      "community"
    ]
  },
  {
    "id": "bybit:35cb8f5d",
    "icon": null,
    "name": "Bybit",
    "description": "A Model Context Protocol (MCP) server for integrating AI assistants with Bybit cryptocurrency exchange APIs, enabling automated trading, market data access, and account management.",
    "repository": {
      "url": "https://github.com/ethancod1ng/bybit-mcp-server",
      "source": "github",
      "stars": 0,
      "lastUpdated": "2025-07-18T01:52:35Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "bybit",
    "serverConfig": {
      "type": "stdio",
      "command": "npx",
      "args": [
        "bybit-mcp-server"
      ],
      "env": {
        "BYBIT_API_KEY": "your_testnet_api_key",
        "BYBIT_API_SECRET": "your_testnet_api_secret",
        "BYBIT_ENVIRONMENT": "testnet"
      }
    }
  },
  {
    "id": "cad-mcp:6ce271c5",
    "icon": null,
    "name": "CAD-MCP",
    "description": "",
    "repository": {
      "url": "https://github.com/daobataotie/CAD-MCP#",
      "source": "github",
      "stars": 155,
      "lastUpdated": "2025-08-16T07:25:06Z"
    },
    "tags": [
      "community"
    ]
  },
  {
    "id": "calculator:affa36b3",
    "icon": null,
    "name": "Calculator",
    "description": "This server enables LLMs to use calculator for precise numerical calculations.",
    "repository": {
      "url": "https://github.com/githejie/mcp-server-calculator",
      "source": "github",
      "stars": 107,
      "lastUpdated": "2025-08-14T21:47:55Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "calculator",
    "serverConfig": {
      "type": "stdio",
      "command": "uvx",
      "args": [
        "mcp-server-calculator"
      ]
    }
  },
  {
    "id": "caldav-mcp:4dcf0259",
    "icon": null,
    "name": "CalDAV MCP",
    "description": "A CalDAV MCP server to expose calendar operations as tools for AI assistants.",
    "repository": {
      "url": "https://github.com/dominik1001/caldav-mcp",
      "source": "github",
      "stars": 22,
      "lastUpdated": "2025-08-12T18:21:59Z"
    },
    "tags": [
      "community"
    ]
  },
  {
    "id": "calendly-mcp-server:8ffeb6c8",
    "icon": null,
    "name": "Calendly-mcp-server",
    "description": "Open source calendly mcp server.",
    "repository": {
      "url": "https://github.com/meAmitPatil/calendly-mcp-server",
      "source": "github",
      "stars": 6,
      "lastUpdated": "2025-08-15T08:57:11Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "calendly-mcp-server",
    "serverConfig": {
      "type": "stdio",
      "command": "node",
      "args": [
        "path/to/calendly-mcp-server/dist/index.js"
      ],
      "env": {
        "CALENDLY_API_KEY": "your_personal_access_token_here",
        "CALENDLY_USER_URI": "https://api.calendly.com/users/your_user_id",
        "CALENDLY_ORGANIZATION_URI": "https://api.calendly.com/organizations/your_org_id"
      }
    }
  },
  {
    "id": "catalysis-hub:28c5d6d8",
    "icon": null,
    "name": "Catalysis Hub",
    "description": "Unofficial MCP server for searching and retrieving scientific data from the Catalysis Hub database, providing access to computational catalysis research and surface reaction data.",
    "repository": {
      "url": "https://github.com/QuentinCody/catalysishub-mcp-server",
      "source": "github",
      "stars": 1,
      "lastUpdated": "2025-05-20T14:47:46Z"
    },
    "tags": [
      "community"
    ]
  },
  {
    "id": "cctv-vms-mcp:a1d25c79",
    "icon": null,
    "name": "CCTV VMS MCP",
    "description": "A Model Context Protocol (MCP) server designed to connect to a CCTV recording program (VMS) to retrieve recorded and live video streams. It also provides tools to control the VMS software, such as showing live or playback dialogs for specific channels at specified times.",
    "repository": {
      "url": "https://github.com/jyjune/mcp_vms",
      "source": "github",
      "stars": 6,
      "lastUpdated": "2025-07-18T00:20:41Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "cctv-vms-mcp",
    "serverConfig": {
      "type": "stdio",
      "command": "uv",
      "args": [
        "--directory",
        "X:\\path\\to\\mcp-vms",
        "run",
        "mcp_vms.py"
      ]
    }
  },
  {
    "id": "cfbd-api:914ea00b",
    "icon": null,
    "name": "CFBD API",
    "description": "An MCP server for the College Football Data API.",
    "repository": {
      "url": "https://github.com/lenwood/cfbd-mcp-server",
      "source": "github",
      "stars": 18,
      "lastUpdated": "2025-07-24T18:14:53Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "cfbd-api",
    "serverConfig": {
      "type": "stdio",
      "command": "uv",
      "args": [
        "--directory",
        "/full/path/to/cfbd-mcp-server",
        "run",
        "cfbd-mcp-server"
      ],
      "env": {
        "CFB_API_KEY": "xxx",
        "PATH": "/full/path/to/python"
      }
    }
  },
  {
    "id": "chatmcp:39786f45",
    "icon": null,
    "name": "ChatMCP",
    "description": "",
    "repository": {
      "url": "https://github.com/AI-QL/chat-mcp",
      "source": "github",
      "stars": 235,
      "lastUpdated": "2025-08-12T03:34:06Z"
    },
    "tags": [
      "community"
    ]
  },
  {
    "id": "chatsum:d1c40f6b",
    "icon": null,
    "name": "ChatSum",
    "description": "Query and Summarize chat messages with LLM. by mcpso",
    "repository": {
      "url": "https://github.com/mcpso/mcp-server-chatsum",
      "source": "github",
      "stars": 1010,
      "lastUpdated": "2025-08-16T08:52:23Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "chatsum",
    "serverConfig": {
      "type": "stdio",
      "command": "path-to/bin/node",
      "args": [
        "path-to/mcp-server-chatsum/build/index.js"
      ],
      "env": {
        "CHAT_DB_PATH": "path-to/mcp-server-chatsum/chatbot/data/chat.db"
      }
    }
  },
  {
    "id": "chess-com:0a09959c",
    "icon": null,
    "name": "Chess.com",
    "description": "Access Chess.com player data, game records, and other public information through standardized MCP interfaces, allowing AI assistants to search and analyze chess information.",
    "repository": {
      "url": "https://github.com/pab1it0/chess-mcp",
      "source": "github",
      "stars": 47,
      "lastUpdated": "2025-08-12T14:08:57Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "chess-com",
    "serverConfig": {
      "type": "stdio",
      "command": "docker",
      "args": [
        "run",
        "--rm",
        "-i",
        "pab1it0/chess-mcp"
      ]
    }
  },
  {
    "id": "chesspal-chess-engine-stockfish:6aba22ab",
    "icon": null,
    "name": "ChessPal Chess Engine (stockfish)",
    "description": "A Stockfish-powered chess engine exposed as an MCP server. Calculates best moves and supports both HTTP/SSE and stdio transports.",
    "repository": {
      "url": "https://github.com/wilson-urdaneta/chesspal-mcp-engine",
      "source": "github",
      "stars": 2,
      "lastUpdated": "2025-07-26T09:17:05Z"
    },
    "tags": [
      "community"
    ]
  },
  {
    "id": "chroma:73ccf651",
    "icon": null,
    "name": "Chroma",
    "description": "Vector database server for semantic document search and metadata filtering, built on Chroma",
    "repository": {
      "url": "https://github.com/privetin/chroma",
      "source": "github",
      "stars": 37,
      "lastUpdated": "2025-08-14T21:13:56Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "chroma",
    "serverConfig": {
      "type": "stdio",
      "command": "uv",
      "args": [
        "--directory",
        "C:/MCP/server/community/chroma",
        "run",
        "chroma"
      ]
    }
  },
  {
    "id": "chrome-history:b96ae04b",
    "icon": null,
    "name": "Chrome history",
    "description": "Talk with AI about your browser history, get fun ^_^",
    "repository": {
      "url": "https://github.com/vincent-pli/chrome-history-mcp",
      "source": "github",
      "stars": 2,
      "lastUpdated": "2025-08-12T09:56:18Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "chrome-history",
    "serverConfig": {
      "type": "stdio",
      "command": "uv",
      "args": [
        "--project",
        "<location of the repo>",
        "run",
        "chrome-history-mcp",
        "--path",
        "<location of your chrome history>"
      ]
    }
  },
  {
    "id": "claude-thread-continuity:98e33014",
    "icon": null,
    "name": "Claude Thread Continuity",
    "description": "Persistent memory system enabling Claude Desktop conversations to resume with full context across sessions. Maintains conversation history, project states, and user preferences for seamless multi-session workflows.",
    "repository": {
      "url": "https://github.com/peless/claude-thread-continuity",
      "source": "github",
      "stars": 44,
      "lastUpdated": "2025-08-14T21:07:08Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "claude-thread-continuity",
    "serverConfig": {
      "type": "stdio",
      "command": "python3",
      "args": [
        "~/.mcp-servers/claude-continuity/server.py"
      ],
      "env": {}
    }
  },
  {
    "id": "claudepost:ad39c527",
    "icon": null,
    "name": "ClaudePost",
    "description": "ClaudePost enables seamless email management for Gmail, offering secure features like email search, reading, and sending.",
    "repository": {
      "url": "https://github.com/ZilongXue/claude-post",
      "source": "github",
      "stars": 96,
      "lastUpdated": "2025-08-17T01:12:43Z"
    },
    "tags": [
      "community"
    ]
  },
  {
    "id": "cldgeminipdf-analyzer:e07c44e1",
    "icon": null,
    "name": "CLDGeminiPDF Analyzer",
    "description": "MCP server tool enabling sharing large PDF files to Google LLMs via API for further/additional analysis and response retrieval to Claude Desktop.",
    "repository": {
      "url": "https://github.com/tfll37/CLDGeminiPDF-Analyzer",
      "source": "github",
      "stars": 0,
      "lastUpdated": "2025-06-04T12:41:06Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "cldgeminipdf-analyzer",
    "serverConfig": {
      "type": "stdio",
      "command": "npx",
      "args": [
        "-y",
        "@modelcontextprotocol/server-filesystem",
        "/path/to/your/documents"
      ]
    }
  },
  {
    "id": "clearml-mcp:73fccc49",
    "icon": null,
    "name": "ClearML MCP",
    "description": "Get comprehensive ML experiment context and analysis directly from ClearML in your AI conversations.",
    "repository": {
      "url": "https://github.com/prassanna-ravishankar/clearml-mcp",
      "source": "github",
      "stars": 4,
      "lastUpdated": "2025-07-24T21:30:14Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "clearml-mcp",
    "serverConfig": {
      "type": "stdio",
      "command": "uvx",
      "args": [
        "clearml-mcp"
      ]
    }
  },
  {
    "id": "clickup:01cdd810",
    "icon": null,
    "name": "ClickUp",
    "description": "MCP server for ClickUp task management, supporting task creation, updates, bulk operations, and markdown descriptions.",
    "repository": {
      "url": "https://github.com/TaazKareem/clickup-mcp-server",
      "source": "github",
      "stars": 345,
      "lastUpdated": "2025-08-16T08:37:12Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "clickup",
    "serverConfig": {
      "type": "stdio",
      "command": "npx",
      "args": [
        "-y",
        "@taazkareem/clickup-mcp-server@latest"
      ],
      "env": {
        "CLICKUP_API_KEY": "your-api-key",
        "CLICKUP_TEAM_ID": "your-team-id",
        "DOCUMENT_SUPPORT": "true"
      }
    }
  },
  {
    "id": "cloudinary:aac73e5c",
    "icon": null,
    "name": "Cloudinary",
    "description": "Cloudinary Model Context Protocol Server to upload media to Cloudinary and get back the media link and details.",
    "repository": {
      "url": "https://github.com/felores/cloudinary-mcp-server",
      "source": "github",
      "stars": 8,
      "lastUpdated": "2025-07-21T20:14:16Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "cloudinary",
    "serverConfig": {
      "type": "stdio",
      "command": "npx",
      "args": [
        "@felores/cloudinary-mcp-server@latest"
      ],
      "env": {
        "CLOUDINARY_CLOUD_NAME": "your_cloud_name",
        "CLOUDINARY_API_KEY": "your_api_key",
        "CLOUDINARY_API_SECRET": "your_api_secret"
      }
    }
  },
  {
    "id": "cockroachdb:97d95be0",
    "icon": null,
    "name": "CockroachDB",
    "description": "MCP server enabling AI agents and LLMs to manage, monitor, and query **CockroachDB** using natural language.",
    "repository": {
      "url": "https://github.com/amineelkouhen/mcp-cockroachdb",
      "source": "github",
      "stars": 1,
      "lastUpdated": "2025-07-25T14:07:49Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "cockroachdb",
    "serverConfig": {
      "type": "stdio",
      "command": "uvx",
      "args": [
        "--from",
        "git+https://github.com/cockroachdb/mcp-cockroachdb.git",
        "cockroachdb-mcp-server",
        "--url",
        "postgresql://root@localhost:26257/defaultdb"
      ]
    }
  },
  {
    "id": "cockroachdb-mcp-server:8994ed98",
    "icon": null,
    "name": "CockroachDB MCP Server",
    "description": "",
    "repository": {
      "url": "https://github.com/viragtripathi/cockroachdb-mcp-server",
      "source": "github",
      "stars": 0,
      "lastUpdated": "2025-06-18T14:14:16Z"
    },
    "tags": [
      "community"
    ]
  },
  {
    "id": "code-assistant:2e67e6a3",
    "icon": null,
    "name": "code-assistant",
    "description": "A coding assistant MCP server that allows to explore a code-base and make changes to code. Should be used with trusted repos only (insufficient protection against prompt injections).",
    "repository": {
      "url": "https://github.com/stippi/code-assistant",
      "source": "github",
      "stars": 87,
      "lastUpdated": "2025-08-15T20:41:56Z"
    },
    "tags": [
      "community"
    ]
  },
  {
    "id": "code-context-provider-mcp:86d43be8",
    "icon": null,
    "name": "code-context-provider-mcp",
    "description": "MCP server that provides code context and analysis for AI assistants. Extracts directory structure and code symbols using WebAssembly Tree-sitter parsers without Native Dependencies.",
    "repository": {
      "url": "https://github.com/AB498/code-context-provider-mcp",
      "source": "github",
      "stars": 9,
      "lastUpdated": "2025-08-14T17:56:33Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "code-context-provider-mcp",
    "serverConfig": {
      "type": "stdio",
      "command": "npx",
      "args": [
        "-y",
        "code-context-provider-mcp@latest"
      ]
    }
  },
  {
    "id": "code-executor:7c138e50",
    "icon": null,
    "name": "code-executor",
    "description": "An MCP server that allows LLMs to execute Python code within a specified Conda environment.",
    "repository": {
      "url": "https://github.com/bazinga012/mcp_code_executor",
      "source": "github",
      "stars": 178,
      "lastUpdated": "2025-08-15T16:43:27Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "code-executor",
    "serverConfig": {
      "type": "stdio",
      "command": "docker",
      "args": [
        "run",
        "-i",
        "--rm",
        "mcp-code-executor"
      ]
    }
  },
  {
    "id": "code-sandbox-mcp:16bcfa0c",
    "icon": null,
    "name": "code-sandbox-mcp",
    "description": "An MCP server to create secure code sandbox environment for executing code within Docker containers.",
    "repository": {
      "url": "https://github.com/Automata-Labs-team/code-sandbox-mcp",
      "source": "github",
      "stars": 256,
      "lastUpdated": "2025-08-14T14:17:54Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "code-sandbox-mcp",
    "serverConfig": {
      "type": "stdio",
      "command": "/path/to/code-sandbox-mcp",
      "args": [],
      "env": {}
    }
  },
  {
    "id": "cognee-mcp:441429bc",
    "icon": null,
    "name": "cognee-mcp",
    "description": "GraphRAG memory server with customizable ingestion, data processing and search",
    "repository": {
      "url": "https://github.com/topoteretes/cognee/tree/main/cognee-mcp",
      "source": "github",
      "stars": 6727,
      "lastUpdated": "2025-08-16T22:19:06Z"
    },
    "tags": [
      "community"
    ]
  },
  {
    "id": "coin-api-mcp:3746065c",
    "icon": null,
    "name": "coin_api_mcp",
    "description": "Provides access to coinmarketcap cryptocurrency data.",
    "repository": {
      "url": "https://github.com/longmans/coin_api_mcp",
      "source": "github",
      "stars": 33,
      "lastUpdated": "2025-07-21T09:58:55Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "coin-api-mcp",
    "serverConfig": {
      "type": "stdio",
      "command": "python",
      "args": [
        "-m",
        "coin_api_mcp"
      ]
    }
  },
  {
    "id": "coinmarketcap:226eb63f",
    "icon": null,
    "name": "CoinMarketCap",
    "description": "Implements the complete CoinMarketCap API for accessing cryptocurrency market data, exchange information, and other blockchain-related metrics.",
    "repository": {
      "url": "https://github.com/shinzo-labs/coinmarketcap-mcp",
      "source": "github",
      "stars": 32,
      "lastUpdated": "2025-08-04T06:31:31Z"
    },
    "tags": [
      "community"
    ]
  },
  {
    "id": "commands:84862f58",
    "icon": null,
    "name": "commands",
    "description": "Run commands and scripts. Just like in a terminal.",
    "repository": {
      "url": "https://github.com/g0t4/mcp-server-commands",
      "source": "github",
      "stars": 189,
      "lastUpdated": "2025-08-16T23:31:53Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "commands",
    "serverConfig": {
      "type": "stdio",
      "command": "npx",
      "args": [
        "mcp-server-commands"
      ]
    }
  },
  {
    "id": "computer-control-mcp:2074bdc5",
    "icon": null,
    "name": "computer-control-mcp",
    "description": "MCP server that provides computer control capabilities, like mouse, keyboard, OCR, etc. using PyAutoGUI, RapidOCR, ONNXRuntime Without External Dependencies.",
    "repository": {
      "url": "https://github.com/AB498/computer-control-mcp",
      "source": "github",
      "stars": 31,
      "lastUpdated": "2025-08-15T01:55:54Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "computer-control-mcp",
    "serverConfig": {
      "type": "stdio",
      "command": "uvx",
      "args": [
        "computer-control-mcp@latest"
      ]
    }
  },
  {
    "id": "computer-use-remote-macos-use:4d2159a7",
    "icon": null,
    "name": "Computer-Use - Remote MacOS Use",
    "description": "Open-source out-of-the-box alternative to OpenAI Operator, providing a full desktop experience and optimized for using remote macOS machines as autonomous AI agents.",
    "repository": {
      "url": "https://github.com/baryhuang/mcp-remote-macos-use",
      "source": "github",
      "stars": 310,
      "lastUpdated": "2025-08-16T11:59:55Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "computer-use-remote-macos-use",
    "serverConfig": {
      "type": "stdio",
      "command": "docker",
      "args": [
        "run",
        "-i",
        "-e",
        "MACOS_USERNAME=your_macos_username",
        "-e",
        "MACOS_PASSWORD=your_macos_password",
        "-e",
        "MACOS_HOST=your_macos_hostname_or_ip",
        "--rm",
        "buryhuang/mcp-remote-macos-use:latest"
      ]
    }
  },
  {
    "id": "congress-gov-api:bbaa61c7",
    "icon": null,
    "name": "Congress.gov API",
    "description": "An MCP server to interact with real-time data from the Congress.gov API, which is the official API for the United States Congress.",
    "repository": {
      "url": "https://github.com/AshwinSundar/congress_gov_mcp",
      "source": "github",
      "stars": 12,
      "lastUpdated": "2025-08-12T01:37:19Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "congress-gov-api",
    "serverConfig": {
      "type": "stdio",
      "command": "/absolute_path/to/uv",
      "args": [
        "run",
        "/absolute_path_to/congress_gov_mcp/server.py"
      ]
    }
  },
  {
    "id": "consul-mcp:b309fbe3",
    "icon": null,
    "name": "consul-mcp",
    "description": "A consul MCP server for service management, health check and Key-Value Store",
    "repository": {
      "url": "https://github.com/kocierik/consul-mcp-server",
      "source": "github",
      "stars": 11,
      "lastUpdated": "2025-06-28T17:05:12Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "consul-mcp",
    "serverConfig": {
      "type": "stdio",
      "command": "node",
      "args": [
        "/ABSOLUTE/PATH/TO/PARENT/FOLDER/consul-mcp-server/build/index.js"
      ]
    }
  },
  {
    "id": "consult7:c8ecfe13",
    "icon": null,
    "name": "consult7",
    "description": "Analyze large codebases and document collections using high-context models via OpenRouter, OpenAI, or Google AI -- very useful, e.g., with Claude Code",
    "repository": {
      "url": "https://github.com/szeider/consult7",
      "source": "github",
      "stars": 200,
      "lastUpdated": "2025-08-16T16:12:22Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "consult7",
    "serverConfig": {
      "type": "stdio",
      "command": "uvx",
      "args": [
        "consult7",
        "openrouter",
        "your-api-key"
      ]
    }
  },
  {
    "id": "contentful-mcp:cdd56424",
    "icon": null,
    "name": "Contentful-mcp",
    "description": "Read, update, delete, publish content in your Contentful space(s) from this MCP Server.",
    "repository": {
      "url": "https://github.com/ivo-toby/contentful-mcp",
      "source": "github",
      "stars": 60,
      "lastUpdated": "2025-08-14T12:12:35Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "contentful-mcp",
    "serverConfig": {
      "type": "stdio",
      "command": "npx",
      "args": [
        "-y",
        "@ivotoby/contentful-management-mcp-server"
      ],
      "env": {
        "CONTENTFUL_MANAGEMENT_ACCESS_TOKEN": "<Your CMA token>"
      }
    }
  },
  {
    "id": "context-crystallizer:49d9ef5c",
    "icon": null,
    "name": "Context Crystallizer",
    "description": "AI Context Engineering tool that transforms large repositories into crystallized, AI-consumable knowledge through systematic analysis and optimization.",
    "repository": {
      "url": "https://github.com/hubertciebiada/context-crystallizer",
      "source": "github",
      "stars": 8,
      "lastUpdated": "2025-08-11T23:55:07Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "context-crystallizer",
    "serverConfig": {
      "type": "stdio",
      "command": "npx",
      "args": [
        "context-crystallizer"
      ]
    }
  },
  {
    "id": "context-portal:47466e0c",
    "icon": null,
    "name": "context-portal",
    "description": "Context Portal (ConPort) is a memory bank database system that effectively builds a project-specific knowledge graph, capturing entities like decisions, progress, and architecture, along with their relationships. This serves as a powerful backend for Retrieval Augmented Generation (RAG), enabling AI assistants to access precise, up-to-date project information.",
    "repository": {
      "url": "https://github.com/GreatScottyMac/context-portal",
      "source": "github",
      "stars": 585,
      "lastUpdated": "2025-08-17T01:32:24Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "context-portal",
    "serverConfig": {
      "type": "stdio",
      "command": "uvx",
      "args": [
        "--from",
        "context-portal-mcp",
        "conport-mcp",
        "--mode",
        "stdio",
        "--workspace_id",
        "${workspaceFolder}",
        "--log-file",
        "./logs/conport.log",
        "--log-level",
        "INFO"
      ]
    }
  },
  {
    "id": "cplusplus-mcp:e90c86ec",
    "icon": null,
    "name": "cplusplus-mcp",
    "description": "Semantic C++ code analysis using libclang. Enables Claude to understand C++ codebases through AST parsing rather than text search - find classes, navigate inheritance, trace function calls, and explore code relationships.",
    "repository": {
      "url": "https://github.com/kandrwmrtn/cplusplus_mcp",
      "source": "github",
      "stars": 1,
      "lastUpdated": "2025-08-13T13:39:29Z"
    },
    "tags": [
      "community"
    ]
  },
  {
    "id": "createveai-nexus:c50e4e7e",
    "icon": null,
    "name": "CreateveAI Nexus",
    "description": "Open-Source Bridge Between AI Agents and Enterprise Systems, with simple custom API plug-in capabilities (including close compatibility with ComfyUI nodes), support for Copilot Studio's MCP agent integations, and support for Azure deployment in secure environments with secrets stored in Azure Key Vault, as well as straightforward on-premises deployment.",
    "repository": {
      "url": "https://github.com/spgoodman/createveai-nexus-server",
      "source": "github",
      "stars": 2,
      "lastUpdated": "2025-07-23T23:45:12Z"
    },
    "tags": [
      "community"
    ]
  },
  {
    "id": "creatify:3eacee5f",
    "icon": null,
    "name": "Creatify",
    "description": "MCP Server that exposes Creatify AI API capabilities for AI video generation, including avatar videos, URL-to-video conversion, text-to-speech, and AI-powered editing tools.",
    "repository": {
      "url": "https://github.com/TSavo/creatify-mcp",
      "source": "github",
      "stars": 7,
      "lastUpdated": "2025-08-06T15:25:49Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "creatify",
    "serverConfig": {
      "type": "stdio",
      "command": "creatify-mcp",
      "env": {
        "CREATIFY_API_ID": "your-api-id",
        "CREATIFY_API_KEY": "your-api-key"
      }
    }
  },
  {
    "id": "cronlytic:8979a72f",
    "icon": null,
    "name": "Cronlytic",
    "description": "Create CRUD operations for serverless cron jobs through Cronlytic MCP Server",
    "repository": {
      "url": "https://github.com/Cronlytic/cronlytic-mcp-server",
      "source": "github",
      "stars": 0,
      "lastUpdated": "2025-06-07T17:39:35Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "cronlytic",
    "serverConfig": {
      "type": "stdio",
      "command": "python",
      "args": [
        "-m",
        "cronlytic_mcp_server.server"
      ],
      "env": {
        "CRONLYTIC_API_KEY": "your_api_key_here",
        "CRONLYTIC_USER_ID": "your_user_id_here"
      }
    }
  },
  {
    "id": "crypto-feargreed-mcp:2e1ddee1",
    "icon": null,
    "name": "crypto-feargreed-mcp",
    "description": "Providing real-time and historical Crypto Fear & Greed Index data.",
    "repository": {
      "url": "https://github.com/kukapay/crypto-feargreed-mcp",
      "source": "github",
      "stars": 37,
      "lastUpdated": "2025-08-13T01:20:33Z"
    },
    "tags": [
      "community"
    ]
  },
  {
    "id": "crypto-indicators-mcp:55d1441d",
    "icon": null,
    "name": "crypto-indicators-mcp",
    "description": "An MCP server providing a range of cryptocurrency technical analysis indicators and strategies.",
    "repository": {
      "url": "https://github.com/kukapay/crypto-indicators-mcp",
      "source": "github",
      "stars": 67,
      "lastUpdated": "2025-08-16T04:14:17Z"
    },
    "tags": [
      "community"
    ]
  },
  {
    "id": "crypto-sentiment-mcp:bf6ccf10",
    "icon": null,
    "name": "crypto-sentiment-mcp",
    "description": "An MCP server that delivers cryptocurrency sentiment analysis to AI agents.",
    "repository": {
      "url": "https://github.com/kukapay/crypto-sentiment-mcp",
      "source": "github",
      "stars": 29,
      "lastUpdated": "2025-08-03T17:22:25Z"
    },
    "tags": [
      "community"
    ]
  },
  {
    "id": "cryptopanic-mcp-server:df993c10",
    "icon": null,
    "name": "cryptopanic-mcp-server",
    "description": "Providing latest cryptocurrency news to AI agents, powered by CryptoPanic.",
    "repository": {
      "url": "https://github.com/kukapay/cryptopanic-mcp-server",
      "source": "github",
      "stars": 50,
      "lastUpdated": "2025-08-15T12:07:18Z"
    },
    "tags": [
      "community"
    ]
  },
  {
    "id": "csv-editor:69552197",
    "icon": null,
    "name": "CSV Editor",
    "description": "Comprehensive CSV processing with 40+ operations for data manipulation, analysis, and validation. Features auto-save, undo/redo, and handles GB+ files. Built with FastMCP & Pandas.",
    "repository": {
      "url": "https://github.com/santoshray02/csv-editor",
      "source": "github",
      "stars": 2,
      "lastUpdated": "2025-08-16T02:07:42Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "csv-editor",
    "serverConfig": {
      "type": "stdio",
      "command": "uv",
      "args": [
        "tool",
        "run",
        "csv-editor"
      ],
      "env": {
        "CSV_MAX_FILE_SIZE": "1073741824"
      }
    }
  },
  {
    "id": "cursor-mcp-installer:77b4e75c",
    "icon": null,
    "name": "Cursor MCP Installer",
    "description": "A tool to easily install and configure other MCP servers within Cursor IDE, with support for npm packages, local directories, and Git repositories.",
    "repository": {
      "url": "https://github.com/matthewdcage/cursor-mcp-installer",
      "source": "github",
      "stars": 68,
      "lastUpdated": "2025-08-15T14:35:21Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "cursor-mcp-installer",
    "serverConfig": {
      "type": "stdio",
      "command": "npx",
      "args": [
        "cursor-mcp-installer-free@0.1.3",
        "index.mjs"
      ]
    }
  },
  {
    "id": "cve-intelligence-server:afc75be8",
    "icon": null,
    "name": "CVE Intelligence Server",
    "description": "",
    "repository": {
      "url": "https://github.com/gnlds/mcp-cve-intelligence-server-lite",
      "source": "github",
      "stars": 2,
      "lastUpdated": "2025-08-16T02:02:56Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "cve-intelligence-server",
    "serverConfig": {
      "type": "stdio",
      "command": "npx",
      "args": [
        "-y",
        "mcp-cve-intelligence-server-lite@latest"
      ],
      "env": {
        "NVD_API_KEY": "your-optional-nvd-api-key",
        "GITHUB_TOKEN": "your-optional-github-token"
      }
    }
  },
  {
    "id": "dagster:50853b57",
    "icon": null,
    "name": "Dagster",
    "description": "An MCP server to easily build data pipelines using Dagster.",
    "repository": {
      "url": "https://github.com/dagster-io/dagster/tree/master/python_modules/libraries/dagster-dg-cli",
      "source": "github",
      "stars": 13801,
      "lastUpdated": "2025-08-17T02:42:01Z"
    },
    "tags": [
      "community"
    ]
  },
  {
    "id": "dappier:565efae4",
    "icon": null,
    "name": "Dappier",
    "description": "Connect LLMs to real-time, rights-cleared, proprietary data from trusted sources. Access specialized models for Real-Time Web Search, News, Sports, Financial Data, Crypto, and premium publisher content. Explore data models at marketplace.dappier.com.",
    "repository": {
      "url": "https://github.com/DappierAI/dappier-mcp",
      "source": "github",
      "stars": 26,
      "lastUpdated": "2025-08-14T02:43:58Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "dappier",
    "serverConfig": {
      "type": "stdio",
      "command": "uvx",
      "args": [
        "dappier-mcp"
      ],
      "env": {
        "DAPPIER_API_KEY": "YOUR_API_KEY_HERE"
      }
    }
  },
  {
    "id": "data-exploration:903ab415",
    "icon": null,
    "name": "Data Exploration",
    "description": "MCP server for autonomous data exploration on .csv-based datasets, providing intelligent insights with minimal effort. NOTE: Will execute arbitrary Python code on your machine, please use with caution!",
    "repository": {
      "url": "https://github.com/reading-plus-ai/mcp-server-data-exploration",
      "source": "github",
      "stars": 465,
      "lastUpdated": "2025-08-16T22:20:39Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "data-exploration",
    "serverConfig": {
      "type": "stdio",
      "command": "uvx",
      "args": [
        "mcp-server-ds"
      ]
    }
  },
  {
    "id": "databricks:fe464e2a",
    "icon": null,
    "name": "Databricks",
    "description": "Allows LLMs to run SQL queries, list and get details of jobs executions in a Databricks account.",
    "repository": {
      "url": "https://github.com/JordiNeil/mcp-databricks-server",
      "source": "github",
      "stars": 40,
      "lastUpdated": "2025-08-11T13:40:34Z"
    },
    "tags": [
      "community"
    ]
  },
  {
    "id": "databricks-genie:aa4b4dd6",
    "icon": null,
    "name": "Databricks Genie",
    "description": "A server that connects to the Databricks Genie, allowing LLMs to ask natural language questions, run SQL queries, and interact with Databricks conversational agents.",
    "repository": {
      "url": "https://github.com/yashshingvi/databricks-genie-MCP",
      "source": "github",
      "stars": 8,
      "lastUpdated": "2025-08-01T21:27:18Z"
    },
    "tags": [
      "community"
    ]
  },
  {
    "id": "databricks-smart-sql:77b5dc2e",
    "icon": null,
    "name": "Databricks Smart SQL",
    "description": "Leveraging Databricks Unity Catalog metadata, perform smart efficient SQL queries to solve Ad-hoc queries and explore data.",
    "repository": {
      "url": "https://github.com/RafaelCartenet/mcp-databricks-server",
      "source": "github",
      "stars": 19,
      "lastUpdated": "2025-08-09T02:21:52Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "databricks-smart-sql",
    "serverConfig": {
      "type": "stdio",
      "command": "uv",
      "args": [
        "--directory",
        "/path/to/your/mcp-databricks-server",
        "run",
        "main.py"
      ]
    }
  },
  {
    "id": "datadog:b3fccd49",
    "icon": null,
    "name": "Datadog",
    "description": "Datadog MCP Server for application tracing, monitoring, dashboard, incidents queries built on official datadog api.",
    "repository": {
      "url": "https://github.com/GeLi2001/datadog-mcp-server",
      "source": "github",
      "stars": 54,
      "lastUpdated": "2025-08-12T03:10:59Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "datadog",
    "serverConfig": {
      "type": "stdio",
      "command": "npx",
      "args": [
        "datadog-mcp-server",
        "--apiKey",
        "<YOUR_API_KEY>",
        "--appKey",
        "<YOUR_APP_KEY>",
        "--site",
        "<YOUR_DD_SITE>(e.g us5.datadoghq.com)"
      ]
    }
  },
  {
    "id": "dataset-viewer:137e1e2f",
    "icon": null,
    "name": "Dataset Viewer",
    "description": "Browse and analyze Hugging Face datasets with features like search, filtering, statistics, and data export",
    "repository": {
      "url": "https://github.com/privetin/dataset-viewer",
      "source": "github",
      "stars": 27,
      "lastUpdated": "2025-08-09T12:35:09Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "dataset-viewer",
    "serverConfig": {
      "type": "stdio",
      "command": "uv",
      "args": [
        "--directory",
        "parent_to_repo/dataset-viewer",
        "run",
        "dataset-viewer"
      ]
    }
  },
  {
    "id": "dataworks:2096f6b9",
    "icon": null,
    "name": "DataWorks",
    "description": "A Model Context Protocol (MCP) server that provides tools for AI, allowing it to interact with the DataWorks Open API through a standardized interface. This implementation is based on the Alibaba Cloud Open API and enables AI agents to perform cloud resources operations seamlessly.",
    "repository": {
      "url": "https://github.com/aliyun/alibabacloud-dataworks-mcp-server",
      "source": "github",
      "stars": 21,
      "lastUpdated": "2025-08-04T18:20:06Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "dataworks",
    "serverConfig": {
      "type": "stdio",
      "command": "npx",
      "args": [
        "alibabacloud-dataworks-mcp-server"
      ],
      "env": {
        "REGION": "your_dataworks_open_api_region_id_here",
        "ALIBABA_CLOUD_ACCESS_KEY_ID": "your_alibaba_cloud_access_key_id",
        "ALIBABA_CLOUD_ACCESS_KEY_SECRET": "your_alibaba_cloud_access_key_secret",
        "TOOL_CATEGORIES": "optional_your_tool_categories_here_ex_UTILS",
        "TOOL_NAMES": "optional_your_tool_names_here_ex_ListProjects"
      }
    }
  },
  {
    "id": "davinci-resolve:72499ec5",
    "icon": null,
    "name": "DaVinci Resolve",
    "description": "MCP server integration for DaVinci Resolve providing powerful tools for video editing, color grading, media management, and project control.",
    "repository": {
      "url": "https://github.com/samuelgursky/davinci-resolve-mcp",
      "source": "github",
      "stars": 279,
      "lastUpdated": "2025-08-15T10:38:22Z"
    },
    "tags": [
      "community"
    ]
  },
  {
    "id": "dbhub:ba0df679",
    "icon": null,
    "name": "DBHub",
    "description": "Universal database MCP server connecting to MySQL, MariaDB, PostgreSQL, and SQL Server.",
    "repository": {
      "url": "https://github.com/bytebase/dbhub/",
      "source": "github",
      "stars": 1135,
      "lastUpdated": "2025-08-16T19:45:02Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "dbhub",
    "serverConfig": {
      "type": "stdio",
      "command": "docker",
      "args": [
        "run",
        "-i",
        "--rm",
        "bytebase/dbhub",
        "--transport",
        "stdio",
        "--dsn",
        "postgres://user:password@host.docker.internal:5432/dbname?sslmode=disable"
      ]
    }
  },
  {
    "id": "deebo:105222df",
    "icon": null,
    "name": "Deebo",
    "description": "",
    "repository": {
      "url": "https://github.com/snagasuri/deebo-prototype",
      "source": "github",
      "stars": 624,
      "lastUpdated": "2025-08-16T02:01:02Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "deebo",
    "serverConfig": {
      "type": "stdio",
      "command": "node",
      "args": [
        "--experimental-specifier-resolution=node",
        "--experimental-modules",
        "/Users/[your-name]/.deebo/guide-server.js"
      ],
      "env": {}
    }
  },
  {
    "id": "deep-research:02764f5d",
    "icon": null,
    "name": "Deep Research",
    "description": "Lightweight MCP server offering Grok/OpenAI/Gemini/Perplexity-style automated deep research exploration and structured reporting.",
    "repository": {
      "url": "https://github.com/reading-plus-ai/mcp-server-deep-research",
      "source": "github",
      "stars": 161,
      "lastUpdated": "2025-08-16T22:44:57Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "deep-research",
    "serverConfig": {
      "type": "stdio",
      "command": "uvx",
      "args": [
        "mcp-server-deep-research"
      ]
    }
  },
  {
    "id": "deepseek-mcp-server:1423cfea",
    "icon": null,
    "name": "DeepSeek MCP Server",
    "description": "Model Context Protocol server integrating DeepSeek's advanced language models, in addition to other useful API endpoints",
    "repository": {
      "url": "https://github.com/DMontgomery40/deepseek-mcp-server",
      "source": "github",
      "stars": 264,
      "lastUpdated": "2025-08-16T08:57:00Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "deepseek-mcp-server",
    "serverConfig": {
      "type": "stdio",
      "command": "npx",
      "args": [
        "-y",
        "deepseek-mcp-server"
      ],
      "env": {
        "DEEPSEEK_API_KEY": "your-api-key"
      }
    }
  },
  {
    "id": "deepseek-thinker-mcp:99529368",
    "icon": null,
    "name": "deepseek-thinker-mcp",
    "description": "A MCP (Model Context Protocol) provider Deepseek reasoning content to MCP-enabled AI Clients, like Claude Desktop. Supports access to Deepseek's thought processes from the Deepseek API service or from a local Ollama server.",
    "repository": {
      "url": "https://github.com/ruixingshi/deepseek-thinker-mcp",
      "source": "github",
      "stars": 61,
      "lastUpdated": "2025-08-15T22:28:56Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "deepseek-thinker-mcp",
    "serverConfig": {
      "type": "stdio",
      "command": "npx",
      "args": [
        "-y",
        "deepseek-thinker-mcp"
      ],
      "env": {
        "API_KEY": "<Your API Key>",
        "BASE_URL": "<Your Base URL>"
      }
    }
  },
  {
    "id": "deepseek-r1:6e274dd1",
    "icon": null,
    "name": "Deepseek_R1",
    "description": "A Model Context Protocol (MCP) server implementation connecting Claude Desktop with DeepSeek's language models (R1/V3)",
    "repository": {
      "url": "https://github.com/66julienmartin/MCP-server-Deepseek_R1",
      "source": "github",
      "stars": 65,
      "lastUpdated": "2025-08-12T20:47:42Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "deepseek-r1",
    "serverConfig": {
      "type": "stdio",
      "command": "node",
      "args": [
        "/path/to/deepseek-r1-mcp/build/index.js"
      ],
      "env": {
        "DEEPSEEK_API_KEY": "your-api-key"
      }
    }
  },
  {
    "id": "deploy-mcp:7b8b43cb",
    "icon": null,
    "name": "deploy-mcp",
    "description": "Universal deployment tracker for AI assistants with live status badges and deployment monitoring.",
    "repository": {
      "url": "https://github.com/alexpota/deploy-mcp",
      "source": "github",
      "stars": 0,
      "lastUpdated": "2025-08-15T13:50:36Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "deploy-mcp",
    "serverConfig": {
      "type": "stdio",
      "command": "npx",
      "args": [
        "-y",
        "deploy-mcp"
      ],
      "env": {
        "VERCEL_TOKEN": "your-vercel-token",
        "NETLIFY_TOKEN": "your-netlify-token"
      }
    }
  },
  {
    "id": "descope:51d908fe",
    "icon": null,
    "name": "Descope",
    "description": "An MCP server to integrate with Descope to search audit logs, manage users, and more.",
    "repository": {
      "url": "https://github.com/descope-sample-apps/descope-mcp-server",
      "source": "github",
      "stars": 18,
      "lastUpdated": "2025-07-30T20:14:55Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "descope",
    "serverConfig": {
      "type": "stdio",
      "command": "node",
      "args": [
        "/path/to/descope-mcp-server/build/index.js"
      ],
      "env": {
        "DESCOPE_PROJECT_ID": "your-descope-project-id-here",
        "DESCOPE_MANAGEMENT_KEY": "your-descope-management-key-here"
      }
    }
  },
  {
    "id": "desktopcommander:b229581a",
    "icon": null,
    "name": "DesktopCommander",
    "description": "Let AI edit and manage files on your computer, run terminal commands, and connect to remote servers via SSH - all powered by one of the most popular local MCP servers.",
    "repository": {
      "url": "https://github.com/wonderwhy-er/DesktopCommanderMCP",
      "source": "github",
      "stars": 4227,
      "lastUpdated": "2025-08-16T22:38:48Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "desktopcommander",
    "serverConfig": {
      "type": "stdio",
      "command": "npx",
      "args": [
        "-y",
        "@wonderwhy-er/desktop-commander"
      ]
    }
  },
  {
    "id": "devcontainer:ac2664c1",
    "icon": null,
    "name": "Devcontainer",
    "description": "An MCP server for devcontainer to generate and configure development containers directly from devcontainer configuration files.",
    "repository": {
      "url": "https://github.com/AI-QL/mcp-devcontainers",
      "source": "github",
      "stars": 0,
      "lastUpdated": "2025-08-13T13:41:58Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "devcontainer",
    "serverConfig": {
      "type": "stdio",
      "command": "npx",
      "args": [
        "mcp-remote",
        "https://ominous-halibut-7vvq7v56vgq6hr5p9-3001.app.github.dev/mcp"
      ]
    }
  },
  {
    "id": "devdb:db587cd7",
    "icon": null,
    "name": "DevDb",
    "description": "An MCP server that runs right inside the IDE, for connecting to MySQL, Postgres, SQLite, and MSSQL databases.",
    "repository": {
      "url": "https://github.com/damms005/devdb-vscode?tab=readme-ov-file#mcp-configuration",
      "source": "github",
      "stars": 1040,
      "lastUpdated": "2025-08-15T08:47:23Z"
    },
    "tags": [
      "community"
    ]
  },
  {
    "id": "devops-mcp:5359d0a8",
    "icon": null,
    "name": "DevOps-MCP",
    "description": "Dynamic Azure DevOps MCP server with directory-based authentication switching, supporting work items, repositories, builds, pipelines, and multi-project management with local configuration files.",
    "repository": {
      "url": "https://github.com/wangkanai/devops-mcp",
      "source": "github",
      "stars": 4,
      "lastUpdated": "2025-08-16T04:34:15Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "devops-mcp",
    "serverConfig": {
      "type": "stdio",
      "command": "npx",
      "args": [
        "-y",
        "@wangkanai/devops-mcp"
      ]
    }
  },
  {
    "id": "dify:27025bc5",
    "icon": null,
    "name": "Dify",
    "description": "A simple implementation of an MCP server for dify workflows.",
    "repository": {
      "url": "https://github.com/YanxingLiu/dify-mcp-server",
      "source": "github",
      "stars": 252,
      "lastUpdated": "2025-08-14T21:21:19Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "dify",
    "serverConfig": {
      "type": "stdio",
      "command": "uvx",
      "args": [
        "--from",
        "git+https://github.com/YanxingLiu/dify-mcp-server",
        "dify_mcp_server"
      ],
      "env": {
        "DIFY_BASE_URL": "https://cloud.dify.ai/v1",
        "DIFY_APP_SKS": "app-sk1,app-sk2"
      }
    }
  },
  {
    "id": "discogs:6f9610db",
    "icon": null,
    "name": "Discogs",
    "description": "An MCP server that connects to the Discogs API for interacting with your music collection.",
    "repository": {
      "url": "https://github.com/cswkim/discogs-mcp-server",
      "source": "github",
      "stars": 42,
      "lastUpdated": "2025-08-15T23:30:02Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "discogs",
    "serverConfig": {
      "type": "stdio",
      "command": "npx",
      "args": [
        "-y",
        "discogs-mcp-server"
      ],
      "env": {
        "DISCOGS_PERSONAL_ACCESS_TOKEN": "<YOUR_TOKEN>"
      }
    }
  },
  {
    "id": "discord:cf4b51bb",
    "icon": null,
    "name": "Discord",
    "description": "An MCP server to connect to Discord guilds through a bot and read and write messages in channels",
    "repository": {
      "url": "https://github.com/v-3/discordmcp",
      "source": "github",
      "stars": 126,
      "lastUpdated": "2025-08-16T18:43:44Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "discord",
    "serverConfig": {
      "type": "stdio",
      "command": "node",
      "args": [
        "path/to/discordmcp/build/index.js"
      ],
      "env": {
        "DISCORD_TOKEN": "your_discord_bot_token_here"
      }
    }
  },
  {
    "id": "discord:b711210b",
    "icon": null,
    "name": "Discord",
    "description": "An MCP server, which connects to Discord through a bot, and provides comprehensive integration with Discord.",
    "repository": {
      "url": "https://github.com/SaseQ/discord-mcp",
      "source": "github",
      "stars": 45,
      "lastUpdated": "2025-08-16T10:31:05Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "discord",
    "serverConfig": {
      "type": "stdio",
      "command": "docker",
      "args": [
        "run",
        "--rm",
        "-i",
        "-e",
        "DISCORD_TOKEN=<YOUR_DISCORD_BOT_TOKEN>",
        "-e",
        "DISCORD_GUILD_ID=<OPTIONAL_DEFAULT_SERVER_ID>",
        "saseq/discord-mcp:latest"
      ]
    }
  },
  {
    "id": "discord:60e7749e",
    "icon": null,
    "name": "Discord",
    "description": "For Discord API integration by Klavis AI",
    "repository": {
      "url": "https://github.com/Klavis-AI/klavis/tree/main/mcp_servers/discord",
      "source": "github",
      "stars": 3955,
      "lastUpdated": "2025-08-17T02:22:39Z"
    },
    "tags": [
      "community"
    ]
  },
  {
    "id": "discourse:805a8a70",
    "icon": null,
    "name": "Discourse",
    "description": "An MCP server to search Discourse posts on a Discourse forum.",
    "repository": {
      "url": "https://github.com/AshDevFr/discourse-mcp-server",
      "source": "github",
      "stars": 5,
      "lastUpdated": "2025-07-08T03:43:36Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "discourse",
    "serverConfig": {
      "type": "stdio",
      "command": "npx",
      "args": [
        "-y",
        "@ashdev/discourse-mcp-server"
      ],
      "env": {
        "DISCOURSE_API_URL": "https://try.discourse.org",
        "DISCOURSE_API_KEY": "1234",
        "DISCOURSE_API_USERNAME": "ash"
      }
    }
  },
  {
    "id": "docker:5acc0581",
    "icon": null,
    "name": "Docker",
    "description": "Integrate with Docker to manage containers, images, volumes, and networks.",
    "repository": {
      "url": "https://github.com/ckreiling/mcp-server-docker",
      "source": "github",
      "stars": 567,
      "lastUpdated": "2025-08-16T18:30:29Z"
    },
    "tags": [
      "community"
    ]
  },
  {
    "id": "docker:50768c1a",
    "icon": null,
    "name": "Docker",
    "description": "Docker MCP Server provides advanced, unified Docker management via CLI and MCP workflows, supporting containers, images, volumes, networks, and orchestration.",
    "repository": {
      "url": "https://github.com/0xshariq/docker-mcp-server",
      "source": "github",
      "stars": 1,
      "lastUpdated": "2025-08-10T11:39:49Z"
    },
    "tags": [
      "community"
    ]
  },
  {
    "id": "docs:bb88b118",
    "icon": null,
    "name": "Docs",
    "description": "Enable documentation access for the AI agent, supporting llms.txt and other remote or local files.",
    "repository": {
      "url": "https://github.com/da1z/docsmcp",
      "source": "github",
      "stars": 3,
      "lastUpdated": "2025-08-11T15:05:12Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "docs",
    "serverConfig": {
      "type": "stdio",
      "command": "npx",
      "args": [
        "-y",
        "docsmcp",
        "'--source=Model Context Protocol (MCP)|https://modelcontextprotocol.io/llms-full.txt'"
      ]
    }
  },
  {
    "id": "docy:c52a56a0",
    "icon": null,
    "name": "Docy",
    "description": "Docy gives your AI direct access to the technical documentation it needs, right when it needs it. No more outdated information, broken links, or rate limits - just accurate, real-time documentation access for more precise coding assistance.",
    "repository": {
      "url": "https://github.com/oborchers/mcp-server-docy",
      "source": "github",
      "stars": 11,
      "lastUpdated": "2025-08-13T01:14:37Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "docy",
    "serverConfig": {
      "type": "stdio",
      "command": "uvx",
      "args": [
        "mcp-server-docy"
      ],
      "env": {
        "DOCY_DOCUMENTATION_URLS": "https://docs.crawl4ai.com/,https://react.dev/"
      }
    }
  },
  {
    "id": "dodo-payments:01580844",
    "icon": null,
    "name": "Dodo Payments",
    "description": "Enables AI agents to securely perform payment operations via a lightweight, serverless-compatible interface to the Dodo Payments API.",
    "repository": {
      "url": "https://github.com/dodopayments/dodopayments-node/tree/main/packages/mcp-server",
      "source": "github",
      "stars": 22,
      "lastUpdated": "2025-08-13T09:21:12Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "dodo-payments",
    "serverConfig": {
      "type": "stdio",
      "command": "npx",
      "args": [
        "-y",
        "dodopayments-mcp",
        "--client=claude",
        "--tools=dynamic"
      ],
      "env": {
        "DODO_PAYMENTS_API_KEY": "My Bearer Token",
        "DODO_PAYMENTS_ENVIRONMENT": "live_mode"
      }
    }
  },
  {
    "id": "domain-tools:02ec5061",
    "icon": null,
    "name": "Domain Tools",
    "description": "A Model Context Protocol (MCP) server for comprehensive domain analysis: WHOIS, DNS records, and DNS health checks.",
    "repository": {
      "url": "https://github.com/deshabhishek007/domain-tools-mcp-server",
      "source": "github",
      "stars": 2,
      "lastUpdated": "2025-07-28T10:30:14Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "domain-tools",
    "serverConfig": {
      "type": "stdio",
      "command": "python",
      "args": [
        "/path/to/domain_tools_server.py"
      ],
      "env": {}
    }
  },
  {
    "id": "dplp:aeff5227",
    "icon": null,
    "name": "DPLP",
    "description": "Searches the DBLP computer science bibliography database.",
    "repository": {
      "url": "https://github.com/szeider/mcp-dblp",
      "source": "github",
      "stars": 11,
      "lastUpdated": "2025-07-27T07:21:17Z"
    },
    "tags": [
      "community"
    ]
  },
  {
    "id": "druid-mcp-server:5fc50e30",
    "icon": null,
    "name": "Druid MCP Server",
    "description": "STDIO/SEE MCP Server for Apache Druid by iunera that provides extensive tools, resources, and prompts for managing and analyzing Druid clusters.",
    "repository": {
      "url": "https://github.com/iunera/druid-mcp-server",
      "source": "github",
      "stars": 3,
      "lastUpdated": "2025-07-29T13:03:56Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "druid-mcp-server",
    "serverConfig": {
      "type": "stdio",
      "command": "java",
      "args": [
        "-Dspring.ai.mcp.server.stdio=true",
        "-Dspring.main.web-application-type=none",
        "-Dlogging.pattern.console=",
        "-jar",
        "target/druid-mcp-server-1.0.0.jar"
      ],
      "env": {
        "DRUID_ROUTER_URL": "https://your-druid-cluster.example.com:8888",
        "DRUID_AUTH_USERNAME": "your-username",
        "DRUID_AUTH_PASSWORD": "your-password",
        "DRUID_SSL_ENABLED": "true",
        "DRUID_SSL_SKIP_VERIFICATION": "false"
      }
    }
  },
  {
    "id": "drupal:b68e6640",
    "icon": null,
    "name": "Drupal",
    "description": "Server for interacting with Drupal using STDIO transport layer.",
    "repository": {
      "url": "https://github.com/Omedia/mcp-server-drupal",
      "source": "github",
      "stars": 45,
      "lastUpdated": "2025-08-14T08:37:56Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "drupal",
    "serverConfig": {
      "type": "stdio",
      "command": "docker",
      "args": [
        "run",
        "-i",
        "--rm",
        "ghcr.io/omedia/mcp-server-drupal",
        "--drupal-url=__DRUPAL_BASE_URL_"
      ],
      "env": {}
    }
  },
  {
    "id": "dune-analytics-mcp:53dda6d1",
    "icon": null,
    "name": "dune-analytics-mcp",
    "description": "A mcp server that bridges Dune Analytics data to AI agents.",
    "repository": {
      "url": "https://github.com/kukapay/dune-analytics-mcp",
      "source": "github",
      "stars": 23,
      "lastUpdated": "2025-08-11T20:21:39Z"
    },
    "tags": [
      "community"
    ]
  },
  {
    "id": "dynamodb-toolbox:91058db0",
    "icon": null,
    "name": "DynamoDB-Toolbox",
    "description": "Leverages your Schemas and Access Patterns to interact with your DynamoDB Database using natural language.",
    "repository": {
      "url": "https://www.dynamodbtoolbox.com/docs/databases/actions/mcp-toolkit",
      "source": "other"
    },
    "tags": [
      "community"
    ]
  },
  {
    "id": "ebook-mcp:c6271f6f",
    "icon": null,
    "name": "eBook-mcp",
    "description": "A lightweight MCP server that allows LLMs to read and interact with your personal PDF and EPUB ebooks. Ideal for building AI reading assistants or chat-based ebook interfaces.",
    "repository": {
      "url": "https://github.com/onebirdrocks/ebook-mcp",
      "source": "github",
      "stars": 83,
      "lastUpdated": "2025-08-16T13:28:10Z"
    },
    "tags": [
      "community"
    ]
  },
  {
    "id": "echarts-mcp-server:dde85a1e",
    "icon": null,
    "name": "ECharts MCP Server",
    "description": "Generate visual charts using ECharts with AI MCP dynamically, used for chart generation and data analysis.",
    "repository": {
      "url": "https://github.com/hustcc/mcp-echarts",
      "source": "github",
      "stars": 57,
      "lastUpdated": "2025-08-16T23:28:47Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "echarts-mcp-server",
    "serverConfig": {
      "type": "stdio",
      "command": "npx",
      "args": [
        "-y",
        "mcp-echarts"
      ]
    }
  },
  {
    "id": "edgeone-pages-mcp:cdb2998b",
    "icon": null,
    "name": "EdgeOne Pages MCP",
    "description": "An MCP service for deploying HTML content to EdgeOne Pages and obtaining a publicly accessible URL.",
    "repository": {
      "url": "https://github.com/TencentEdgeOne/edgeone-pages-mcp",
      "source": "github",
      "stars": 258,
      "lastUpdated": "2025-08-17T02:02:08Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "edgeone-pages-mcp",
    "serverConfig": {
      "type": "stdio",
      "command": "npx",
      "args": [
        "edgeone-pages-mcp"
      ],
      "env": {
        "EDGEONE_PAGES_API_TOKEN": "",
        "EDGEONE_PAGES_PROJECT_NAME": ""
      }
    }
  },
  {
    "id": "edwin:1dd3e25f",
    "icon": null,
    "name": "Edwin",
    "description": "MCP server for edwin SDK - enabling AI agents to interact with DeFi protocols across EVM, Solana and other blockchains.",
    "repository": {
      "url": "https://github.com/edwin-finance/edwin/tree/main/examples/mcp-server",
      "source": "github",
      "stars": 58,
      "lastUpdated": "2025-08-15T13:19:37Z"
    },
    "tags": [
      "community"
    ]
  },
  {
    "id": "eechat:d2524675",
    "icon": null,
    "name": "eechat",
    "description": "An open-source, cross-platform desktop application that seamlessly connects with MCP servers, across Linux, macOS, and Windows.",
    "repository": {
      "url": "https://github.com/Lucassssss/eechat",
      "source": "github",
      "stars": 253,
      "lastUpdated": "2025-08-17T01:43:00Z"
    },
    "tags": [
      "community"
    ]
  },
  {
    "id": "elasticsearch:61837887",
    "icon": null,
    "name": "Elasticsearch",
    "description": "MCP server implementation that provides Elasticsearch interaction.",
    "repository": {
      "url": "https://github.com/cr7258/elasticsearch-mcp-server",
      "source": "github",
      "stars": 192,
      "lastUpdated": "2025-08-16T13:24:47Z"
    },
    "tags": [
      "community"
    ]
  },
  {
    "id": "elevenlabs:a7d033d0",
    "icon": null,
    "name": "ElevenLabs",
    "description": "A server that integrates with ElevenLabs text-to-speech API capable of generating full voiceovers with multiple voices.",
    "repository": {
      "url": "https://github.com/mamertofabian/elevenlabs-mcp-server",
      "source": "github",
      "stars": 107,
      "lastUpdated": "2025-08-13T03:54:10Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "elevenlabs",
    "serverConfig": {
      "type": "stdio",
      "command": "uvx",
      "args": [
        "elevenlabs-mcp-server"
      ],
      "env": {
        "ELEVENLABS_API_KEY": "your-api-key",
        "ELEVENLABS_VOICE_ID": "your-voice-id",
        "ELEVENLABS_MODEL_ID": "eleven_flash_v2",
        "ELEVENLABS_STABILITY": "0.5",
        "ELEVENLABS_SIMILARITY_BOOST": "0.75",
        "ELEVENLABS_STYLE": "0.1",
        "ELEVENLABS_OUTPUT_DIR": "output"
      }
    }
  },
  {
    "id": "email:cac48b22",
    "icon": null,
    "name": "Email",
    "description": "This server enables users to send emails through various email providers, including Gmail, Outlook, Yahoo, Sina, Sohu, 126, 163, and QQ Mail. It also supports attaching files from specified directories, making it easy to upload attachments along with the email content.",
    "repository": {
      "url": "https://github.com/Shy2593666979/mcp-server-email",
      "source": "github",
      "stars": 50,
      "lastUpdated": "2025-08-13T22:51:58Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "email",
    "serverConfig": {
      "type": "stdio",
      "command": "D:\\conda\\envs\\mcp\\python.exe",
      "args": [
        "C:\\Users\\YourUserName\\Desktop\\servers\\src\\email\\src\\mcp_server_email",
        "--dir",
        "C:\\Users\\YourUserName\\Desktop"
      ],
      "env": {
        "SENDER": "2593666979q@gmail.com",
        "PASSWORD": "tuogk......."
      }
    }
  },
  {
    "id": "email-smtp:58b78737",
    "icon": null,
    "name": "Email SMTP",
    "description": "A simple MCP server that lets your AI agent send emails and attach files through SMTP.",
    "repository": {
      "url": "https://github.com/egyptianego17/email-mcp-server",
      "source": "github",
      "stars": 15,
      "lastUpdated": "2025-08-07T05:39:23Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "email-smtp",
    "serverConfig": {
      "type": "stdio",
      "command": "uv",
      "args": [
        "--directory",
        "path/to/the/app/email-mcp-server",
        "run",
        "main.py"
      ],
      "env": {
        "SMTP_HOST": "",
        "SMTP_PORT": "",
        "SMTP_SECURE": "",
        "SMTP_USER": "",
        "SMTP_FROM": "",
        "SMTP_PASS": ""
      }
    }
  },
  {
    "id": "enhance-prompt:dee2ebbb",
    "icon": null,
    "name": "Enhance Prompt",
    "description": "An MCP service for enhance you prompt.",
    "repository": {
      "url": "https://github.com/FelixFoster/mcp-enhance-prompt",
      "source": "github",
      "stars": 14,
      "lastUpdated": "2025-08-16T13:06:42Z"
    },
    "tags": [
      "community"
    ]
  },
  {
    "id": "ergo-blockchain-mcp:a69f76e7",
    "icon": null,
    "name": "Ergo Blockchain MCP",
    "description": "An MCP server to integrate Ergo Blockchain Node and Explorer APIs for checking address balances, analyzing transactions, viewing transaction history, performing forensic analysis of addresses, searching for tokens, and monitoring network status.",
    "repository": {
      "url": "https://github.com/marctheshark3/ergo-mcp",
      "source": "github",
      "stars": 2,
      "lastUpdated": "2025-07-13T21:37:57Z"
    },
    "tags": [
      "community"
    ]
  },
  {
    "id": "esp-mcp-server:a73c30d4",
    "icon": null,
    "name": "ESP MCP Server",
    "description": "An MCP server that integrates ESP IDF commands like building and flashing code for ESP Microcontrollers using an LLM.",
    "repository": {
      "url": "https://github.com/horw/esp-mcp",
      "source": "github",
      "stars": 94,
      "lastUpdated": "2025-08-10T10:43:41Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "esp-mcp-server",
    "serverConfig": {
      "type": "stdio",
      "command": "<path_to_uv_or_python_executable>",
      "args": [
        "--directory",
        "<path_to_cloned_esp-mcp_repository>",
        "run",
        "main.py"
      ],
      "env": {
        "IDF_PATH": "<path_to_your_esp-idf_directory>"
      }
    }
  },
  {
    "id": "eunomia:d4f727b2",
    "icon": null,
    "name": "Eunomia",
    "description": "Extension of the Eunomia framework that connects Eunomia instruments with MCP servers",
    "repository": {
      "url": "https://github.com/whataboutyou-ai/eunomia-MCP-server",
      "source": "github",
      "stars": 7,
      "lastUpdated": "2025-07-30T20:07:49Z"
    },
    "tags": [
      "community"
    ]
  },
  {
    "id": "everything-search:28c89f03",
    "icon": null,
    "name": "Everything Search",
    "description": "Fast file searching capabilities across Windows (using Everything SDK), macOS (using mdfind command), and Linux (using locate/plocate command).",
    "repository": {
      "url": "https://github.com/mamertofabian/mcp-everything-search",
      "source": "github",
      "stars": 235,
      "lastUpdated": "2025-08-17T00:50:34Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "everything-search",
    "serverConfig": {
      "type": "stdio",
      "command": "uvx",
      "args": [
        "mcp-server-everything-search"
      ],
      "env": {
        "EVERYTHING_SDK_PATH": "path/to/Everything-SDK/dll/Everything64.dll"
      }
    }
  },
  {
    "id": "evm-mcp-server:53444c6f",
    "icon": null,
    "name": "EVM MCP Server",
    "description": "Comprehensive blockchain services for 30+ EVM networks, supporting native tokens, ERC20, NFTs, smart contracts, transactions, and ENS resolution.",
    "repository": {
      "url": "https://github.com/mcpdotdirect/evm-mcp-server",
      "source": "github",
      "stars": 304,
      "lastUpdated": "2025-08-14T14:18:06Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "evm-mcp-server",
    "serverConfig": {
      "type": "stdio",
      "command": "npx",
      "args": [
        "-y",
        "@mcpdotdirect/evm-mcp-server"
      ]
    }
  },
  {
    "id": "excel:34b04656",
    "icon": null,
    "name": "Excel",
    "description": "Excel manipulation including data reading/writing, worksheet management, formatting, charts, and pivot table.",
    "repository": {
      "url": "https://github.com/haris-musa/excel-mcp-server",
      "source": "github",
      "stars": 2051,
      "lastUpdated": "2025-08-17T02:34:10Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "excel",
    "serverConfig": {
      "type": "stdio",
      "command": "uvx",
      "args": [
        "excel-mcp-server",
        "stdio"
      ]
    }
  },
  {
    "id": "excel-to-json-mcp-by-wtsolutions:1ba6c7e5",
    "icon": null,
    "name": "Excel to JSON MCP by WTSolutions",
    "description": "MCP Server providing a standardized interface for converting (1) Excel or CSV data into JSON format ;(2) Excel(.xlsx) file into Structured JSON.",
    "repository": {
      "url": "https://github.com/he-yang/excel-to-json-mcp",
      "source": "github",
      "stars": 2,
      "lastUpdated": "2025-08-12T01:54:08Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "excel-to-json-mcp-by-wtsolutions",
    "serverConfig": {
      "type": "sse",
      "url": "https://mcp.wtsolutions.cn/sse"
    }
  },
  {
    "id": "extended-memory:07a89c25",
    "icon": null,
    "name": "Extended Memory",
    "description": "Persistent memory across Claude conversations with multi-project support, automatic importance scoring, and tag-based organization. Production-ready with 400+ tests.",
    "repository": {
      "url": "https://github.com/ssmirnovpro/extended-memory-mcp",
      "source": "github",
      "stars": 7,
      "lastUpdated": "2025-08-12T03:35:42Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "extended-memory",
    "serverConfig": {
      "type": "stdio",
      "command": "python3",
      "args": [
        "-m",
        "extended_memory_mcp.server"
      ],
      "env": {
        "LOG_LEVEL": "INFO"
      }
    }
  },
  {
    "id": "f1:6c1e5cf5",
    "icon": null,
    "name": "F1",
    "description": "Access to Formula 1 data including race results, driver information, lap times, telemetry, and circuit details.",
    "repository": {
      "url": "https://github.com/AbhiJ2706/f1-mcp/tree/main",
      "source": "github",
      "stars": 7,
      "lastUpdated": "2025-08-05T16:39:40Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "f1",
    "serverConfig": {
      "type": "stdio",
      "command": "python",
      "args": [
        "path/to/your/f1_mcp_server.py"
      ],
      "env": {}
    }
  },
  {
    "id": "fabric-mcp:6d655eb2",
    "icon": null,
    "name": "Fabric MCP",
    "description": "Microsoft Fabric MCP server to accelerate working in your Fabric Tenant with the help of your favorite LLM models.",
    "repository": {
      "url": "https://github.com/aci-labs/ms-fabric-mcp",
      "source": "github",
      "stars": 11,
      "lastUpdated": "2025-08-09T21:09:03Z"
    },
    "tags": [
      "community"
    ]
  },
  {
    "id": "fabric-real-time-intelligence-mcp:4f81065a",
    "icon": null,
    "name": "Fabric Real-Time Intelligence MCP",
    "description": "Official Microsoft Fabric RTI server to accelerate working with Eventhouse, Azure Data Explorer(Kusto), Eventstreams and other RTI items using your favorite LLM models.",
    "repository": {
      "url": "https://github.com/Microsoft/fabric-rti-mcp",
      "source": "github",
      "stars": 41,
      "lastUpdated": "2025-08-15T09:45:57Z"
    },
    "tags": [
      "community"
    ]
  },
  {
    "id": "fabric-mcp-server:f11a5786",
    "icon": null,
    "name": "fabric-mcp-server",
    "description": "The fabric-mcp-server is an MCP server that integrates Fabric patterns with Cline, exposing them as tools for AI-driven task execution and enhancing Cline's capabilities.",
    "repository": {
      "url": "https://github.com/adapoet/fabric-mcp-server",
      "source": "github",
      "stars": 11,
      "lastUpdated": "2025-08-06T11:36:04Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "fabric-mcp-server",
    "serverConfig": {
      "type": "stdio",
      "command": "node",
      "args": [
        "<path-to-fabric-mcp-server>/build/index.js"
      ],
      "env": {}
    }
  },
  {
    "id": "facebook-ads:5ea3fe79",
    "icon": null,
    "name": "Facebook Ads",
    "description": "MCP server acting as an interface to the Facebook Ads, enabling programmatic access to Facebook Ads data and management features.",
    "repository": {
      "url": "https://github.com/gomarble-ai/facebook-ads-mcp-server",
      "source": "github",
      "stars": 117,
      "lastUpdated": "2025-08-16T15:54:10Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "facebook-ads",
    "serverConfig": {
      "type": "stdio",
      "command": "python",
      "args": [
        "/path/to/your/fb-ads-mcp-server/server.py",
        "--fb-token",
        "YOUR_META_ACCESS_TOKEN"
      ]
    }
  },
  {
    "id": "facebook-ads-10xer:419a81aa",
    "icon": null,
    "name": "Facebook Ads 10xeR",
    "description": "Advanced Facebook Ads MCP server with enhanced creative insights, multi-dimensional breakdowns, and comprehensive ad performance analytics.",
    "repository": {
      "url": "https://github.com/fortytwode/10xer",
      "source": "github",
      "stars": 0,
      "lastUpdated": "2025-08-11T07:42:28Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "facebook-ads-10xer",
    "serverConfig": {
      "type": "stdio",
      "command": "facebook-ads-mcp",
      "env": {
        "FACEBOOK_APP_ID": "your_facebook_app_id",
        "FACEBOOK_APP_SECRET": "your_facebook_app_secret",
        "FACEBOOK_REDIRECT_URI": "http://localhost:3002/auth/callback"
      }
    }
  },
  {
    "id": "facebook-ads-library:b74c6c47",
    "icon": null,
    "name": "Facebook Ads Library",
    "description": "Get any answer from the Facebook Ads Library, conduct deep research including messaging, creative testing and comparisons in seconds.",
    "repository": {
      "url": "https://github.com/trypeggy/facebook-ads-library-mcp",
      "source": "github",
      "stars": 126,
      "lastUpdated": "2025-08-15T01:23:38Z"
    },
    "tags": [
      "community"
    ]
  },
  {
    "id": "fantasy-pl:d2b59324",
    "icon": null,
    "name": "Fantasy PL",
    "description": "Give your coding agent direct access to up-to date Fantasy Premier League data",
    "repository": {
      "url": "https://github.com/rishijatia/fantasy-pl-mcp",
      "source": "github",
      "stars": 47,
      "lastUpdated": "2025-08-16T22:37:06Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "fantasy-pl",
    "serverConfig": {
      "type": "stdio",
      "command": "python",
      "args": [
        "-m",
        "fpl_mcp"
      ]
    }
  },
  {
    "id": "fastmail-mcp:a3dc274c",
    "icon": null,
    "name": "Fastmail MCP",
    "description": "Access Fastmail via JMAP: list/search emails, send and move mail, handle attachments/threads, plus contacts and calendar tools.",
    "repository": {
      "url": "https://github.com/MadLlama25/fastmail-mcp",
      "source": "github",
      "stars": 15,
      "lastUpdated": "2025-08-15T10:18:03Z"
    },
    "tags": [
      "community"
    ]
  },
  {
    "id": "fastn-ai-unified-api-mcp-server:b058e7cb",
    "icon": null,
    "name": "fastn.ai – Unified API MCP Server",
    "description": "A remote, dynamic MCP server with a unified API that connects to 1,000+ tools, actions, and workflows, featuring built-in authentication and monitoring.",
    "repository": {
      "url": "https://github.com/fastnai/mcp-fastn",
      "source": "github",
      "stars": 11,
      "lastUpdated": "2025-07-14T12:51:04Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "fastn-ai-unified-api-mcp-server",
    "serverConfig": {
      "type": "stdio",
      "command": "/path/to/fastn-mcp-server",
      "args": [
        "--api_key",
        "YOUR_API_KEY",
        "--space_id",
        "YOUR_WORKSPACE_ID"
      ]
    }
  },
  {
    "id": "fdic-bankfind-mcp-server-unofficial:d839412e",
    "icon": null,
    "name": "FDIC BankFind MCP Server - (Unofficial)",
    "description": "The is a MCPserver that brings the power of FDIC BankFind APIs straight to your AI tools and workflows. Structured U.S. banking data, delivered with maximum vibes. 😎📊",
    "repository": {
      "url": "https://github.com/clafollett/fdic-bank-find-mcp-server",
      "source": "github",
      "stars": 3,
      "lastUpdated": "2025-08-04T07:50:12Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "fdic-bankfind-mcp-server-unofficial",
    "serverConfig": {
      "type": "stdio",
      "command": "docker",
      "args": [
        "run",
        "-i",
        "--rm",
        "ghcr.io/YOUR-ORG/fdic-bank-find-mcp-server:main"
      ]
    }
  },
  {
    "id": "federal-reserve-economic-data-fred:2af9bdc8",
    "icon": null,
    "name": "Federal Reserve Economic Data (FRED)",
    "description": "",
    "repository": {
      "url": "https://github.com/stefanoamorelli/fred-mcp-server",
      "source": "github",
      "stars": 38,
      "lastUpdated": "2025-08-15T17:06:08Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "federal-reserve-economic-data-fred",
    "serverConfig": {
      "type": "stdio",
      "command": "/usr/bin/node",
      "args": [
        "<PATH_TO_YOUR_CLONED_REPO>/fred-mcp-server/build/index.js"
      ],
      "env": {
        "FRED_API_KEY": "<YOUR_API_KEY>"
      }
    }
  },
  {
    "id": "fetch:48185eeb",
    "icon": null,
    "name": "Fetch",
    "description": "A server that flexibly fetches HTML, JSON, Markdown, or plaintext.",
    "repository": {
      "url": "https://github.com/zcaceres/fetch-mcp",
      "source": "github",
      "stars": 549,
      "lastUpdated": "2025-08-16T16:30:56Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "fetch",
    "serverConfig": {
      "type": "stdio",
      "command": "node",
      "args": [
        "{ABSOLUTE PATH TO FILE HERE}/dist/index.js"
      ]
    }
  },
  {
    "id": "feyod:49cf452c",
    "icon": null,
    "name": "Feyod",
    "description": "A server that answers questions about football matches, and specialised in the football club Feyenoord.",
    "repository": {
      "url": "https://github.com/jeroenvdmeer/feyod-mcp",
      "source": "github",
      "stars": 0,
      "lastUpdated": "2025-07-23T19:48:58Z"
    },
    "tags": [
      "community"
    ]
  },
  {
    "id": "fhir:31589150",
    "icon": null,
    "name": "FHIR",
    "description": "A Model Context Protocol server that provides seamless, standardized access to Fast Healthcare Interoperability Resources (FHIR) data from any compatible FHIR server. Designed for easy integration with AI tools, developer workflows, and healthcare applications, it enables natural language and programmatic search, retrieval, and analysis of clinical data.",
    "repository": {
      "url": "https://github.com/wso2/fhir-mcp-server",
      "source": "github",
      "stars": 25,
      "lastUpdated": "2025-08-14T16:32:11Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "fhir",
    "serverConfig": {
      "type": "stdio",
      "command": "npx",
      "args": [
        "-y",
        "mcp-remote",
        "http://localhost:8000/mcp"
      ]
    }
  },
  {
    "id": "fibaro-hc3:544efeb7",
    "icon": null,
    "name": "Fibaro HC3",
    "description": "MCP server for Fibaro Home Center 3 smart home systems.",
    "repository": {
      "url": "https://github.com/coding-sailor/mcp-server-hc3",
      "source": "github",
      "stars": 0,
      "lastUpdated": "2025-06-16T15:07:51Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "fibaro-hc3",
    "serverConfig": {
      "type": "stdio",
      "command": "node",
      "args": [
        "/path/to/your/mcp-server-hc3/dist/index.js"
      ],
      "env": {
        "HC3_HOST": "192.168.1.100",
        "HC3_USERNAME": "admin",
        "HC3_PASSWORD": "your_password",
        "HC3_PORT": "80",
        "MCP_TRANSPORT_TYPE": "stdio"
      }
    }
  },
  {
    "id": "figma:6a29cb75",
    "icon": null,
    "name": "Figma",
    "description": "Give your coding agent direct access to Figma file data, helping it one-shot design implementation.",
    "repository": {
      "url": "https://github.com/GLips/Figma-Context-MCP",
      "source": "github",
      "stars": 9965,
      "lastUpdated": "2025-08-17T00:44:53Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "figma",
    "serverConfig": {
      "type": "stdio",
      "command": "npx",
      "args": [
        "-y",
        "figma-developer-mcp",
        "--figma-api-key=YOUR-KEY",
        "--stdio"
      ]
    }
  },
  {
    "id": "figma:f50fb8b0",
    "icon": null,
    "name": "Figma",
    "description": "A blazingly fast MCP server to read and export your Figma design files.",
    "repository": {
      "url": "https://github.com/paulvandermeijs/figma-mcp",
      "source": "github",
      "stars": 3,
      "lastUpdated": "2025-08-11T00:30:54Z"
    },
    "tags": [
      "community"
    ]
  },
  {
    "id": "files:bbd5e15b",
    "icon": null,
    "name": "Files",
    "description": "Enables agents to quickly find and edit code in a codebase with surgical precision. Find symbols, edit them everywhere.",
    "repository": {
      "url": "https://github.com/flesler/mcp-files",
      "source": "github",
      "stars": 2,
      "lastUpdated": "2025-08-14T21:50:49Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "files",
    "serverConfig": {
      "type": "stdio",
      "command": "npx",
      "args": [
        "-y",
        "mcp-files"
      ]
    }
  },
  {
    "id": "filesystem-server:8f797ab1",
    "icon": null,
    "name": "FileSystem Server",
    "description": "Local MCP server for Visual Studio 2022 that provides code-workspace functionality by giving AI agents selective access to project folders and files",
    "repository": {
      "url": "https://github.com/Oncorporation/filesystem_server",
      "source": "github",
      "stars": 0,
      "lastUpdated": "2025-08-16T23:22:20Z"
    },
    "tags": [
      "community"
    ]
  },
  {
    "id": "firebase:4b54508b",
    "icon": null,
    "name": "Firebase",
    "description": "Server to interact with Firebase services including Firebase Authentication, Firestore, and Firebase Storage.",
    "repository": {
      "url": "https://github.com/gannonh/firebase-mcp",
      "source": "github",
      "stars": 200,
      "lastUpdated": "2025-08-14T19:24:39Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "firebase",
    "serverConfig": {
      "type": "stdio",
      "command": "npx",
      "args": [
        "-y",
        "@gannonh/firebase-mcp"
      ],
      "env": {
        "SERVICE_ACCOUNT_KEY_PATH": "/path/to/serviceAccountKey.json",
        "FIREBASE_STORAGE_BUCKET": "your-project-id.firebasestorage.app",
        "DEBUG_LOG_FILE": "true"
      }
    }
  },
  {
    "id": "firecrawl:e8d6073a",
    "icon": null,
    "name": "FireCrawl",
    "description": "Advanced web scraping with JavaScript rendering, PDF support, and smart rate limiting",
    "repository": {
      "url": "https://github.com/vrknetha/mcp-server-firecrawl",
      "source": "github",
      "stars": 4191,
      "lastUpdated": "2025-08-17T02:17:55Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "firecrawl",
    "serverConfig": {
      "type": "stdio",
      "command": "npx",
      "args": [
        "-y",
        "firecrawl-mcp"
      ],
      "env": {
        "FIRECRAWL_API_KEY": "YOUR_API_KEY"
      }
    }
  },
  {
    "id": "fish-audio:7fce3051",
    "icon": null,
    "name": "Fish Audio",
    "description": "Text-to-Speech integration with Fish Audio's API, supporting multiple voices, streaming, and real-time playback",
    "repository": {
      "url": "https://github.com/da-okazaki/mcp-fish-audio-server",
      "source": "github",
      "stars": 7,
      "lastUpdated": "2025-08-13T13:36:21Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "fish-audio",
    "serverConfig": {
      "type": "stdio",
      "command": "npx",
      "args": [
        "-y",
        "@alanse/fish-audio-mcp-server"
      ],
      "env": {
        "FISH_API_KEY": "your_fish_audio_api_key_here",
        "FISH_MODEL_ID": "speech-1.6",
        "FISH_REFERENCE_ID": "your_voice_reference_id_here",
        "FISH_OUTPUT_FORMAT": "mp3",
        "FISH_STREAMING": "false",
        "FISH_LATENCY": "balanced",
        "FISH_MP3_BITRATE": "128",
        "FISH_AUTO_PLAY": "false",
        "AUDIO_OUTPUT_DIR": "~/.fish-audio-mcp/audio_output"
      }
    }
  },
  {
    "id": "fitbit-mcp-server:56f974d6",
    "icon": null,
    "name": "FitBit MCP Server",
    "description": "An MCP server that connects to FitBit API using a token obtained from OAuth flow.",
    "repository": {
      "url": "https://github.com/NitayRabi/fitbit-mcp",
      "source": "github",
      "stars": 5,
      "lastUpdated": "2025-08-06T14:38:16Z"
    },
    "tags": [
      "community"
    ]
  },
  {
    "id": "flightradar24:abf33240",
    "icon": null,
    "name": "FlightRadar24",
    "description": "A Claude Desktop MCP server that helps you track flights in real-time using Flightradar24 data.",
    "repository": {
      "url": "https://github.com/sunsetcoder/flightradar24-mcp-server",
      "source": "github",
      "stars": 40,
      "lastUpdated": "2025-08-10T18:54:32Z"
    },
    "tags": [
      "community"
    ]
  },
  {
    "id": "fluent-mcp:c22b7e9b",
    "icon": null,
    "name": "Fluent-MCP",
    "description": "MCP server for Fluent (ServiceNow SDK) providing access to ServiceNow SDK CLI, API specifications, code snippets, and more.",
    "repository": {
      "url": "https://github.com/modesty/fluent-mcp",
      "source": "github",
      "stars": 7,
      "lastUpdated": "2025-08-16T03:41:41Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "fluent-mcp",
    "serverConfig": {
      "type": "stdio",
      "command": "npx",
      "args": [
        "-y",
        "@modesty/fluent-mcp"
      ]
    }
  },
  {
    "id": "flyworks-avatar:68bd47cf",
    "icon": null,
    "name": "Flyworks Avatar",
    "description": "Fast and free zeroshot lipsync MCP server.",
    "repository": {
      "url": "https://github.com/Flyworks-AI/flyworks-mcp",
      "source": "github",
      "stars": 90,
      "lastUpdated": "2025-07-09T05:06:09Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "flyworks-avatar",
    "serverConfig": {
      "type": "stdio",
      "command": "uvx",
      "args": [
        "flyworks-mcp",
        "-y"
      ],
      "env": {
        "FLYWORKS_API_TOKEN": "your_api_token_here",
        "FLYWORKS_API_BASE_URL": "https://hfw-api.hifly.cc/api/v2/hifly",
        "FLYWORKS_MCP_BASE_PATH": "/path/to/your/output/directory"
      }
    }
  },
  {
    "id": "fmp-mcp-server:de52fbae",
    "icon": null,
    "name": "fmp-mcp-server",
    "description": "Enable your agent for M&A analysis and investment banking workflows. Access company profiles, financial statements, ratios, and perform sector analysis with the [Financial Modeling Prep APIs]",
    "repository": {
      "url": "https://github.com/vipbat/fmp-mcp-server",
      "source": "github",
      "stars": 1,
      "lastUpdated": "2025-08-05T16:40:32Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "fmp-mcp-server",
    "serverConfig": {
      "type": "stdio",
      "command": "npx",
      "args": [
        "@vipbat/fmp-mcp-server"
      ],
      "env": {
        "FMP_API_KEY": "your-fmp-api-key-here"
      }
    }
  },
  {
    "id": "foundationmodels:d9e4bde0",
    "icon": null,
    "name": "FoundationModels",
    "description": "An MCP server that integrates Apple's FoundationModels for text generation.",
    "repository": {
      "url": "https://github.com/phimage/mcp-foundation-models",
      "source": "github",
      "stars": 4,
      "lastUpdated": "2025-07-22T01:56:57Z"
    },
    "tags": [
      "community"
    ]
  },
  {
    "id": "foursquare:eb3a64c3",
    "icon": null,
    "name": "Foursquare",
    "description": "Enable your agent to recommend places around the world with the Foursquare Places API",
    "repository": {
      "url": "https://github.com/foursquare/foursquare-places-mcp",
      "source": "github",
      "stars": 7,
      "lastUpdated": "2025-07-06T20:38:19Z"
    },
    "tags": [
      "community"
    ]
  },
  {
    "id": "frankfurtermcp:a1d4fa97",
    "icon": null,
    "name": "FrankfurterMCP",
    "description": "MCP server acting as an interface to the Frankfurter API for currency exchange data.",
    "repository": {
      "url": "https://github.com/anirbanbasu/frankfurtermcp",
      "source": "github",
      "stars": 3,
      "lastUpdated": "2025-08-15T07:19:54Z"
    },
    "tags": [
      "community"
    ]
  },
  {
    "id": "freqtrade-mcp:39304f9c",
    "icon": null,
    "name": "freqtrade-mcp",
    "description": "An MCP server that integrates with the Freqtrade cryptocurrency trading bot.",
    "repository": {
      "url": "https://github.com/kukapay/freqtrade-mcp",
      "source": "github",
      "stars": 68,
      "lastUpdated": "2025-08-14T13:53:17Z"
    },
    "tags": [
      "community"
    ]
  },
  {
    "id": "gdb:2ef6d2b5",
    "icon": null,
    "name": "GDB",
    "description": "A GDB/MI protocol server based on the MCP protocol, providing remote application debugging capabilities with AI assistants.",
    "repository": {
      "url": "https://github.com/pansila/mcp_server_gdb",
      "source": "github",
      "stars": 40,
      "lastUpdated": "2025-08-15T01:21:30Z"
    },
    "tags": [
      "community"
    ]
  },
  {
    "id": "ggrmcp:fe84a39f",
    "icon": null,
    "name": "ggRMCP",
    "description": "A Go gateway that converts gRPC services into MCP-compatible tools, allowing AI models like Claude to directly call your gRPC services.",
    "repository": {
      "url": "https://github.com/aalobaidi/ggRMCP",
      "source": "github",
      "stars": 9,
      "lastUpdated": "2025-08-16T06:31:42Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "ggrmcp",
    "serverConfig": {
      "type": "stdio",
      "command": "mcp-remote",
      "args": [
        "http://localhost:50053"
      ],
      "env": {}
    }
  },
  {
    "id": "ghost:f636ac41",
    "icon": null,
    "name": "Ghost",
    "description": "A Model Context Protocol (MCP) server for interacting with Ghost CMS through LLM interfaces like Claude.",
    "repository": {
      "url": "https://github.com/MFYDev/ghost-mcp",
      "source": "github",
      "stars": 89,
      "lastUpdated": "2025-08-15T15:37:28Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "ghost",
    "serverConfig": {
      "type": "stdio",
      "command": "npx",
      "args": [
        "-y",
        "@fanyangmeng/ghost-mcp"
      ],
      "env": {
        "GHOST_API_URL": "https://yourblog.com",
        "GHOST_ADMIN_API_KEY": "your_admin_api_key",
        "GHOST_API_VERSION": "v5.0"
      }
    }
  },
  {
    "id": "git:9f3fb116",
    "icon": null,
    "name": "Git",
    "description": "Allows LLM to interact with a local git repository, incl. optional push support.",
    "repository": {
      "url": "https://github.com/geropl/git-mcp-go",
      "source": "github",
      "stars": 27,
      "lastUpdated": "2025-08-12T09:19:18Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "git",
    "serverConfig": {
      "type": "stdio",
      "command": "/path/to/git-mcp-go",
      "args": [
        "serve",
        "-r=/path/to/repo1,/path/to/repo2",
        "--mode",
        "shell"
      ]
    }
  },
  {
    "id": "git-mob:2793040f",
    "icon": null,
    "name": "Git Mob",
    "description": "MCP server that interfaces with the git-mob CLI app for managing co-authors in git commits during pair/mob programming.",
    "repository": {
      "url": "https://github.com/Mubashwer/git-mob-mcp-server",
      "source": "github",
      "stars": 0,
      "lastUpdated": "2025-06-18T11:39:24Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "git-mob",
    "serverConfig": {
      "type": "stdio",
      "command": "npx",
      "args": [
        "-y",
        "git-mob-mcp-server"
      ]
    }
  },
  {
    "id": "github:146c791a",
    "icon": null,
    "name": "Github",
    "description": "A Model Context Protocol (MCP) server that provides 29 Git operations + 11 workflow combinations for AI assistants and developers. This server exposes comprehensive Git repository management through a standardized interface, enabling AI models and developers to safely manage complex version control workflows.",
    "repository": {
      "url": "https://github.com/0xshariq/github-mcp-server",
      "source": "github",
      "stars": 1,
      "lastUpdated": "2025-08-15T17:05:16Z"
    },
    "tags": [
      "community"
    ]
  },
  {
    "id": "github-actions:17425e42",
    "icon": null,
    "name": "GitHub Actions",
    "description": "A Model Context Protocol (MCP) server for interacting with GitHub Actions.",
    "repository": {
      "url": "https://github.com/ko1ynnky/github-actions-mcp-server",
      "source": "github",
      "stars": 39,
      "lastUpdated": "2025-07-30T15:32:45Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "github-actions",
    "serverConfig": {
      "type": "stdio",
      "command": "node",
      "args": [
        "<path-to-mcp-server>/dist/index.js"
      ],
      "env": {
        "GITHUB_PERSONAL_ACCESS_TOKEN": "<YOUR_TOKEN>"
      }
    }
  },
  {
    "id": "github-enterprise-mcp:6f1a3360",
    "icon": null,
    "name": "GitHub Enterprise MCP",
    "description": "A Model Context Protocol (MCP) server for interacting with GitHub Enterprise.",
    "repository": {
      "url": "https://github.com/ddukbg/github-enterprise-mcp",
      "source": "github",
      "stars": 21,
      "lastUpdated": "2025-08-17T01:32:27Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "github-enterprise-mcp",
    "serverConfig": {
      "type": "stdio",
      "command": "npx",
      "args": [
        "-y",
        "@ddukbg/github-enterprise-mcp",
        "--token=YOUR_GITHUB_TOKEN",
        "--github-enterprise-url=YOUR_GITHUB_ENTERPRISE_URL"
      ]
    }
  },
  {
    "id": "github-graphql:97a17707",
    "icon": null,
    "name": "GitHub GraphQL",
    "description": "Unofficial GitHub MCP server that provides access to GitHub's GraphQL API, enabling more powerful and flexible queries for repository data, issues, pull requests, and other GitHub resources.",
    "repository": {
      "url": "https://github.com/QuentinCody/github-graphql-mcp-server",
      "source": "github",
      "stars": 7,
      "lastUpdated": "2025-08-09T00:56:43Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "github-graphql",
    "serverConfig": {
      "type": "stdio",
      "command": "/absolute/path/to/your/.venv/bin/python",
      "args": [
        "/absolute/path/to/github_graphql_mcp_server.py"
      ],
      "env": {
        "GITHUB_TOKEN": "your_github_token_here"
      }
    }
  },
  {
    "id": "github-repos-manager-mcp-server:bc30343d",
    "icon": null,
    "name": "GitHub Repos Manager MCP Server",
    "description": "Token-based GitHub automation management. No Docker, Flexible configuration, 80+ tools with direct API integration.",
    "repository": {
      "url": "https://github.com/kurdin/github-repos-manager-mcp",
      "source": "github",
      "stars": 7,
      "lastUpdated": "2025-08-14T08:43:04Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "github-repos-manager-mcp-server",
    "serverConfig": {
      "type": "stdio",
      "command": "npx",
      "args": [
        "-y",
        "github-repos-manager-mcp"
      ],
      "env": {
        "GH_TOKEN": "ghp_YOUR_ACTUAL_TOKEN_HERE"
      }
    }
  },
  {
    "id": "gitmcp:2464e4fb",
    "icon": null,
    "name": "GitMCP",
    "description": "gitmcp.io is a generic remote MCP server to connect to ANY GitHub repository or project documentation effortlessly",
    "repository": {
      "url": "https://github.com/idosal/git-mcp",
      "source": "github",
      "stars": 5297,
      "lastUpdated": "2025-08-17T02:46:06Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "gitmcp",
    "serverConfig": {
      "type": "stdio",
      "command": "npx",
      "args": [
        "mcp-remote",
        "https://gitmcp.io/{owner}/{repo}"
      ]
    }
  },
  {
    "id": "glean:a067f967",
    "icon": null,
    "name": "Glean",
    "description": "A server that uses Glean API to search and chat.",
    "repository": {
      "url": "https://github.com/longyi1207/glean-mcp-server",
      "source": "github",
      "stars": 8,
      "lastUpdated": "2025-07-08T00:46:09Z"
    },
    "tags": [
      "community"
    ]
  },
  {
    "id": "gmail:28eaf43e",
    "icon": null,
    "name": "Gmail",
    "description": "A Model Context Protocol (MCP) server for Gmail integration in Claude Desktop with auto authentication support.",
    "repository": {
      "url": "https://github.com/GongRzhe/Gmail-MCP-Server",
      "source": "github",
      "stars": 600,
      "lastUpdated": "2025-08-16T23:43:02Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "gmail",
    "serverConfig": {
      "type": "stdio",
      "command": "npx",
      "args": [
        "@gongrzhe/server-gmail-autoauth-mcp"
      ]
    }
  },
  {
    "id": "gmail:2ee178b2",
    "icon": null,
    "name": "Gmail",
    "description": "A Simple MCP server for Gmail with support for all basic operations with oauth2.0.",
    "repository": {
      "url": "https://github.com/Ayush-k-Shukla/gmail-mcp-server",
      "source": "github",
      "stars": 2,
      "lastUpdated": "2025-08-11T10:12:41Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "gmail",
    "serverConfig": {
      "type": "stdio",
      "command": "node",
      "args": [
        "<absolute path to dist/mcp.js>"
      ],
      "env": {
        "GMAIL_OAUTH_PATH": "<absolute path to gmail-server-credentials.json>",
        "ENABLE_RAG": "false"
      }
    }
  },
  {
    "id": "gmail-headless:6af90588",
    "icon": null,
    "name": "Gmail Headless",
    "description": "Remote hostable MCP server that can get and send Gmail messages without local credential or file system setup.",
    "repository": {
      "url": "https://github.com/baryhuang/mcp-headless-gmail",
      "source": "github",
      "stars": 50,
      "lastUpdated": "2025-08-15T15:54:52Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "gmail-headless",
    "serverConfig": {
      "type": "stdio",
      "command": "npx",
      "args": [
        "@peakmojo/mcp-server-headless-gmail"
      ]
    }
  },
  {
    "id": "gmail-mcp:dff816d4",
    "icon": null,
    "name": "Gmail MCP",
    "description": "A Gmail service implementation using MCP (Model Context Protocol) that provides functionality for sending, receiving, and managing emails through Gmail's API.",
    "repository": {
      "url": "https://github.com/gangradeamitesh/mcp-google-email",
      "source": "github",
      "stars": 2,
      "lastUpdated": "2025-08-16T17:20:45Z"
    },
    "tags": [
      "community"
    ]
  },
  {
    "id": "gnuradio:1e684636",
    "icon": null,
    "name": "Gnuradio",
    "description": "An MCP server for GNU Radio that enables LLMs to autonomously create and modify RF .grc flowcharts.",
    "repository": {
      "url": "https://github.com/yoelbassin/gnuradioMCP",
      "source": "github",
      "stars": 9,
      "lastUpdated": "2025-08-16T08:48:19Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "gnuradio",
    "serverConfig": {
      "type": "stdio",
      "command": "uv",
      "args": [
        "--directory",
        "/path/to/gr-mcp",
        "run",
        "main.py"
      ]
    }
  },
  {
    "id": "goal-story:58471b81",
    "icon": null,
    "name": "Goal Story",
    "description": "a Goal Tracker and Visualization Tool for personal and professional development.",
    "repository": {
      "url": "https://github.com/hichana/goalstory-mcp",
      "source": "github",
      "stars": 16,
      "lastUpdated": "2025-08-10T19:13:59Z"
    },
    "tags": [
      "community"
    ]
  },
  {
    "id": "goat:cf852474",
    "icon": null,
    "name": "GOAT",
    "description": "Run more than +200 onchain actions on any blockchain including Ethereum, Solana and Base.",
    "repository": {
      "url": "https://github.com/goat-sdk/goat/tree/main/typescript/examples/by-framework/model-context-protocol",
      "source": "github",
      "stars": 825,
      "lastUpdated": "2025-08-16T14:42:09Z"
    },
    "tags": [
      "community"
    ]
  },
  {
    "id": "godot:e2afa818",
    "icon": null,
    "name": "Godot",
    "description": "An MCP server providing comprehensive Godot engine integration for project editing, debugging, and scene management.",
    "repository": {
      "url": "https://github.com/Coding-Solo/godot-mcp",
      "source": "github",
      "stars": 750,
      "lastUpdated": "2025-08-17T01:47:50Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "godot",
    "serverConfig": {
      "type": "stdio",
      "command": "node",
      "args": [
        "/absolute/path/to/godot-mcp/build/index.js"
      ],
      "env": {
        "DEBUG": "true"
      }
    }
  },
  {
    "id": "golang-filesystem-server:fa751b92",
    "icon": null,
    "name": "Golang Filesystem Server",
    "description": "Secure file operations with configurable access controls built with Go!",
    "repository": {
      "url": "https://github.com/mark3labs/mcp-filesystem-server",
      "source": "github",
      "stars": 493,
      "lastUpdated": "2025-08-14T10:05:28Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "golang-filesystem-server",
    "serverConfig": {
      "type": "stdio",
      "command": "docker",
      "args": [
        "run",
        "-i",
        "--rm",
        "ghcr.io/mark3labs/mcp-filesystem-server:latest",
        "/path/to/allowed/directory"
      ]
    }
  },
  {
    "id": "goodnews:3c1af242",
    "icon": null,
    "name": "Goodnews",
    "description": "A simple MCP server that delivers curated positive and uplifting news stories.",
    "repository": {
      "url": "https://github.com/VectorInstitute/mcp-goodnews",
      "source": "github",
      "stars": 41,
      "lastUpdated": "2025-07-17T21:16:54Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "goodnews",
    "serverConfig": {
      "type": "stdio",
      "command": "<absolute-path-to-bin>/uv",
      "args": [
        "--directory",
        "<absolute-path-to-cloned-repo>/mcp-goodnews/src/mcp_goodnews",
        "run",
        "server.py"
      ],
      "env": {
        "NEWS_API_KEY": "<newsapi-api-key>",
        "COHERE_API_KEY": "<cohere-api-key>"
      }
    }
  },
  {
    "id": "google-ads:6b9a10f6",
    "icon": null,
    "name": "Google Ads",
    "description": "MCP server acting as an interface to the Google Ads, enabling programmatic access to Facebook Ads data and management features.",
    "repository": {
      "url": "https://github.com/gomarble-ai/google-ads-mcp-server",
      "source": "github",
      "stars": 40,
      "lastUpdated": "2025-08-15T06:59:36Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "google-ads",
    "serverConfig": {
      "type": "stdio",
      "command": "/full/path/to/your/project/.venv/bin/python",
      "args": [
        "/full/path/to/your/project/server.py"
      ]
    }
  },
  {
    "id": "google-analytics:5d6e8dd3",
    "icon": null,
    "name": "Google Analytics",
    "description": "Google Analytics MCP Server to bring data across 200+ dimensions & metrics for LLMs to analyse.",
    "repository": {
      "url": "https://github.com/surendranb/google-analytics-mcp",
      "source": "github",
      "stars": 127,
      "lastUpdated": "2025-08-14T22:25:27Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "google-analytics",
    "serverConfig": {
      "type": "stdio",
      "command": "python3",
      "args": [
        "-m",
        "ga4_mcp_server"
      ],
      "env": {
        "GOOGLE_APPLICATION_CREDENTIALS": "/path/to/your/service-account-key.json",
        "GA4_PROPERTY_ID": "123456789"
      }
    }
  },
  {
    "id": "google-calendar:9ee3cc95",
    "icon": null,
    "name": "Google Calendar",
    "description": "Integration with Google Calendar to check schedules, find time, and add/delete events",
    "repository": {
      "url": "https://github.com/v-3/google-calendar",
      "source": "github",
      "stars": 62,
      "lastUpdated": "2025-08-11T23:55:30Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "google-calendar",
    "serverConfig": {
      "type": "stdio",
      "command": "node",
      "args": [
        "/ABSOLUTE/PATH/TO/YOUR/build/index.js"
      ],
      "env": {
        "GOOGLE_CLIENT_ID": "your_client_id_here",
        "GOOGLE_CLIENT_SECRET": "your_client_secret_here",
        "GOOGLE_REDIRECT_URI": "http://localhost",
        "GOOGLE_REFRESH_TOKEN": "your_refresh_token_here"
      }
    }
  },
  {
    "id": "google-calendar:c64eedf2",
    "icon": null,
    "name": "Google Calendar",
    "description": "Google Calendar MCP Server for managing Google calendar events. Also supports searching for events by attributes like title and location.",
    "repository": {
      "url": "https://github.com/nspady/google-calendar-mcp",
      "source": "github",
      "stars": 543,
      "lastUpdated": "2025-08-17T01:52:29Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "google-calendar",
    "serverConfig": {
      "type": "stdio",
      "command": "npx",
      "args": [
        "@cocal/google-calendar-mcp"
      ],
      "env": {
        "GOOGLE_OAUTH_CREDENTIALS": "/path/to/your/gcp-oauth.keys.json"
      }
    }
  },
  {
    "id": "google-custom-search:51e22835",
    "icon": null,
    "name": "Google Custom Search",
    "description": "Provides Google Search results via the Google Custom Search API",
    "repository": {
      "url": "https://github.com/adenot/mcp-google-search",
      "source": "github",
      "stars": 41,
      "lastUpdated": "2025-08-16T12:44:23Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "google-custom-search",
    "serverConfig": {
      "type": "stdio",
      "command": "npx",
      "args": [
        "-y",
        "@adenot/mcp-google-search"
      ],
      "env": {
        "GOOGLE_API_KEY": "your-api-key-here",
        "GOOGLE_SEARCH_ENGINE_ID": "your-search-engine-id-here"
      }
    }
  },
  {
    "id": "google-maps:882247c9",
    "icon": null,
    "name": "Google Maps",
    "description": "Provides location results using Google Places API.",
    "repository": {
      "url": "https://github.com/Mastan1301/google_maps_mcp",
      "source": "github",
      "stars": 2,
      "lastUpdated": "2025-07-21T06:38:28Z"
    },
    "tags": [
      "community"
    ]
  },
  {
    "id": "google-sheets:238edf7a",
    "icon": null,
    "name": "Google Sheets",
    "description": "Access and editing data to your Google Sheets.",
    "repository": {
      "url": "https://github.com/xing5/mcp-google-sheets",
      "source": "github",
      "stars": 343,
      "lastUpdated": "2025-08-16T08:02:30Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "google-sheets",
    "serverConfig": {
      "type": "stdio",
      "command": "uvx",
      "args": [
        "mcp-google-sheets@latest"
      ],
      "env": {
        "SERVICE_ACCOUNT_PATH": "/full/path/to/your/service-account-key.json",
        "DRIVE_FOLDER_ID": "your_shared_folder_id_here"
      }
    }
  },
  {
    "id": "google-sheets:d5b90bfb",
    "icon": null,
    "name": "Google Sheets",
    "description": "An MCP Server written in TypeScript to access and edit data in your Google Sheets.",
    "repository": {
      "url": "https://github.com/rohans2/mcp-google-sheets",
      "source": "github",
      "stars": 11,
      "lastUpdated": "2025-07-20T13:13:44Z"
    },
    "tags": [
      "community"
    ]
  },
  {
    "id": "google-tasks:be4a2354",
    "icon": null,
    "name": "Google Tasks",
    "description": "Google Tasks API Model Context Protocol Server.",
    "repository": {
      "url": "https://github.com/zcaceres/gtasks-mcp",
      "source": "github",
      "stars": 75,
      "lastUpdated": "2025-08-13T07:38:38Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "google-tasks",
    "serverConfig": {
      "type": "stdio",
      "command": "/opt/homebrew/bin/node",
      "args": [
        "{ABSOLUTE PATH TO FILE HERE}/dist/index.js"
      ]
    }
  },
  {
    "id": "google-vertex-ai-search:ce229e4c",
    "icon": null,
    "name": "Google Vertex AI Search",
    "description": "Provides Google Vertex AI Search results by grounding a Gemini model with your own private data",
    "repository": {
      "url": "https://github.com/ubie-oss/mcp-vertexai-search",
      "source": "github",
      "stars": 25,
      "lastUpdated": "2025-08-13T12:30:30Z"
    },
    "tags": [
      "community"
    ]
  },
  {
    "id": "google-workspace:76296a88",
    "icon": null,
    "name": "Google Workspace",
    "description": "Comprehensive Google Workspace MCP with full support for Calendar, Drive, Gmail, and Docs using Streamable HTTP or SSE transport.",
    "repository": {
      "url": "https://github.com/taylorwilsdon/google_workspace_mcp",
      "source": "github",
      "stars": 502,
      "lastUpdated": "2025-08-17T01:52:15Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "google-workspace",
    "serverConfig": {
      "type": "stdio",
      "command": "uv",
      "args": [
        "run",
        "--directory",
        "/path/to/repo/google_workspace_mcp",
        "main.py"
      ],
      "env": {
        "GOOGLE_OAUTH_CLIENT_ID": "your-client-id.apps.googleusercontent.com",
        "GOOGLE_OAUTH_CLIENT_SECRET": "your-client-secret",
        "OAUTHLIB_INSECURE_TRANSPORT": "1"
      }
    }
  },
  {
    "id": "google-scholar:c134fa61",
    "icon": null,
    "name": "Google-Scholar",
    "description": "Enable AI assistants to search and access Google Scholar papers through a simple MCP interface.",
    "repository": {
      "url": "https://github.com/JackKuo666/Google-Scholar-MCP-Server",
      "source": "github",
      "stars": 110,
      "lastUpdated": "2025-08-15T01:32:12Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "google-scholar",
    "serverConfig": {
      "type": "stdio",
      "command": "python",
      "args": [
        "-m",
        "google_scholar_mcp_server"
      ]
    }
  },
  {
    "id": "google-scholar:be013dd5",
    "icon": null,
    "name": "Google-Scholar",
    "description": "An MCP server for Google Scholar written in TypeScript with Streamable HTTP transport, along with a `client` implementations that integrates with the server and interacts with `gemini-2.5-flash`.",
    "repository": {
      "url": "https://github.com/mochow13/google-scholar-mcp",
      "source": "github",
      "stars": 2,
      "lastUpdated": "2025-08-13T12:31:06Z"
    },
    "tags": [
      "community"
    ]
  },
  {
    "id": "gralio-saas-database:849ad78e",
    "icon": null,
    "name": "Gralio SaaS Database",
    "description": "Find and compare SaaS products, including data from G2 reviews, Trustpilot, Crunchbase, Linkedin, pricing, features and more, using Gralio MCP server",
    "repository": {
      "url": "https://github.com/tymonTe/gralio-mcp",
      "source": "github",
      "stars": 3,
      "lastUpdated": "2025-08-04T22:22:10Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "gralio-saas-database",
    "serverConfig": {
      "type": "sse",
      "url": "https://gralio.ai/mcp/sse"
    }
  },
  {
    "id": "graphql:728daa0d",
    "icon": null,
    "name": "GraphQL",
    "description": "Comprehensive GraphQL API integration that automatically exposes each GraphQL query as a separate tool.",
    "repository": {
      "url": "https://github.com/drestrepom/mcp_graphql",
      "source": "github",
      "stars": 17,
      "lastUpdated": "2025-08-11T18:37:41Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "graphql",
    "serverConfig": {
      "type": "stdio",
      "command": "uvx",
      "args": [
        "mcp-graphql",
        "--api-url",
        "https://api.example.com/graphql"
      ]
    }
  },
  {
    "id": "graphql-schema:8677368e",
    "icon": null,
    "name": "GraphQL Schema",
    "description": "Allow LLMs to explore large GraphQL schemas without bloating the context.",
    "repository": {
      "url": "https://github.com/hannesj/mcp-graphql-schema",
      "source": "github",
      "stars": 39,
      "lastUpdated": "2025-08-02T15:25:29Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "graphql-schema",
    "serverConfig": {
      "type": "stdio",
      "command": "npx",
      "args": [
        "-y",
        "mcp-graphql-schema",
        "/ABSOLUTE/PATH/TO/schema.graphqls"
      ]
    }
  },
  {
    "id": "hackmd:14990106",
    "icon": null,
    "name": "HackMD",
    "description": "",
    "repository": {
      "url": "https://github.com/yuna0x0/hackmd-mcp",
      "source": "github",
      "stars": 35,
      "lastUpdated": "2025-08-12T21:20:07Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "hackmd",
    "serverConfig": {
      "type": "stdio",
      "command": "npx",
      "args": [
        "-y",
        "hackmd-mcp"
      ],
      "env": {
        "HACKMD_API_TOKEN": "your_api_token"
      }
    }
  },
  {
    "id": "haproxy:cdec7743",
    "icon": null,
    "name": "HAProxy",
    "description": "A Model Context Protocol (MCP) server for HAProxy implemented in Go, leveraging HAProxy Runtime API.",
    "repository": {
      "url": "https://github.com/tuannvm/haproxy-mcp-server",
      "source": "github",
      "stars": 5,
      "lastUpdated": "2025-07-29T17:03:26Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "haproxy",
    "serverConfig": {
      "type": "stdio",
      "command": "haproxy-mcp-server",
      "env": {
        "HAPROXY_HOST": "localhost",
        "HAPROXY_PORT": "9999",
        "HAPROXY_RUNTIME_MODE": "tcp4",
        "HAPROXY_RUNTIME_TIMEOUT": "10",
        "MCP_TRANSPORT": "stdio"
      }
    }
  },
  {
    "id": "hashing-mcp-server:edac21ad",
    "icon": null,
    "name": "Hashing MCP Server",
    "description": "MCP Server with cryptographic hashing functions e.g. SHA256, MD5, etc.",
    "repository": {
      "url": "https://github.com/kanad13/MCP-Server-for-Hashing",
      "source": "github",
      "stars": 2,
      "lastUpdated": "2025-08-10T22:07:36Z"
    },
    "tags": [
      "community"
    ]
  },
  {
    "id": "hdw-linkedin:07ec68e6",
    "icon": null,
    "name": "HDW LinkedIn",
    "description": "Access to profile data and management of user account with HorizonDataWave.ai.",
    "repository": {
      "url": "https://github.com/horizondatawave/hdw-mcp-server",
      "source": "github",
      "stars": 35,
      "lastUpdated": "2025-07-20T12:09:54Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "hdw-linkedin",
    "serverConfig": {
      "type": "stdio",
      "command": "npx",
      "args": [
        "-y",
        "@horizondatawave/mcp"
      ],
      "env": {
        "HDW_ACCESS_TOKEN": "YOUR_HD_W_ACCESS_TOKEN",
        "HDW_ACCOUNT_ID": "YOUR_HD_W_ACCOUNT_ID"
      }
    }
  },
  {
    "id": "heatpump:9220cb35",
    "icon": null,
    "name": "HeatPump",
    "description": "",
    "repository": {
      "url": "https://github.com/jiweiqi/heatpump-mcp-server",
      "source": "github",
      "stars": 0,
      "lastUpdated": "2025-07-22T00:08:50Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "heatpump",
    "serverConfig": {
      "type": "stdio",
      "command": "uv",
      "args": [
        "--directory",
        "/absolute/path/to/heatpump-mcp-server",
        "run",
        "python",
        "server.py"
      ],
      "env": {
        "ENV_MODE": "production"
      }
    }
  },
  {
    "id": "helm-chart-cli:1cd63880",
    "icon": null,
    "name": "Helm Chart CLI",
    "description": "Helm MCP provides a bridge between AI assistants and the Helm package manager for Kubernetes. It allows AI assistants to interact with Helm through natural language requests, executing commands like installing charts, managing repositories, and more.",
    "repository": {
      "url": "https://github.com/jeff-nasseri/helm-chart-cli-mcp",
      "source": "github",
      "stars": 7,
      "lastUpdated": "2025-07-14T14:42:18Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "helm-chart-cli",
    "serverConfig": {
      "type": "stdio",
      "command": "uvx",
      "args": [
        "mcp-server-helm"
      ]
    }
  },
  {
    "id": "heurist-mesh-agent:a2b266ba",
    "icon": null,
    "name": "Heurist Mesh Agent",
    "description": "Access specialized web3 AI agents for blockchain analysis, smart contract security, token metrics, and blockchain interactions through the Heurist Mesh network.",
    "repository": {
      "url": "https://github.com/heurist-network/heurist-mesh-mcp-server",
      "source": "github",
      "stars": 56,
      "lastUpdated": "2025-08-11T05:48:52Z"
    },
    "tags": [
      "community"
    ]
  },
  {
    "id": "holaspirit:a6880fd4",
    "icon": null,
    "name": "Holaspirit",
    "description": "Interact with Holaspirit.",
    "repository": {
      "url": "https://github.com/syucream/holaspirit-mcp-server",
      "source": "github",
      "stars": 1,
      "lastUpdated": "2025-07-01T08:34:52Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "holaspirit",
    "serverConfig": {
      "type": "stdio",
      "command": "npx",
      "args": [
        "-y",
        "holaspirit-mcp-server"
      ],
      "env": {
        "HOLASPIRIT_API_TOKEN": "<your token>",
        "HOLASPIRIT_ORGANIZATION_ID": "<your org id>"
      }
    }
  },
  {
    "id": "home-assistant:aa0b15f9",
    "icon": null,
    "name": "Home Assistant",
    "description": "Interact with Home Assistant including viewing and controlling lights, switches, sensors, and all other Home Assistant entities.",
    "repository": {
      "url": "https://github.com/tevonsb/homeassistant-mcp",
      "source": "github",
      "stars": 399,
      "lastUpdated": "2025-08-16T23:52:47Z"
    },
    "tags": [
      "community"
    ]
  },
  {
    "id": "home-assistant:1077c725",
    "icon": null,
    "name": "Home Assistant",
    "description": "Docker-ready MCP server for Home Assistant with entity management, domain summaries, automation support, and guided conversations. Includes pre-built container images for easy installation.",
    "repository": {
      "url": "https://github.com/voska/hass-mcp",
      "source": "github",
      "stars": 157,
      "lastUpdated": "2025-08-16T23:52:50Z"
    },
    "tags": [
      "community"
    ]
  },
  {
    "id": "hubspot:9bbceed6",
    "icon": null,
    "name": "HubSpot",
    "description": "HubSpot CRM integration for managing contacts and companies. Create and retrieve CRM data directly through Claude chat.",
    "repository": {
      "url": "https://github.com/buryhuang/mcp-hubspot",
      "source": "github",
      "stars": 98,
      "lastUpdated": "2025-08-12T20:39:01Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "hubspot",
    "serverConfig": {
      "type": "stdio",
      "command": "docker",
      "args": [
        "run",
        "-i",
        "--rm",
        "-e",
        "HUBSPOT_ACCESS_TOKEN=your_token",
        "-v",
        "/path/to/storage:/storage",
        "buryhuang/mcp-hubspot:latest"
      ]
    }
  },
  {
    "id": "huggingface-spaces:049194ee",
    "icon": null,
    "name": "HuggingFace Spaces",
    "description": "Server for using HuggingFace Spaces, supporting Open Source Image, Audio, Text Models and more. Claude Desktop mode for easy integration.",
    "repository": {
      "url": "https://github.com/evalstate/mcp-hfspace",
      "source": "github",
      "stars": 348,
      "lastUpdated": "2025-08-14T09:51:05Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "huggingface-spaces",
    "serverConfig": {
      "type": "stdio",
      "command": "npx",
      "args": [
        "-y",
        "@llmindset/mcp-hfspace"
      ]
    }
  },
  {
    "id": "human-in-the-loop:df73d09d",
    "icon": null,
    "name": "Human-In-the-Loop",
    "description": "A powerful MCP Server that enables AI assistants like Claude to interact with humans through intuitive GUI dialogs. This server bridges the gap between automated AI processes and human decision-making by providing real-time user input tools, choices, confirmations, and feedback mechanisms.",
    "repository": {
      "url": "https://github.com/GongRzhe/Human-In-the-Loop-MCP-Server",
      "source": "github",
      "stars": 71,
      "lastUpdated": "2025-08-15T16:35:51Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "human-in-the-loop",
    "serverConfig": {
      "type": "stdio",
      "command": "uvx",
      "args": [
        "hitl-mcp-server"
      ]
    }
  },
  {
    "id": "human-use:05bebcbc",
    "icon": null,
    "name": "Human-use",
    "description": "Instant human feedback through an MCP, have your AI interact with humans around the world. Powered by Rapidata",
    "repository": {
      "url": "https://github.com/RapidataAI/human-use",
      "source": "github",
      "stars": 65,
      "lastUpdated": "2025-07-16T22:13:05Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "human-use",
    "serverConfig": {
      "type": "stdio",
      "command": "uv",
      "args": [
        "--directory",
        "YOUR_ABSOLUTE_PATH_HERE",
        "run",
        "rapidata_human_api.py"
      ]
    }
  },
  {
    "id": "hyperledger-fabric-agent-suite:3ad7c118",
    "icon": null,
    "name": "Hyperledger Fabric Agent Suite",
    "description": "Modular toolkit for managing Fabric test networks and chaincode lifecycle via MCP tools.",
    "repository": {
      "url": "https://github.com/padmarajkore/hlf-fabric-agent",
      "source": "github",
      "stars": 1,
      "lastUpdated": "2025-06-21T18:08:48Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "hyperledger-fabric-agent-suite",
    "serverConfig": {
      "type": "stdio",
      "command": "uv",
      "args": [
        "--directory",
        "/Users/padamarajkore/Desktop/hlf-mcp",
        "run",
        "mcp_hlf_tool.py"
      ]
    }
  },
  {
    "id": "hyperliquid:4122c949",
    "icon": null,
    "name": "Hyperliquid",
    "description": "An MCP server implementation that integrates the Hyperliquid SDK for exchange data.",
    "repository": {
      "url": "https://github.com/mektigboy/server-hyperliquid",
      "source": "github",
      "stars": 29,
      "lastUpdated": "2025-08-13T03:54:21Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "hyperliquid",
    "serverConfig": {
      "type": "stdio",
      "command": "npx",
      "args": [
        "-y",
        "@mektigboy/server-hyperliquid"
      ]
    }
  },
  {
    "id": "hypertool:51cdc5c8",
    "icon": null,
    "name": "Hypertool",
    "description": "",
    "repository": {
      "url": "https://github.com/toolprint/hypertool-mcp",
      "source": "github",
      "stars": 46,
      "lastUpdated": "2025-08-16T15:50:41Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "hypertool",
    "serverConfig": {
      "type": "stdio",
      "command": "npx",
      "args": [
        "-y",
        "@toolprint/hypertool-mcp",
        "--mcp-config",
        ".mcp.hypertool.json"
      ]
    }
  },
  {
    "id": "hyprmcp:880a5519",
    "icon": null,
    "name": "hyprmcp",
    "description": "",
    "repository": {
      "url": "https://github.com/stefanoamorelli/hyprmcp",
      "source": "github",
      "stars": 13,
      "lastUpdated": "2025-08-07T23:20:52Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "hyprmcp",
    "serverConfig": {
      "type": "stdio",
      "command": "uv",
      "args": [
        "run",
        "--with",
        "mcp[cli]",
        "--with",
        "subprocess",
        "mcp",
        "run",
        "<global path of the repo>/hyprmcp/hyprmcp/server.py"
      ],
      "env": {
        "PYTHONPATH": "<global path of the repo>/hyprmcp",
        "HYPRLAND_INSTANCE_SIGNATURE": "<your-hyprland-instance-signature>"
      }
    }
  },
  {
    "id": "iflytek-sparkagent-platform:be18ab6d",
    "icon": null,
    "name": "iFlytek SparkAgent Platform",
    "description": "This is a simple example of using MCP Server to invoke the task chain of the  iFlytek SparkAgent Platform.",
    "repository": {
      "url": "https://github.com/iflytek/ifly-spark-agent-mcp",
      "source": "github",
      "stars": 3,
      "lastUpdated": "2025-08-15T08:48:05Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "iflytek-sparkagent-platform",
    "serverConfig": {
      "type": "stdio",
      "command": "uvx",
      "args": [
        "--from",
        "git+https://github.com/iflytek/ifly-spark-agent-mcp",
        "ifly-spark-agent-mcp"
      ],
      "env": {
        "IFLY_SPARK_AGENT_BASE_URL": "xxxx",
        "IFLY_SPARK_AGENT_APP_ID": "xxxx",
        "IFLY_SPARK_AGENT_APP_SECRET": "xxxx"
      }
    }
  },
  {
    "id": "iflytek-workflow:343da722",
    "icon": null,
    "name": "iFlytek Workflow",
    "description": "Connect to iFlytek Workflow via the MCP server and run your own Agent.",
    "repository": {
      "url": "https://github.com/iflytek/ifly-workflow-mcp-server",
      "source": "github",
      "stars": 25,
      "lastUpdated": "2025-04-29T01:36:26Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "iflytek-workflow",
    "serverConfig": {
      "type": "stdio",
      "command": "uvx",
      "args": [
        "--from",
        "git+https://github.com/iflytek/ifly-workflow-mcp-server",
        "ifly_workflow_mcp_server"
      ],
      "env": {
        "CONFIG_PATH": "$CONFIG_PATH"
      }
    }
  },
  {
    "id": "iiif:53edbfb5",
    "icon": null,
    "name": "IIIF",
    "description": "Comprehensive IIIF (International Image Interoperability Framework) protocol support for searching, navigating, and manipulating digital collections from museums, libraries, and archives worldwide.",
    "repository": {
      "url": "https://github.com/code4history/IIIF_MCP",
      "source": "github",
      "stars": 0,
      "lastUpdated": "2025-07-19T22:37:26Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "iiif",
    "serverConfig": {
      "type": "stdio",
      "command": "node",
      "args": [
        "/path/to/mcp_iiif/dist/index.js"
      ]
    }
  },
  {
    "id": "image-generation:93b82a4c",
    "icon": null,
    "name": "Image Generation",
    "description": "This MCP server provides image generation capabilities using the Replicate Flux model.",
    "repository": {
      "url": "https://github.com/GongRzhe/Image-Generation-MCP-Server",
      "source": "github",
      "stars": 35,
      "lastUpdated": "2025-08-15T16:58:43Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "image-generation",
    "serverConfig": {
      "type": "stdio",
      "command": "npx",
      "args": [
        "@gongrzhe/image-gen-server"
      ],
      "env": {
        "REPLICATE_API_TOKEN": "your-replicate-api-token",
        "MODEL": "alternative-model-name"
      }
    }
  },
  {
    "id": "imagesorcery-mcp:524ad60a",
    "icon": null,
    "name": "ImageSorcery MCP",
    "description": "ComputerVision-based 🪄 sorcery of image recognition and editing tools for AI assistants.",
    "repository": {
      "url": "https://github.com/sunriseapps/imagesorcery-mcp",
      "source": "github",
      "stars": 134,
      "lastUpdated": "2025-08-16T10:07:26Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "imagesorcery-mcp",
    "serverConfig": {
      "type": "stdio",
      "command": "imagesorcery-mcp"
    }
  },
  {
    "id": "imap-mcp:0491be1f",
    "icon": null,
    "name": "IMAP MCP",
    "description": "📧 An IMAP Model Context Protocol (MCP) server to expose IMAP operations as tools for AI assistants.",
    "repository": {
      "url": "https://github.com/dominik1001/imap-mcp",
      "source": "github",
      "stars": 7,
      "lastUpdated": "2025-08-12T01:19:59Z"
    },
    "tags": [
      "community"
    ]
  },
  {
    "id": "imcp:1cd8f2c5",
    "icon": null,
    "name": "iMCP",
    "description": "A macOS app that provides an MCP server for your iMessage, Reminders, and other Apple services.",
    "repository": {
      "url": "https://github.com/loopwork-ai/iMCP",
      "source": "github",
      "stars": 759,
      "lastUpdated": "2025-08-16T11:56:31Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "imcp",
    "serverConfig": {
      "type": "stdio",
      "command": "{paste iMCP server command}"
    }
  },
  {
    "id": "influxdb:f42e1cd5",
    "icon": null,
    "name": "InfluxDB",
    "description": "Run queries against InfluxDB OSS API v2.",
    "repository": {
      "url": "https://github.com/idoru/influxdb-mcp-server",
      "source": "github",
      "stars": 24,
      "lastUpdated": "2025-08-12T13:54:35Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "influxdb",
    "serverConfig": {
      "type": "stdio",
      "command": "npx",
      "args": [
        "influxdb-mcp-server"
      ],
      "env": {
        "INFLUXDB_TOKEN": "your_token",
        "INFLUXDB_URL": "http://localhost:8086",
        "INFLUXDB_ORG": "your_org"
      }
    }
  },
  {
    "id": "inner-monologue-mcp:7059f4ca",
    "icon": null,
    "name": "Inner Monologue MCP",
    "description": "A cognitive reasoning tool that enables LLMs to engage in private, structured self-reflection and multi-step reasoning before generating responses, improving response quality and problem-solving capabilities.",
    "repository": {
      "url": "https://github.com/abhinav-mangla/inner-monologue-mcp",
      "source": "github",
      "stars": 3,
      "lastUpdated": "2025-08-12T20:26:45Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "inner-monologue-mcp",
    "serverConfig": {
      "type": "stdio",
      "command": "npx",
      "args": [
        "inner-monologue-mcp"
      ]
    }
  },
  {
    "id": "inoyu:21b12a0c",
    "icon": null,
    "name": "Inoyu",
    "description": "Interact with an Apache Unomi CDP customer data platform to retrieve and update customer profiles",
    "repository": {
      "url": "https://github.com/sergehuber/inoyu-mcp-unomi-server",
      "source": "github",
      "stars": 6,
      "lastUpdated": "2025-07-02T10:21:54Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "inoyu",
    "serverConfig": {
      "type": "stdio",
      "command": "npx",
      "args": [
        "@inoyu/mcp-unomi-server"
      ],
      "env": {
        "UNOMI_BASE_URL": "http://your-unomi-server:8181",
        "UNOMI_USERNAME": "your-username",
        "UNOMI_PASSWORD": "your-password",
        "UNOMI_PROFILE_ID": "your-profile-id",
        "UNOMI_KEY": "your-unomi-key",
        "UNOMI_EMAIL": "your-email@example.com",
        "UNOMI_SOURCE_ID": "claude-desktop"
      }
    }
  },
  {
    "id": "instagram-dm:64dd2a14",
    "icon": null,
    "name": "Instagram DM",
    "description": "Send DMs on Instagram via your LLM",
    "repository": {
      "url": "https://github.com/trypeggy/instagram_dm_mcp",
      "source": "github",
      "stars": 119,
      "lastUpdated": "2025-08-16T18:47:57Z"
    },
    "tags": [
      "community"
    ]
  },
  {
    "id": "interactive-mcp:5483bb98",
    "icon": null,
    "name": "interactive-mcp",
    "description": "Enables interactive LLM workflows by adding local user prompts and chat capabilities directly into the MCP loop.",
    "repository": {
      "url": "https://github.com/ttommyth/interactive-mcp",
      "source": "github",
      "stars": 285,
      "lastUpdated": "2025-08-15T04:44:14Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "interactive-mcp",
    "serverConfig": {
      "type": "stdio",
      "command": "npx",
      "args": [
        "-y",
        "interactive-mcp"
      ]
    }
  },
  {
    "id": "intercom:139f2877",
    "icon": null,
    "name": "Intercom",
    "description": "An MCP-compliant server for retrieving customer support tickets from Intercom. This tool enables AI assistants like Claude Desktop and Cline to access and analyze your Intercom support tickets.",
    "repository": {
      "url": "https://github.com/raoulbia-ai/mcp-server-for-intercom",
      "source": "github",
      "stars": 7,
      "lastUpdated": "2025-07-28T10:27:09Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "intercom",
    "serverConfig": {
      "type": "stdio",
      "command": "intercom-mcp",
      "args": [],
      "env": {
        "INTERCOM_ACCESS_TOKEN": "your_intercom_api_token"
      }
    }
  },
  {
    "id": "ios-simulator:576af716",
    "icon": null,
    "name": "iOS Simulator",
    "description": "A Model Context Protocol (MCP) server that enables LLMs to interact with iOS simulators (iPhone, iPad, etc.) through natural language commands.",
    "repository": {
      "url": "https://github.com/InditexTech/mcp-server-simulator-ios-idb",
      "source": "github",
      "stars": 223,
      "lastUpdated": "2025-08-12T06:19:56Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "ios-simulator",
    "serverConfig": {
      "type": "stdio",
      "command": "node",
      "args": [
        "/path/to/mcp-server-simulator-ios-idb/dist/index.js"
      ],
      "env": {}
    }
  },
  {
    "id": "ipybox:a913de4c",
    "icon": null,
    "name": "ipybox",
    "description": "Python code execution sandbox based on IPython and Docker. Stateful code execution, file transfer between host and container, configurable network access. See ipybox MCP server for details.",
    "repository": {
      "url": "https://github.com/gradion-ai/ipybox",
      "source": "github",
      "stars": 34,
      "lastUpdated": "2025-08-14T12:06:29Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "ipybox",
    "serverConfig": {
      "type": "stdio",
      "command": "uvx",
      "args": [
        "ipybox",
        "mcp"
      ]
    }
  },
  {
    "id": "it-tools-mcp:056bdce3",
    "icon": null,
    "name": "it-tools-mcp",
    "description": "A Model Context Protocol server that recreates CorentinTh it-tools utilities for AI agents, enabling access to a wide range of developer tools (encoding, decoding, conversions, and more) via MCP.",
    "repository": {
      "url": "https://github.com/wrenchpilot/it-tools-mcp",
      "source": "github",
      "stars": 9,
      "lastUpdated": "2025-08-16T19:18:58Z"
    },
    "tags": [
      "community"
    ]
  },
  {
    "id": "itemit-mcp:b72e3b03",
    "icon": null,
    "name": "itemit MCP",
    "description": "itemit is Asset Tracking MCP that manage the inventory, monitoring and location tracking that powers over +300 organizations.",
    "repository": {
      "url": "https://github.com/umin-ai/itemit-mcp",
      "source": "github",
      "stars": 0,
      "lastUpdated": "2025-07-01T07:15:48Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "itemit-mcp",
    "serverConfig": {
      "type": "stdio",
      "command": "node",
      "args": [
        "/Users/<user>/Documents/itemit-mcp/build/index.js"
      ],
      "env": {
        "ITEMIT_API_KEY": "<YOUR_API_KEY>",
        "ITEMIT_USER_ID": "<YOUR_USER_ID>",
        "ITEMIT_USER_TOKEN": "<YOUR_USER_TOKEN>",
        "ITEMIT_WORKSPACE_ID": "<YOUR_WORKSPACE_ID>"
      }
    }
  },
  {
    "id": "iterm-mcp:ff8005a8",
    "icon": null,
    "name": "iTerm MCP",
    "description": "Integration with iTerm2 terminal emulator for macOS, enabling LLMs to execute and monitor terminal commands.",
    "repository": {
      "url": "https://github.com/ferrislucas/iterm-mcp",
      "source": "github",
      "stars": 420,
      "lastUpdated": "2025-08-16T14:23:23Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "iterm-mcp",
    "serverConfig": {
      "type": "stdio",
      "command": "npx",
      "args": [
        "-y",
        "iterm-mcp"
      ]
    }
  },
  {
    "id": "iterm-mcp-server:6a7dffb9",
    "icon": null,
    "name": "iTerm MCP Server",
    "description": "A Model Context Protocol (MCP) server implementation for iTerm2 terminal integration. Able to manage multiple iTerm Sessions.",
    "repository": {
      "url": "https://github.com/rishabkoul/iTerm-MCP-Server",
      "source": "github",
      "stars": 7,
      "lastUpdated": "2025-07-24T16:27:07Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "iterm-mcp-server",
    "serverConfig": {
      "type": "stdio",
      "command": "npx",
      "args": [
        "iterm_mcp_server"
      ]
    }
  },
  {
    "id": "java-decompiler:8529c647",
    "icon": null,
    "name": "Java Decompiler",
    "description": "Decompile Java bytecode into readable source code from .class files, package names, or JAR archives using CFR decompiler",
    "repository": {
      "url": "https://github.com/idachev/mcp-javadc",
      "source": "github",
      "stars": 8,
      "lastUpdated": "2025-08-12T09:07:25Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "java-decompiler",
    "serverConfig": {
      "type": "stdio",
      "command": "npx",
      "args": [
        "-y",
        "@idachev/mcp-javadc"
      ],
      "env": {
        "CLASSPATH": "/path/to/java/classes"
      }
    }
  },
  {
    "id": "javafx:063836af",
    "icon": null,
    "name": "JavaFX",
    "description": "Make drawings using a JavaFX canvas",
    "repository": {
      "url": "https://github.com/quarkiverse/quarkus-mcp-servers/tree/main/jfx",
      "source": "github",
      "stars": 160,
      "lastUpdated": "2025-08-12T03:40:04Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "javafx",
    "serverConfig": {
      "type": "stdio",
      "command": "jbang",
      "args": [
        "jfx@quarkiverse/quarkus-mcp-servers"
      ]
    }
  },
  {
    "id": "jdbc:0773be81",
    "icon": null,
    "name": "JDBC",
    "description": "Connect to any JDBC-compatible database and query, insert, update, delete, and more. Supports MySQL, PostgreSQL, Oracle, SQL Server, SQLite and more.",
    "repository": {
      "url": "https://github.com/quarkiverse/quarkus-mcp-servers/tree/main/jdbc",
      "source": "github",
      "stars": 160,
      "lastUpdated": "2025-08-12T03:40:04Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "jdbc",
    "serverConfig": {
      "type": "stdio",
      "command": "jbang",
      "args": [
        "jdbc@quarkiverse/quarkus-mcp-servers",
        "[jdbc_url]"
      ]
    }
  },
  {
    "id": "jmeter:d79b9677",
    "icon": null,
    "name": "JMeter",
    "description": "Run load testing using Apache JMeter via MCP-compliant tools.",
    "repository": {
      "url": "https://github.com/QAInsights/jmeter-mcp-server",
      "source": "github",
      "stars": 40,
      "lastUpdated": "2025-08-16T01:11:51Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "jmeter",
    "serverConfig": {
      "type": "stdio",
      "command": "/path/to/uv",
      "args": [
        "--directory",
        "/path/to/jmeter-mcp-server",
        "run",
        "jmeter_server.py"
      ]
    }
  },
  {
    "id": "job-searcher:e86379b0",
    "icon": null,
    "name": "Job Searcher",
    "description": "A FastMCP server that provides tools for retrieving and filtering job listings based on time period, keywords, and remote work preferences.",
    "repository": {
      "url": "https://github.com/0xDAEF0F/job-searchoor",
      "source": "github",
      "stars": 38,
      "lastUpdated": "2025-08-14T16:53:48Z"
    },
    "tags": [
      "community"
    ]
  },
  {
    "id": "jobswithgpt:ce4b64ef",
    "icon": null,
    "name": "jobswithgpt",
    "description": "Job search MCP using jobswithgpt which indexes 500K+ public job listings and refreshed continously.",
    "repository": {
      "url": "https://github.com/jobswithgpt/mcp",
      "source": "github",
      "stars": 2,
      "lastUpdated": "2025-07-10T05:52:48Z"
    },
    "tags": [
      "community"
    ]
  },
  {
    "id": "joinly:516a7b5d",
    "icon": null,
    "name": "joinly",
    "description": "MCP server to interact with browser-based meeting platforms (Zoom, Teams, Google Meet). Enables AI agents to send bots to online meetings, gather live transcripts, speak text, and send messages in the meeting chat.",
    "repository": {
      "url": "https://github.com/joinly-ai/joinly",
      "source": "github",
      "stars": 318,
      "lastUpdated": "2025-08-16T22:48:12Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "joinly",
    "serverConfig": {
      "type": "stdio",
      "command": "npx",
      "args": [
        "-y",
        "package@0.1.0"
      ]
    }
  },
  {
    "id": "json:39d79611",
    "icon": null,
    "name": "JSON",
    "description": "JSON handling and processing server with advanced query capabilities using JSONPath syntax and support for array, string, numeric, and date operations.",
    "repository": {
      "url": "https://github.com/GongRzhe/JSON-MCP-Server",
      "source": "github",
      "stars": 70,
      "lastUpdated": "2025-08-12T13:48:17Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "json",
    "serverConfig": {
      "type": "stdio",
      "command": "npx",
      "args": [
        "@gongrzhe/server-json-mcp@1.0.3"
      ]
    }
  },
  {
    "id": "json:1104b783",
    "icon": null,
    "name": "JSON",
    "description": "JSON schema generation and filtering server with TypeScript type creation optimised for retrieving relevant context JSON data using quicktype-core and support for shape-based data extraction, nested object filtering, and array processing operations.",
    "repository": {
      "url": "https://github.com/kehvinbehvin/json-mcp-filter",
      "source": "github",
      "stars": 9,
      "lastUpdated": "2025-08-11T04:23:08Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "json",
    "serverConfig": {
      "type": "stdio",
      "command": "npx",
      "args": [
        "-y",
        "json-mcp-filter@latest"
      ]
    }
  },
  {
    "id": "json-to-excel-by-wtsolutions:ae6bd641",
    "icon": null,
    "name": "JSON to Excel by WTSolutions",
    "description": "Converting JSON into CSV format string from (1) JSON data, (2) URLs pointing to publiclly available .json files.",
    "repository": {
      "url": "https://github.com/he-yang/json-to-excel-mcp",
      "source": "github",
      "stars": 0,
      "lastUpdated": "2025-08-04T07:33:51Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "json-to-excel-by-wtsolutions",
    "serverConfig": {
      "type": "sse",
      "url": "https://mcp2.wtsolutions.cn/sse"
    }
  },
  {
    "id": "json2video-mcp:01a4b160",
    "icon": null,
    "name": "JSON2Video MCP",
    "description": "A Model Context Protocol (MCP) server implementation for programmatically generating videos using the json2video API. This server exposes powerful video generation and status-checking tools for use with LLMs, agents, or any MCP-compatible client.",
    "repository": {
      "url": "https://github.com/omergocmen/json2video-mcp-server",
      "source": "github",
      "stars": 22,
      "lastUpdated": "2025-08-02T15:27:26Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "json2video-mcp",
    "serverConfig": {
      "type": "stdio",
      "command": "npx",
      "args": [
        "-y",
        "@omerrgocmen/json2video-mcp"
      ],
      "env": {
        "JSON2VIDEO_API_KEY": "your_api_key_here"
      }
    }
  },
  {
    "id": "jupiter-mcp:71ef502b",
    "icon": null,
    "name": "jupiter-mcp",
    "description": "An MCP server for executing token swaps on the Solana blockchain using Jupiter's new Ultra API.",
    "repository": {
      "url": "https://github.com/kukapay/jupiter-mcp",
      "source": "github",
      "stars": 19,
      "lastUpdated": "2025-07-21T09:24:32Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "jupiter-mcp",
    "serverConfig": {
      "type": "stdio",
      "command": "node",
      "args": [
        "path/to/jupiter-mcp/server/index.js"
      ],
      "env": {
        "SOLANA_RPC_URL": "solana rpc url you can access",
        "PRIVATE_KEY": "your private key"
      }
    }
  },
  {
    "id": "jupyter-mcp-server:f774eded",
    "icon": null,
    "name": "Jupyter MCP Server",
    "description": "",
    "repository": {
      "url": "https://github.com/datalayer/jupyter-mcp-server",
      "source": "github",
      "stars": 587,
      "lastUpdated": "2025-08-16T09:48:59Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "jupyter-mcp-server",
    "serverConfig": {
      "type": "stdio",
      "command": "docker",
      "args": [
        "run",
        "-i",
        "--rm",
        "-e",
        "DOCUMENT_URL",
        "-e",
        "DOCUMENT_TOKEN",
        "-e",
        "DOCUMENT_ID",
        "-e",
        "RUNTIME_URL",
        "-e",
        "RUNTIME_TOKEN",
        "datalayer/jupyter-mcp-server:latest"
      ],
      "env": {
        "DOCUMENT_URL": "http://host.docker.internal:8888",
        "DOCUMENT_TOKEN": "MY_TOKEN",
        "DOCUMENT_ID": "notebook.ipynb",
        "RUNTIME_URL": "http://host.docker.internal:8888",
        "RUNTIME_TOKEN": "MY_TOKEN"
      }
    }
  },
  {
    "id": "jupyter-notebook:19895b56",
    "icon": null,
    "name": "Jupyter Notebook",
    "description": "connects Jupyter Notebook to Claude AI, allowing Claude to directly interact with and control Jupyter Notebooks. This integration enables AI-assisted code execution, data analysis, visualization, and more.",
    "repository": {
      "url": "https://github.com/jjsantos01/jupyter-notebook-mcp",
      "source": "github",
      "stars": 97,
      "lastUpdated": "2025-08-14T08:54:03Z"
    },
    "tags": [
      "community"
    ]
  },
  {
    "id": "k8s-multicluster-mcp:dae2622c",
    "icon": null,
    "name": "k8s-multicluster-mcp",
    "description": "An MCP server for interact with multiple Kubernetes clusters simultaneously using multiple kubeconfig files.",
    "repository": {
      "url": "https://github.com/razvanmacovei/k8s-multicluster-mcp",
      "source": "github",
      "stars": 10,
      "lastUpdated": "2025-08-15T16:59:21Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "k8s-multicluster-mcp",
    "serverConfig": {
      "type": "stdio",
      "command": "python3",
      "args": [
        "/path/to/k8s-multicluster-mcp/app.py"
      ],
      "env": {
        "KUBECONFIG_DIR": "/path/to/your/kubeconfigs"
      }
    }
  },
  {
    "id": "kafka:0f09afb8",
    "icon": null,
    "name": "Kafka",
    "description": "A Model Context Protocol (MCP) server for Apache Kafka implemented in Go, leveraging franz-go.",
    "repository": {
      "url": "https://github.com/tuannvm/kafka-mcp-server",
      "source": "github",
      "stars": 29,
      "lastUpdated": "2025-08-07T08:55:24Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "kafka",
    "serverConfig": {
      "type": "stdio",
      "command": "docker",
      "args": [
        "run",
        "--rm",
        "-i",
        "-e",
        "KAFKA_BROKERS=kafka-broker:9092",
        "-e",
        "KAFKA_CLIENT_ID=kafka-mcp-server",
        "-e",
        "MCP_TRANSPORT=stdio",
        "-e",
        "KAFKA_SASL_MECHANISM=",
        "-e",
        "KAFKA_SASL_USER=",
        "-e",
        "KAFKA_SASL_PASSWORD=",
        "-e",
        "KAFKA_TLS_ENABLE=false",
        "ghcr.io/tuannvm/kafka-mcp-server:latest"
      ],
      "env": {}
    }
  },
  {
    "id": "kafka-schema-registry-mcp:2ad61379",
    "icon": null,
    "name": "Kafka Schema Registry MCP",
    "description": "",
    "repository": {
      "url": "https://github.com/aywengo/kafka-schema-reg-mcp",
      "source": "github",
      "stars": 21,
      "lastUpdated": "2025-08-14T17:01:34Z"
    },
    "tags": [
      "community"
    ]
  },
  {
    "id": "kafka-mcp:62c88d0d",
    "icon": null,
    "name": "kafka-mcp",
    "description": "An MCP Server for Kafka clusters to interact with kafka environment via tools on messages, topics, offsets, partitions for consumer and producers along with seamless integration with MCP clients.",
    "repository": {
      "url": "https://github.com/shivamxtech/kafka-mcp",
      "source": "github",
      "stars": 1,
      "lastUpdated": "2025-07-18T05:12:27Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "kafka-mcp",
    "serverConfig": {
      "type": "stdio",
      "command": "python3",
      "args": [
        "/Users/I528600/Desktop/mcp/kafka-mcp/src/main.py"
      ],
      "env": {
        "BOOTSTRAP_SERVERS": "localhost:9092",
        "MCP_TRANSPORT": "stdio"
      }
    }
  },
  {
    "id": "keycloak:e14c720f",
    "icon": null,
    "name": "Keycloak",
    "description": "The Keycloak MCP Server designed for agentic applications to manage and search data in Keycloak efficiently.",
    "repository": {
      "url": "https://github.com/idoyudha/mcp-keycloak",
      "source": "github",
      "stars": 2,
      "lastUpdated": "2025-08-17T01:52:45Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "keycloak",
    "serverConfig": {
      "type": "stdio",
      "command": "uvx",
      "args": [
        "mcp-keycloak"
      ],
      "env": {
        "SERVER_URL": "https://your-keycloak.com",
        "USERNAME": "admin",
        "PASSWORD": "admin-password",
        "REALM_NAME": "your-realm"
      }
    }
  },
  {
    "id": "keycloak-mcp:736348d8",
    "icon": null,
    "name": "Keycloak MCP",
    "description": "This MCP server enables natural language interaction with Keycloak for user and realm management including creating, deleting, and listing users and realms.",
    "repository": {
      "url": "https://github.com/ChristophEnglisch/keycloak-model-context-protocol",
      "source": "github",
      "stars": 29,
      "lastUpdated": "2025-08-17T01:52:50Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "keycloak-mcp",
    "serverConfig": {
      "type": "stdio",
      "command": "npx",
      "args": [
        "-y",
        "keycloak-model-context-protocol"
      ],
      "env": {
        "KEYCLOAK_URL": "http://localhost:8080",
        "KEYCLOAK_ADMIN": "admin",
        "KEYCLOAK_ADMIN_PASSWORD": "admin"
      }
    }
  },
  {
    "id": "keycloak-mcp-server:20fa6199",
    "icon": null,
    "name": "Keycloak MCP Server",
    "description": "designed to work with Keycloak for identity and access management, with about 40+ tools covering, Users, Realms, Clients, Roles, Groups, IDPs, Authentication. Native builds available.",
    "repository": {
      "url": "https://github.com/sshaaf/keycloak-mcp-server",
      "source": "github",
      "stars": 6,
      "lastUpdated": "2025-08-17T01:52:56Z"
    },
    "tags": [
      "community"
    ]
  },
  {
    "id": "kibana-mcp:f23c53b1",
    "icon": null,
    "name": "Kibana MCP",
    "description": "",
    "repository": {
      "url": "https://github.com/TocharianOU/mcp-server-kibana.git",
      "source": "github",
      "stars": 23,
      "lastUpdated": "2025-08-12T19:51:59Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "kibana-mcp",
    "serverConfig": {
      "type": "stdio",
      "command": "npx",
      "args": [
        "@tocharian/mcp-server-kibana"
      ],
      "env": {
        "KIBANA_URL": "http://your-kibana-server:5601",
        "KIBANA_USERNAME": "your-username",
        "KIBANA_PASSWORD": "your-password",
        "KIBANA_DEFAULT_SPACE": "default",
        "NODE_TLS_REJECT_UNAUTHORIZED": "0"
      }
    }
  },
  {
    "id": "kibela:307007fb",
    "icon": null,
    "name": "Kibela",
    "description": "",
    "repository": {
      "url": "https://github.com/kiwamizamurai/mcp-kibela-server",
      "source": "github",
      "stars": 6,
      "lastUpdated": "2025-08-10T00:19:27Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "kibela",
    "serverConfig": {
      "type": "stdio",
      "command": "npx",
      "args": [
        "-y",
        "@kiwamizamurai/mcp-kibela-server"
      ],
      "env": {
        "KIBELA_TEAM": "YOUR_TEAM_NAME",
        "KIBELA_TOKEN": "YOUR_TOKEN"
      }
    }
  },
  {
    "id": "kicad-mcp:c6fe20c8",
    "icon": null,
    "name": "KiCad MCP",
    "description": "MCP server for KiCad on Mac, Windows, and Linux.",
    "repository": {
      "url": "https://github.com/lamaalrajih/kicad-mcp",
      "source": "github",
      "stars": 248,
      "lastUpdated": "2025-08-16T00:55:15Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "kicad-mcp",
    "serverConfig": {
      "type": "stdio",
      "command": "/ABSOLUTE/PATH/TO/YOUR/PROJECT/kicad-mcp/.venv/bin/python",
      "args": [
        "/ABSOLUTE/PATH/TO/YOUR/PROJECT/kicad-mcp/main.py"
      ]
    }
  },
  {
    "id": "kill-process-mcp:9fc09579",
    "icon": null,
    "name": "kill-process-mcp",
    "description": "List and terminate OS processes via natural language queries",
    "repository": {
      "url": "https://github.com/misiektoja/kill-process-mcp",
      "source": "github",
      "stars": 6,
      "lastUpdated": "2025-08-13T17:26:59Z"
    },
    "tags": [
      "community"
    ]
  },
  {
    "id": "kindred-offers-discounts-mcp:c71d330a",
    "icon": null,
    "name": "Kindred Offers & Discounts MCP",
    "description": "",
    "repository": {
      "url": "https://github.com/kindred-app/mcp-server-kindred-offers",
      "source": "github",
      "stars": 0,
      "lastUpdated": "2025-05-09T12:03:16Z"
    },
    "tags": [
      "community"
    ]
  },
  {
    "id": "kintone:c36e312c",
    "icon": null,
    "name": "kintone",
    "description": "Manage records and apps in kintone through LLM tools.",
    "repository": {
      "url": "https://github.com/macrat/mcp-server-kintone",
      "source": "github",
      "stars": 12,
      "lastUpdated": "2025-08-01T14:56:27Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "kintone",
    "serverConfig": {
      "type": "stdio",
      "command": "C:\\path\\to\\mcp-server-kintone.exe",
      "env": {
        "KINTONE_BASE_URL": "https://<domain>.cybozu.com",
        "KINTONE_USERNAME": "<your username>",
        "KINTONE_PASSWORD": "<your password>",
        "KINTONE_API_TOKEN": "<your api token>, <another api token>, ...",
        "KINTONE_ALLOW_APPS": "1, 2, 3, ...",
        "KINTONE_DENY_APPS": "4, 5, ..."
      }
    }
  },
  {
    "id": "kokoro-tts:5e21b67b",
    "icon": null,
    "name": "Kokoro TTS",
    "description": "Use Kokoro text to speech to convert text to MP3s with optional autoupload to S3.",
    "repository": {
      "url": "https://github.com/mberg/kokoro-tts-mcp",
      "source": "github",
      "stars": 54,
      "lastUpdated": "2025-08-13T03:54:26Z"
    },
    "tags": [
      "community"
    ]
  },
  {
    "id": "kong-konnect:89a7ce6c",
    "icon": null,
    "name": "Kong Konnect",
    "description": "A Model Context Protocol (MCP) server for interacting with Kong Konnect APIs, allowing AI assistants to query and analyze Kong Gateway configurations, traffic, and analytics.",
    "repository": {
      "url": "https://github.com/Kong/mcp-konnect",
      "source": "github",
      "stars": 33,
      "lastUpdated": "2025-07-21T21:00:36Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "kong-konnect",
    "serverConfig": {
      "type": "stdio",
      "command": "node",
      "args": [
        "/absolute/path/to/mcp-konnect/build/index.js"
      ],
      "env": {
        "KONNECT_ACCESS_TOKEN": "kpat_api_key_here",
        "KONNECT_REGION": "us"
      }
    }
  },
  {
    "id": "kubernetes:aeb47f70",
    "icon": null,
    "name": "Kubernetes",
    "description": "Connect to Kubernetes cluster and manage pods, deployments, and services.",
    "repository": {
      "url": "https://github.com/Flux159/mcp-server-kubernetes",
      "source": "github",
      "stars": 978,
      "lastUpdated": "2025-08-16T17:42:21Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "kubernetes",
    "serverConfig": {
      "type": "stdio",
      "command": "npx",
      "args": [
        "mcp-server-kubernetes"
      ]
    }
  },
  {
    "id": "kubernetes-and-openshift:349920a1",
    "icon": null,
    "name": "Kubernetes and OpenShift",
    "description": "A powerful Kubernetes MCP server with additional support for OpenShift. Besides providing CRUD operations for any Kubernetes resource, this server provides specialized tools to interact with your cluster.",
    "repository": {
      "url": "https://github.com/manusa/kubernetes-mcp-server",
      "source": "github",
      "stars": 488,
      "lastUpdated": "2025-08-16T21:48:52Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "kubernetes-and-openshift",
    "serverConfig": {
      "type": "stdio",
      "command": "npx",
      "args": [
        "-y",
        "kubernetes-mcp-server@latest"
      ]
    }
  },
  {
    "id": "kubesphere:c3abc50b",
    "icon": null,
    "name": "KubeSphere",
    "description": "The KubeSphere MCP Server is a Model Context Protocol(MCP) server that provides integration with KubeSphere APIs, enabling to get resources from KubeSphere. Divided into four tools modules: Workspace Management, Cluster Management, User and Roles, Extensions Center.",
    "repository": {
      "url": "https://github.com/kubesphere/ks-mcp-server",
      "source": "github",
      "stars": 12,
      "lastUpdated": "2025-08-02T08:38:50Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "kubesphere",
    "serverConfig": {
      "type": "stdio",
      "command": "ks-mcp-server",
      "args": [
        "stdio",
        "--ksconfig",
        "<ksconfig file absolute path>",
        "--ks-apiserver",
        "<KubeSphere Address>"
      ]
    }
  },
  {
    "id": "kukapay-mcp-servers:58dd8c19",
    "icon": null,
    "name": "Kukapay MCP Servers",
    "description": "A comprehensive suite of Model Context Protocol (MCP) servers dedicated to cryptocurrency, blockchain, and Web3 data aggregation, analysis, and services from Kukapay.",
    "repository": {
      "url": "https://github.com/kukapay/kukapay-mcp-servers",
      "source": "github",
      "stars": 5,
      "lastUpdated": "2025-08-07T13:11:58Z"
    },
    "tags": [
      "community"
    ]
  },
  {
    "id": "kwrds-ai:67d56720",
    "icon": null,
    "name": "kwrds.ai",
    "description": "Keyword research, people also ask, SERP and other SEO tools for kwrds.ai",
    "repository": {
      "url": "https://github.com/mkotsollaris/kwrds_ai_mcp",
      "source": "github",
      "stars": 1,
      "lastUpdated": "2025-06-13T16:08:49Z"
    },
    "tags": [
      "community"
    ]
  },
  {
    "id": "langflow-doc-qa-server:6d58333b",
    "icon": null,
    "name": "Langflow-DOC-QA-SERVER",
    "description": "A Model Context Protocol server for document Q&A powered by Langflow. It demonstrates core MCP concepts by providing a simple interface to query documents through a Langflow backend.",
    "repository": {
      "url": "https://github.com/GongRzhe/Langflow-DOC-QA-SERVER",
      "source": "github",
      "stars": 14,
      "lastUpdated": "2025-07-30T02:34:58Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "langflow-doc-qa-server",
    "serverConfig": {
      "type": "stdio",
      "command": "node",
      "args": [
        "/path/to/doc-qa-server/build/index.js"
      ],
      "env": {
        "API_ENDPOINT": "http://127.0.0.1:7860/api/v1/run/480ec7b3-29d2-4caa-b03b-e74118f35fac"
      }
    }
  },
  {
    "id": "language-server:a18f02c5",
    "icon": null,
    "name": "Language Server",
    "description": "MCP Language Server helps MCP enabled clients navigate codebases more easily by giving them access to semantic tools like get definition, references, rename, and diagnostics.",
    "repository": {
      "url": "https://github.com/isaacphi/mcp-language-server",
      "source": "github",
      "stars": 925,
      "lastUpdated": "2025-08-17T01:32:29Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "language-server",
    "serverConfig": {
      "type": "stdio",
      "command": "/full/path/to/your/clone/mcp-language-server/mcp-language-server",
      "args": [
        "--workspace",
        "/path/to/workspace",
        "--lsp",
        "language-server-executable"
      ],
      "env": {
        "LOG_LEVEL": "DEBUG"
      }
    }
  },
  {
    "id": "lark-feishu:2b660e7d",
    "icon": null,
    "name": "Lark(Feishu)",
    "description": "A Model Context Protocol(MCP) server for Lark(Feishu) sheet, message, doc and etc.",
    "repository": {
      "url": "https://github.com/kone-net/mcp_server_lark",
      "source": "github",
      "stars": 1,
      "lastUpdated": "2025-05-15T15:57:30Z"
    },
    "tags": [
      "community"
    ]
  },
  {
    "id": "lazy-toggl-mcp:1852e856",
    "icon": null,
    "name": "Lazy Toggl MCP",
    "description": "Simple unofficial MCP server to track time via Toggl API",
    "repository": {
      "url": "https://github.com/movstox/lazy-toggl-mcp",
      "source": "github",
      "stars": 2,
      "lastUpdated": "2025-06-11T17:17:50Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "lazy-toggl-mcp",
    "serverConfig": {
      "type": "stdio",
      "command": "uv",
      "args": [
        "run",
        "--directory",
        "/path/to/lazy-toggl-mcp",
        "python",
        "server.py"
      ],
      "env": {
        "TOGGL_API_TOKEN": "your-actual-api-token-here"
      }
    }
  },
  {
    "id": "lean-lsp-mcp:9c47af14",
    "icon": null,
    "name": "lean-lsp-mcp",
    "description": "Interact with the Lean theorem prover via the Language Server Protocol.",
    "repository": {
      "url": "https://github.com/oOo0oOo/lean-lsp-mcp",
      "source": "github",
      "stars": 96,
      "lastUpdated": "2025-08-15T12:04:32Z"
    },
    "tags": [
      "community"
    ]
  },
  {
    "id": "librenms-mcp:af81dcca",
    "icon": null,
    "name": "librenms-mcp",
    "description": "MCP server for LibreNMS management",
    "repository": {
      "url": "https://github.com/mhajder/librenms-mcp",
      "source": "github",
      "stars": 0,
      "lastUpdated": "2025-08-09T11:49:37Z"
    },
    "tags": [
      "community"
    ]
  },
  {
    "id": "libvirt-mcp:4cab5e00",
    "icon": null,
    "name": "libvirt-mcp",
    "description": "Allows LLM to interact with libvirt thus enabling to create, destroy or list the Virtual Machines in a system.",
    "repository": {
      "url": "https://github.com/MatiasVara/libvirt-mcp",
      "source": "github",
      "stars": 8,
      "lastUpdated": "2025-08-06T12:28:07Z"
    },
    "tags": [
      "community"
    ]
  },
  {
    "id": "lightdash:1445dbab",
    "icon": null,
    "name": "Lightdash",
    "description": "Interact with Lightdash, a BI tool.",
    "repository": {
      "url": "https://github.com/syucream/lightdash-mcp-server",
      "source": "github",
      "stars": 17,
      "lastUpdated": "2025-06-09T02:43:50Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "lightdash",
    "serverConfig": {
      "type": "stdio",
      "command": "npx",
      "args": [
        "-y",
        "lightdash-mcp-server"
      ],
      "env": {
        "LIGHTDASH_API_KEY": "<your PAT>",
        "LIGHTDASH_API_URL": "https://<your base url>"
      }
    }
  },
  {
    "id": "line:542a7132",
    "icon": null,
    "name": "LINE",
    "description": "",
    "repository": {
      "url": "https://github.com/amornpan/py-mcp-line",
      "source": "github",
      "stars": 18,
      "lastUpdated": "2025-08-17T01:53:15Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "line",
    "serverConfig": {
      "type": "stdio",
      "command": "python",
      "args": [
        "server.py"
      ],
      "env": {
        "LINE_CHANNEL_SECRET": "your_channel_secret",
        "LINE_ACCESS_TOKEN": "your_access_token",
        "SERVER_PORT": "8000",
        "MESSAGES_FILE": "data/messages.json"
      }
    }
  },
  {
    "id": "linear:39913536",
    "icon": null,
    "name": "Linear",
    "description": "Interact with Linear project management system.",
    "repository": {
      "url": "https://github.com/tacticlaunch/mcp-linear",
      "source": "github",
      "stars": 99,
      "lastUpdated": "2025-08-15T05:08:54Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "linear",
    "serverConfig": {
      "type": "stdio",
      "command": "npx",
      "args": [
        "-y",
        "@tacticlaunch/mcp-linear"
      ],
      "env": {
        "LINEAR_API_TOKEN": "<YOUR_TOKEN>"
      }
    }
  },
  {
    "id": "linear:ce9421b4",
    "icon": null,
    "name": "Linear",
    "description": "Allows LLM to interact with Linear's API for project management, including searching, creating, and updating issues.",
    "repository": {
      "url": "https://github.com/jerhadf/linear-mcp-server",
      "source": "github",
      "stars": 322,
      "lastUpdated": "2025-08-16T03:57:42Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "linear",
    "serverConfig": {
      "type": "stdio",
      "command": "npx",
      "args": [
        "-y",
        "linear-mcp-server"
      ],
      "env": {
        "LINEAR_API_KEY": "your_linear_api_key_here"
      }
    }
  },
  {
    "id": "linear-go:8bd64174",
    "icon": null,
    "name": "Linear (Go)",
    "description": "Allows LLM to interact with Linear's API via a single static binary.",
    "repository": {
      "url": "https://github.com/geropl/linear-mcp-go",
      "source": "github",
      "stars": 9,
      "lastUpdated": "2025-08-14T06:14:40Z"
    },
    "tags": [
      "community"
    ]
  },
  {
    "id": "linear-mcp:3cb15432",
    "icon": null,
    "name": "Linear MCP",
    "description": "Full blown implementation of the Linear SDK to support comprehensive Linear management of projects, initiatives, issues, users, teams and states.",
    "repository": {
      "url": "https://github.com/anoncam/linear-mcp",
      "source": "github",
      "stars": 1,
      "lastUpdated": "2025-07-25T07:42:33Z"
    },
    "tags": [
      "community"
    ]
  },
  {
    "id": "listmonk-mcp-server:17a320ee",
    "icon": null,
    "name": "Listmonk MCP Server",
    "description": "",
    "repository": {
      "url": "https://github.com/rhnvrm/listmonk-mcp",
      "source": "github",
      "stars": 11,
      "lastUpdated": "2025-08-11T07:37:06Z"
    },
    "tags": [
      "community"
    ]
  },
  {
    "id": "llamacloud:04e9f5e6",
    "icon": null,
    "name": "LlamaCloud",
    "description": "",
    "repository": {
      "url": "https://github.com/run-llama/mcp-server-llamacloud",
      "source": "github",
      "stars": 80,
      "lastUpdated": "2025-07-06T00:46:35Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "llamacloud",
    "serverConfig": {
      "type": "stdio",
      "command": "npx",
      "args": [
        "-y",
        "@llamaindex/mcp-server-llamacloud",
        "--index",
        "10k-SEC-Tesla",
        "--description",
        "10k SEC documents from 2023 for Tesla",
        "--topK",
        "5",
        "--index",
        "10k-SEC-Apple",
        "--description",
        "10k SEC documents from 2023 for Apple"
      ],
      "env": {
        "LLAMA_CLOUD_API_KEY": "<YOUR_API_KEY>"
      }
    }
  },
  {
    "id": "lldb-mcp:720b75b7",
    "icon": null,
    "name": "lldb-mcp",
    "description": "A Model Context Protocol server for LLDB that provides LLM-driven debugging.",
    "repository": {
      "url": "https://github.com/stass/lldb-mcp",
      "source": "github",
      "stars": 51,
      "lastUpdated": "2025-07-26T02:07:30Z"
    },
    "tags": [
      "community"
    ]
  },
  {
    "id": "llm-context:5f4aeb10",
    "icon": null,
    "name": "llm-context",
    "description": "Provides a repo-packing MCP tool with configurable profiles that specify file inclusion/exclusion patterns and optional prompts.",
    "repository": {
      "url": "https://github.com/cyberchitta/llm-context.py",
      "source": "github",
      "stars": 255,
      "lastUpdated": "2025-08-16T11:33:17Z"
    },
    "tags": [
      "community"
    ]
  },
  {
    "id": "locust:509cc79b",
    "icon": null,
    "name": "Locust",
    "description": "Allows running and analyzing Locust tests using MCP compatible clients.",
    "repository": {
      "url": "https://github.com/QAInsights/locust-mcp-server",
      "source": "github",
      "stars": 5,
      "lastUpdated": "2025-07-18T15:33:20Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "locust",
    "serverConfig": {
      "type": "stdio",
      "command": "/Users/naveenkumar/.local/bin/uv",
      "args": [
        "--directory",
        "/Users/naveenkumar/Gits/locust-mcp-server",
        "run",
        "locust_server.py"
      ]
    }
  },
  {
    "id": "loki:21256bb9",
    "icon": null,
    "name": "Loki",
    "description": "Golang based MCP Server to query logs from Grafana Loki.",
    "repository": {
      "url": "https://github.com/scottlepp/loki-mcp",
      "source": "github",
      "stars": 28,
      "lastUpdated": "2025-08-14T12:20:40Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "loki",
    "serverConfig": {
      "type": "stdio",
      "command": "docker",
      "args": [
        "run",
        "--rm",
        "-i",
        "-e",
        "LOKI_URL=http://host.docker.internal:3100",
        "-e",
        "LOKI_ORG_ID=your-default-org-id",
        "-e",
        "LOKI_USERNAME=your-username",
        "-e",
        "LOKI_PASSWORD=your-password",
        "-e",
        "LOKI_TOKEN=your-bearer-token",
        "loki-mcp-server:latest"
      ]
    }
  },
  {
    "id": "lottiefiles:0406c5e7",
    "icon": null,
    "name": "LottieFiles",
    "description": "Searching and retrieving Lottie animations from LottieFiles",
    "repository": {
      "url": "https://github.com/junmer/mcp-server-lottiefiles",
      "source": "github",
      "stars": 4,
      "lastUpdated": "2025-08-16T12:08:11Z"
    },
    "tags": [
      "community"
    ]
  },
  {
    "id": "lsp-mcp:c3d1cd11",
    "icon": null,
    "name": "lsp-mcp",
    "description": "Interact with Language Servers usint the Language Server Protocol to provide additional context information via hover, code actions and completions.",
    "repository": {
      "url": "https://github.com/Tritlo/lsp-mcp",
      "source": "github",
      "stars": 64,
      "lastUpdated": "2025-08-07T12:58:56Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "lsp-mcp",
    "serverConfig": {
      "type": "stdio",
      "command": "npx",
      "args": [
        "tritlo/lsp-mcp",
        "<language-id>",
        "<path-to-lsp>",
        "<lsp-args>"
      ]
    }
  },
  {
    "id": "lspace:8f3cbbd1",
    "icon": null,
    "name": "Lspace",
    "description": "Turn scattered ChatGPT/Claude/Cursor conversations into persistent, searchable knowledge.",
    "repository": {
      "url": "https://github.com/Lspace-io/lspace-server",
      "source": "github",
      "stars": 5,
      "lastUpdated": "2025-07-12T06:13:54Z"
    },
    "tags": [
      "community"
    ]
  },
  {
    "id": "lucene-mcp-server:63459c2f",
    "icon": null,
    "name": "lucene-mcp-server",
    "description": "spring boot server using Lucene for fast document search and management.",
    "repository": {
      "url": "https://github.com/VivekKumarNeu/MCP-Lucene-Server",
      "source": "github",
      "stars": 0,
      "lastUpdated": "2025-04-20T01:05:23Z"
    },
    "tags": [
      "community"
    ]
  },
  {
    "id": "lucid-mcp-server:b156981d",
    "icon": null,
    "name": "lucid-mcp-server",
    "description": "",
    "repository": {
      "url": "https://github.com/smartzan63/lucid-mcp-server",
      "source": "github",
      "stars": 4,
      "lastUpdated": "2025-08-01T10:20:02Z"
    },
    "tags": [
      "community"
    ]
  },
  {
    "id": "lunarcrush-remote-mcp:eb62b3d8",
    "icon": null,
    "name": "LunarCrush Remote MCP",
    "description": "Get the latest social metrics and posts for both current live social context as well as historical metrics in LLM and token optimized outputs. Ideal for automated trading / financial advisory.",
    "repository": {
      "url": "https://github.com/lunarcrush/mcp-server",
      "source": "github",
      "stars": 2,
      "lastUpdated": "2025-08-13T03:55:18Z"
    },
    "tags": [
      "community"
    ]
  },
  {
    "id": "mac-messages-mcp:e2667df1",
    "icon": null,
    "name": "mac-messages-mcp",
    "description": "An MCP server that securely interfaces with your iMessage database via the Model Context Protocol (MCP), allowing LLMs to query and analyze iMessage conversations. It includes robust phone number validation, attachment processing, contact management, group chat handling, and full support for sending and receiving messages.",
    "repository": {
      "url": "https://github.com/carterlasalle/mac_messages_mcp",
      "source": "github",
      "stars": 157,
      "lastUpdated": "2025-08-15T06:20:30Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "mac-messages-mcp",
    "serverConfig": {
      "type": "stdio",
      "command": "uvx",
      "args": [
        "mac-messages-mcp"
      ]
    }
  },
  {
    "id": "maestro-mcp:f963ca8f",
    "icon": null,
    "name": "Maestro MCP",
    "description": "An MCP server for interacting with Bitcoin via the Maestro RPC API.",
    "repository": {
      "url": "https://github.com/maestro-org/maestro-mcp",
      "source": "github",
      "stars": 18,
      "lastUpdated": "2025-08-09T20:42:59Z"
    },
    "tags": [
      "community"
    ]
  },
  {
    "id": "magg-the-mcp-aggregator:55b53652",
    "icon": null,
    "name": "Magg: The MCP Aggregator",
    "description": "A meta-MCP server that acts as a universal hub, allowing LLMs to autonomously discover, install, and orchestrate multiple MCP servers - essentially giving AI assistants the power to extend their own capabilities on-demand. Includes `mbro`, a powerful CLI MCP server browser with scripting capability.",
    "repository": {
      "url": "https://github.com/sitbon/magg",
      "source": "github",
      "stars": 51,
      "lastUpdated": "2025-08-16T16:28:41Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "magg-the-mcp-aggregator",
    "serverConfig": {
      "type": "stdio",
      "command": "npx @executeautomation/calculator-mcp"
    }
  },
  {
    "id": "mailchimp-mcp:6cf54310",
    "icon": null,
    "name": "Mailchimp MCP",
    "description": "Allows AI agents to interact with the Mailchimp API (read-only)",
    "repository": {
      "url": "https://github.com/AgentX-ai/mailchimp-mcp",
      "source": "github",
      "stars": 6,
      "lastUpdated": "2025-08-11T23:55:45Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "mailchimp-mcp",
    "serverConfig": {
      "type": "stdio",
      "command": "npx",
      "args": [
        "@agentx-ai/mailchimp-mcp-server"
      ],
      "env": {
        "MAILCHIMP_API_KEY": "your-api-key-here"
      }
    }
  },
  {
    "id": "malwarebazaar-mcp:d722bcc5",
    "icon": null,
    "name": "MalwareBazaar_MCP",
    "description": "",
    "repository": {
      "url": "https://github.com/mytechnotalent/MalwareBazaar_MCP",
      "source": "github",
      "stars": 16,
      "lastUpdated": "2025-07-15T16:49:46Z"
    },
    "tags": [
      "community"
    ]
  },
  {
    "id": "man-mcp-server:6fc796be",
    "icon": null,
    "name": "man-mcp-server",
    "description": "MCP to search and access man pages on the local machine.",
    "repository": {
      "url": "https://github.com/guyru/man-mcp-server",
      "source": "github",
      "stars": 5,
      "lastUpdated": "2025-08-13T18:08:50Z"
    },
    "tags": [
      "community"
    ]
  },
  {
    "id": "mariadb:5ff98faa",
    "icon": null,
    "name": "MariaDB",
    "description": "MariaDB database integration with configurable access controls in Python.",
    "repository": {
      "url": "https://github.com/abel9851/mcp-server-mariadb",
      "source": "github",
      "stars": 18,
      "lastUpdated": "2025-07-17T02:47:49Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "mariadb",
    "serverConfig": {
      "type": "stdio",
      "command": "/PATH/TO/uv",
      "args": [
        "--directory",
        "/YOUR/SOURCE/PATH/mcp-server-mariadb/src/mcp_server_mariadb",
        "run",
        "server.py"
      ],
      "env": {
        "MARIADB_HOST": "127.0.0.1",
        "MARIADB_USER": "USER",
        "MARIADB_PASSWORD": "PASSWORD",
        "MARIADB_DATABASE": "DATABASE",
        "MARIADB_PORT": "3306"
      }
    }
  },
  {
    "id": "markdown2doc:8d12c663",
    "icon": null,
    "name": "Markdown2doc",
    "description": "Convert between various file formats using Pandoc",
    "repository": {
      "url": "https://github.com/Klavis-AI/klavis/tree/main/mcp_servers/pandoc",
      "source": "github",
      "stars": 3955,
      "lastUpdated": "2025-08-17T02:22:39Z"
    },
    "tags": [
      "community"
    ]
  },
  {
    "id": "markdownify:d4e33ea3",
    "icon": null,
    "name": "Markdownify",
    "description": "MCP to convert almost anything to Markdown (PPTX, HTML, PDF, Youtube Transcripts and more)",
    "repository": {
      "url": "https://github.com/zcaceres/mcp-markdownify-server",
      "source": "github",
      "stars": 2038,
      "lastUpdated": "2025-08-16T13:27:54Z"
    },
    "tags": [
      "community"
    ]
  },
  {
    "id": "market-fiyati:f53d290a",
    "icon": null,
    "name": "market-fiyati",
    "description": "The MCP server for marketfiyati.org.tr, offering grocery price search and comparison across Turkish markets.)",
    "repository": {
      "url": "https://github.com/mtcnbzks/market-fiyati-mcp-server",
      "source": "github",
      "stars": 2,
      "lastUpdated": "2025-07-24T09:33:56Z"
    },
    "tags": [
      "community"
    ]
  },
  {
    "id": "markitdown:f363815e",
    "icon": null,
    "name": "Markitdown",
    "description": "Convert files to Markdown",
    "repository": {
      "url": "https://github.com/Klavis-AI/klavis/tree/main/mcp_servers/markitdown",
      "source": "github",
      "stars": 3955,
      "lastUpdated": "2025-08-17T02:22:39Z"
    },
    "tags": [
      "community"
    ]
  },
  {
    "id": "masquerade:f75ca127",
    "icon": null,
    "name": "Masquerade",
    "description": "Redact sensitive information from your PDF documents before sending them to Claude. Masquerade serves as a privacy firewall for LLMs.",
    "repository": {
      "url": "https://github.com/postralai/masquerade",
      "source": "github",
      "stars": 68,
      "lastUpdated": "2025-08-11T00:47:26Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "masquerade",
    "serverConfig": {
      "type": "stdio",
      "command": "/path/to/python",
      "args": [
        "/path/to/mcp_pdf_redaction.py"
      ],
      "env": {
        "TINFOIL_API_KEY": "your_api_key"
      }
    }
  },
  {
    "id": "mastergo:13474643",
    "icon": null,
    "name": "MasterGo",
    "description": "The server designed to connect MasterGo design tools with AI models. It enables AI models to directly retrieve DSL data from MasterGo design files.",
    "repository": {
      "url": "https://github.com/mastergo-design/mastergo-magic-mcp",
      "source": "github",
      "stars": 147,
      "lastUpdated": "2025-08-13T07:40:05Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "mastergo",
    "serverConfig": {
      "type": "stdio",
      "command": "npx",
      "args": [
        "-y",
        "@mastergo/magic-mcp",
        "--token=<MG_MCP_TOKEN>",
        "--url=https://mastergo.com"
      ],
      "env": {}
    }
  },
  {
    "id": "matlab-mcp-tools:5b3d36ce",
    "icon": null,
    "name": "Matlab-MCP-Tools",
    "description": "An MCP to write and execute MATLAB scripts, maintain workspace context between MCP calls, visualize plots, and perform section-by-section analysis of MATLAB code with full access to MATLAB's computational capabilities.",
    "repository": {
      "url": "https://github.com/neuromechanist/matlab-mcp-tools",
      "source": "github",
      "stars": 8,
      "lastUpdated": "2025-07-31T04:58:23Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "matlab-mcp-tools",
    "serverConfig": {
      "type": "stdio",
      "command": "matlab-mcp-server",
      "args": [],
      "env": {
        "MATLAB_PATH": "${MATLAB_PATH}",
        "PATH": "${MATLAB_PATH}/bin:${PATH}"
      }
    }
  },
  {
    "id": "maton:cadbb081",
    "icon": null,
    "name": "Maton",
    "description": "Connect to your SaaS tools like HubSpot, Salesforce, and more.",
    "repository": {
      "url": "https://github.com/maton-ai/agent-toolkit/tree/main/modelcontextprotocol",
      "source": "github",
      "stars": 27,
      "lastUpdated": "2025-07-22T22:14:03Z"
    },
    "tags": [
      "community"
    ]
  },
  {
    "id": "maven-tools-mcp:bdb4f494",
    "icon": null,
    "name": "Maven Tools MCP",
    "description": "Maven Central dependency intelligence for JVM build tools. Supports all build tools (Maven, Gradle, SBT, Mill) with Context7 integration for documentation support.",
    "repository": {
      "url": "https://github.com/arvindand/maven-tools-mcp",
      "source": "github",
      "stars": 3,
      "lastUpdated": "2025-08-09T20:23:28Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "maven-tools-mcp",
    "serverConfig": {
      "type": "stdio",
      "command": "docker",
      "args": [
        "run",
        "-i",
        "--rm",
        "-e",
        "SPRING_PROFILES_ACTIVE=docker",
        "arvindand/maven-tools-mcp:latest"
      ]
    }
  },
  {
    "id": "mcp-compass:a380bf77",
    "icon": null,
    "name": "MCP Compass",
    "description": "Suggest the right MCP server for your needs",
    "repository": {
      "url": "https://github.com/liuyoshio/mcp-compass",
      "source": "github",
      "stars": 180,
      "lastUpdated": "2025-08-16T13:27:04Z"
    },
    "tags": [
      "community"
    ]
  },
  {
    "id": "mcp-create:0360564f",
    "icon": null,
    "name": "MCP Create",
    "description": "A dynamic MCP server management service that creates, runs, and manages Model Context Protocol servers on-the-fly.",
    "repository": {
      "url": "https://github.com/tesla0225/mcp-create",
      "source": "github",
      "stars": 88,
      "lastUpdated": "2025-08-14T14:18:06Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "mcp-create",
    "serverConfig": {
      "type": "stdio",
      "command": "docker",
      "args": [
        "run",
        "-i",
        "--rm",
        "mcp-create"
      ]
    }
  },
  {
    "id": "mcp-documentation-server:b49d4582",
    "icon": null,
    "name": "MCP Documentation Server",
    "description": "Server that provides local document management and semantic search capabilities. Upload documents, search them with AI embeddings, and integrate seamlessly with MCP clients like Claude Desktop and vs code.",
    "repository": {
      "url": "https://github.com/andrea9293/mcp-documentation-server",
      "source": "github",
      "stars": 181,
      "lastUpdated": "2025-08-16T20:06:00Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "mcp-documentation-server",
    "serverConfig": {
      "type": "stdio",
      "command": "npx",
      "args": [
        "-y",
        "@andrea9293/mcp-documentation-server"
      ],
      "env": {
        "MCP_EMBEDDING_MODEL": "Xenova/all-MiniLM-L6-v2"
      }
    }
  },
  {
    "id": "mcp-installer:50df7a2c",
    "icon": null,
    "name": "MCP Installer",
    "description": "This server is a server that installs other MCP servers for you.",
    "repository": {
      "url": "https://github.com/anaisbetts/mcp-installer",
      "source": "github",
      "stars": 1368,
      "lastUpdated": "2025-08-16T17:45:37Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "mcp-installer",
    "serverConfig": {
      "type": "stdio",
      "command": "npx",
      "args": [
        "@anaisbetts/mcp-installer"
      ]
    }
  },
  {
    "id": "mcp-projectmanage-openproject:cfcaf4c9",
    "icon": null,
    "name": "MCP ProjectManage OpenProject",
    "description": "This server provides the MCP service for project weekly reports, with project management information supplied by OpenProject.",
    "repository": {
      "url": "https://github.com/boma086/mcp-projectmanage-openproject",
      "source": "github",
      "stars": 1,
      "lastUpdated": "2025-07-31T05:31:26Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "mcp-projectmanage-openproject",
    "serverConfig": {
      "type": "stdio",
      "command": "curl",
      "args": [
        "-X",
        "POST",
        "http://localhost:8020/mcp"
      ]
    }
  },
  {
    "id": "mcp-proxy-server:9d85cc79",
    "icon": null,
    "name": "MCP Proxy Server",
    "description": "An MCP proxy server that aggregates and serves multiple MCP resource servers through a single HTTP server.",
    "repository": {
      "url": "https://github.com/TBXark/mcp-proxy",
      "source": "github",
      "stars": 432,
      "lastUpdated": "2025-08-16T21:59:50Z"
    },
    "tags": [
      "community"
    ]
  },
  {
    "id": "mcp-server-creator:60a0610b",
    "icon": null,
    "name": "MCP Server Creator",
    "description": "A powerful Model Context Protocol (MCP) server that creates other MCP servers! This meta-server provides tools for dynamically generating FastMCP server configurations and Python code.",
    "repository": {
      "url": "https://github.com/GongRzhe/MCP-Server-Creator",
      "source": "github",
      "stars": 23,
      "lastUpdated": "2025-08-15T01:10:07Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "mcp-server-creator",
    "serverConfig": {
      "type": "stdio",
      "command": "uvx",
      "args": [
        "mcp-server-creator"
      ]
    }
  },
  {
    "id": "mcp-server-generator:06c6ed24",
    "icon": null,
    "name": "MCP Server Generator",
    "description": "An MCP server that creates and manages  MCP servers! Helps both non-technical users and developers build custom JavaScript MCP servers with AI guidance, automatic dependency management, and Claude Desktop integration.",
    "repository": {
      "url": "https://github.com/SerhatUzbas/mcp-server-generator",
      "source": "github",
      "stars": 9,
      "lastUpdated": "2025-07-31T20:30:18Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "mcp-server-generator",
    "serverConfig": {
      "type": "stdio",
      "command": "node",
      "args": [
        "/Users/username/Documents/GitHub/mcprotocol/creator-server.js"
      ]
    }
  },
  {
    "id": "mcp-stdio-to-streamable-http-adapter:e53d229b",
    "icon": null,
    "name": "MCP STDIO to Streamable HTTP Adapter",
    "description": "Connect to Streamable HTTP MCP Servers even if the MCP Client only supports STDIO.",
    "repository": {
      "url": "https://github.com/pyroprompts/mcp-stdio-to-streamable-http-adapter",
      "source": "github",
      "stars": 13,
      "lastUpdated": "2025-08-06T22:35:44Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "mcp-stdio-to-streamable-http-adapter",
    "serverConfig": {
      "type": "stdio",
      "command": "npx",
      "args": [
        "@pyroprompts/mcp-stdio-to-streamable-http-adapter"
      ],
      "env": {
        "URI": "http://localhost:3002/mcp",
        "MCP_NAME": "local-custom-streamable-http-adapter"
      }
    }
  },
  {
    "id": "mcp-ambari-api:b7078556",
    "icon": null,
    "name": "MCP-Ambari-API",
    "description": "Model Context Protocol (MCP) server for Apache Ambari API integration. This project provides tools for managing Hadoop clusters, including service operations, configuration management, status monitoring, and request tracking.",
    "repository": {
      "url": "https://github.com/call518/MCP-Ambari-API",
      "source": "github",
      "stars": 1,
      "lastUpdated": "2025-08-17T00:12:33Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "mcp-ambari-api",
    "serverConfig": {
      "type": "stdio",
      "command": "uvx",
      "args": [
        "--python",
        "3.11",
        "mcp-ambari-api"
      ],
      "env": {
        "AMBARI_HOST": "host.docker.internal",
        "AMBARI_PORT": "8080",
        "AMBARI_USER": "admin",
        "AMBARI_PASS": "admin",
        "AMBARI_CLUSTER_NAME": "TEST-AMBARI",
        "AMBARI_LOG_LEVEL": "INFO"
      }
    }
  },
  {
    "id": "mcp-containerd:4da76b5d",
    "icon": null,
    "name": "mcp-containerd",
    "description": "The containerd MCP implemented by Rust supports the operation of the CRI interface.",
    "repository": {
      "url": "https://github.com/jokemanfire/mcp-containerd",
      "source": "github",
      "stars": 49,
      "lastUpdated": "2025-08-13T20:01:00Z"
    },
    "tags": [
      "community"
    ]
  },
  {
    "id": "mcp-database-server:04763358",
    "icon": null,
    "name": "MCP-Database-Server",
    "description": "Fastest way to interact with your Database such as SQL Server, SQLite and PostgreSQL",
    "repository": {
      "url": "https://github.com/executeautomation/mcp-database-server",
      "source": "github",
      "stars": 154,
      "lastUpdated": "2025-08-15T14:13:18Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "mcp-database-server",
    "serverConfig": {
      "type": "stdio",
      "command": "npx",
      "args": [
        "-y",
        "@executeautomation/database-server",
        "/path/to/your/database.db"
      ]
    }
  },
  {
    "id": "mcp-grep:8a39ded9",
    "icon": null,
    "name": "mcp-grep",
    "description": "Python-based MCP server that brings grep functionality to LLMs. Supports common grep features including pattern searching, case-insensitive matching, context lines, and recursive directory searches.",
    "repository": {
      "url": "https://github.com/erniebrodeur/mcp-grep",
      "source": "github",
      "stars": 13,
      "lastUpdated": "2025-08-08T18:30:30Z"
    },
    "tags": [
      "community"
    ]
  },
  {
    "id": "mcp-k8s-go:ff372a9f",
    "icon": null,
    "name": "mcp-k8s-go",
    "description": "Golang-based Kubernetes server for MCP to browse pods and their logs, events, namespaces and more. Built to be extensible.",
    "repository": {
      "url": "https://github.com/strowk/mcp-k8s-go",
      "source": "github",
      "stars": 339,
      "lastUpdated": "2025-08-16T17:44:58Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "mcp-k8s-go",
    "serverConfig": {
      "type": "stdio",
      "command": "npx",
      "args": [
        "@strowk/mcp-k8s"
      ]
    }
  },
  {
    "id": "mcp-local-rag:335ac572",
    "icon": null,
    "name": "mcp-local-rag",
    "description": "\"primitive\" RAG-like web search model context protocol (MCP) server that runs locally using Google's MediaPipe Text Embedder and DuckDuckGo Search.",
    "repository": {
      "url": "https://github.com/nkapila6/mcp-local-rag",
      "source": "github",
      "stars": 69,
      "lastUpdated": "2025-08-16T03:55:40Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "mcp-local-rag",
    "serverConfig": {
      "type": "stdio",
      "command": "uvx",
      "args": [
        "--python=3.10",
        "--from",
        "git+https://github.com/nkapila6/mcp-local-rag",
        "mcp-local-rag"
      ]
    }
  },
  {
    "id": "mcp-mcp:17d2f1ec",
    "icon": null,
    "name": "mcp-mcp",
    "description": "Meta-MCP Server that acts as a tool discovery service for MCP clients.",
    "repository": {
      "url": "https://github.com/wojtyniak/mcp-mcp",
      "source": "github",
      "stars": 9,
      "lastUpdated": "2025-08-17T00:35:11Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "mcp-mcp",
    "serverConfig": {
      "type": "stdio",
      "command": "uvx",
      "args": [
        "mcp-mcp"
      ]
    }
  },
  {
    "id": "mcp-meme-sticky:c894b7e8",
    "icon": null,
    "name": "mcp-meme-sticky",
    "description": "Make memes or stickers using MCP server for WhatsApp or Telegram.",
    "repository": {
      "url": "https://github.com/nkapila6/mcp-meme-sticky",
      "source": "github",
      "stars": 9,
      "lastUpdated": "2025-08-03T12:13:00Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "mcp-meme-sticky",
    "serverConfig": {
      "type": "stdio",
      "command": "uvx",
      "args": [
        "--python=3.10",
        "--from",
        "git+https://github.com/nkapila6/mcp-meme-sticky",
        "mcp-sticky"
      ]
    }
  },
  {
    "id": "mcp-nixos:1eab7e54",
    "icon": null,
    "name": "MCP-NixOS",
    "description": "A Model Context Protocol server that provides AI assistants with accurate, real-time information about NixOS packages, system options, Home Manager settings, and nix-darwin macOS configurations.",
    "repository": {
      "url": "https://github.com/utensils/mcp-nixos",
      "source": "github",
      "stars": 235,
      "lastUpdated": "2025-08-17T02:44:39Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "mcp-nixos",
    "serverConfig": {
      "type": "stdio",
      "command": "uvx",
      "args": [
        "mcp-nixos"
      ]
    }
  },
  {
    "id": "mcp-open-library:6d7f146b",
    "icon": null,
    "name": "mcp-open-library",
    "description": "A Model Context Protocol (MCP) server for the Open Library API that enables AI assistants to search for book and author information.",
    "repository": {
      "url": "https://github.com/8enSmith/mcp-open-library",
      "source": "github",
      "stars": 29,
      "lastUpdated": "2025-08-14T15:52:41Z"
    },
    "tags": [
      "community"
    ]
  },
  {
    "id": "mcp-proxy:41829c4b",
    "icon": null,
    "name": "mcp-proxy",
    "description": "Connect to MCP servers that run on SSE transport, or expose stdio servers as an SSE server.",
    "repository": {
      "url": "https://github.com/sparfenyuk/mcp-proxy",
      "source": "github",
      "stars": 1520,
      "lastUpdated": "2025-08-16T21:59:58Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "mcp-proxy",
    "serverConfig": {
      "type": "stdio",
      "command": "uvx",
      "args": [
        "mcp-server-fetch"
      ]
    }
  },
  {
    "id": "mcp-read-website-fast:b8c7153a",
    "icon": null,
    "name": "mcp-read-website-fast",
    "description": "Fast, token-efficient web content extraction that converts websites to clean Markdown. Features Mozilla Readability, smart caching, polite crawling with robots.txt support, and concurrent fetching with minimal dependencies.",
    "repository": {
      "url": "https://github.com/just-every/mcp-read-website-fast",
      "source": "github",
      "stars": 66,
      "lastUpdated": "2025-08-15T07:30:02Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "mcp-read-website-fast",
    "serverConfig": {
      "type": "stdio",
      "command": "npx",
      "args": [
        "-y",
        "@just-every/mcp-read-website-fast"
      ]
    }
  },
  {
    "id": "mcp-salesforce:8b2dfb48",
    "icon": null,
    "name": "mcp-salesforce",
    "description": "MCP server with basic demonstration of interactions with your Salesforce instance",
    "repository": {
      "url": "https://github.com/lciesielski/mcp-salesforce-example",
      "source": "github",
      "stars": 5,
      "lastUpdated": "2025-07-17T03:23:33Z"
    },
    "tags": [
      "community"
    ]
  },
  {
    "id": "mcp-sanctions:ac735a81",
    "icon": null,
    "name": "mcp-sanctions",
    "description": "Screen individuals and organizations against global sanctions lists (OFAC, SDN, UN, etc). Query by prompt or document upload.",
    "repository": {
      "url": "https://github.com/madupay/mcp-sanctions",
      "source": "github",
      "stars": 1,
      "lastUpdated": "2025-06-23T20:55:50Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "mcp-sanctions",
    "serverConfig": {
      "type": "stdio",
      "command": "/path/to/your/node",
      "args": [
        "/path/to/your/mcp-ofac/index.js"
      ],
      "env": {
        "OFAC_API_API_KEY": "YOUR_API_KEY_HERE"
      }
    }
  },
  {
    "id": "mcp-screenshot-website-fast:d72b5d61",
    "icon": null,
    "name": "mcp-screenshot-website-fast",
    "description": "High-quality screenshot capture optimized for Claude Vision API. Automatically tiles full pages into 1072x1072 chunks (1.15 megapixels) with configurable viewports and wait strategies for dynamic content.",
    "repository": {
      "url": "https://github.com/just-every/mcp-screenshot-website-fast",
      "source": "github",
      "stars": 71,
      "lastUpdated": "2025-08-16T23:22:21Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "mcp-screenshot-website-fast",
    "serverConfig": {
      "type": "stdio",
      "command": "npx",
      "args": [
        "-y",
        "@just-every/mcp-screenshot-website-fast"
      ]
    }
  },
  {
    "id": "mcp-server-leetcode:0679d377",
    "icon": null,
    "name": "mcp-server-leetcode",
    "description": "Practice and retrieve problems from LeetCode. Automate problem retrieval, solutions, and insights for coding practice and competitions.",
    "repository": {
      "url": "https://github.com/doggybee/mcp-server-leetcode",
      "source": "github",
      "stars": 24,
      "lastUpdated": "2025-08-13T06:56:21Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "mcp-server-leetcode",
    "serverConfig": {
      "type": "stdio",
      "command": "mcp-server-leetcode"
    }
  },
  {
    "id": "mcp-swagger-server:ee0009e8",
    "icon": null,
    "name": "Mcp-Swagger-Server",
    "description": "",
    "repository": {
      "url": "https://github.com/zaizaizhao/mcp-swagger-server",
      "source": "github",
      "stars": 18,
      "lastUpdated": "2025-08-16T13:01:11Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "mcp-swagger-server",
    "serverConfig": {
      "type": "stdio",
      "command": "mcp-swagger-server",
      "args": [
        "--openapi",
        "https://petstore.swagger.io/v2/swagger.json",
        "--transport",
        "stdio"
      ]
    }
  },
  {
    "id": "mcp-vision:69ae9a87",
    "icon": null,
    "name": "mcp-vision",
    "description": "An MCP server exposing HuggingFace computer vision models such as zero-shot object detection as tools, enhancing the vision capabilities of large language or vision-language models.",
    "repository": {
      "url": "https://github.com/groundlight/mcp-vision",
      "source": "github",
      "stars": 36,
      "lastUpdated": "2025-08-13T08:19:31Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "mcp-vision",
    "serverConfig": {
      "type": "stdio",
      "command": "docker",
      "args": [
        "run",
        "-i",
        "--rm",
        "--runtime=nvidia",
        "--gpus",
        "all",
        "mcp-vision"
      ],
      "env": {}
    }
  },
  {
    "id": "mcp-weather:170ef4c0",
    "icon": null,
    "name": "mcp-weather",
    "description": "Accurate weather forecasts via the AccuWeather API (free tier available).",
    "repository": {
      "url": "https://github.com/TimLukaHorstmann/mcp-weather",
      "source": "github",
      "stars": 17,
      "lastUpdated": "2025-08-13T23:32:43Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "mcp-weather",
    "serverConfig": {
      "type": "stdio",
      "command": "npx",
      "args": [
        "-y",
        "@timlukahorstmann/mcp-weather"
      ],
      "env": {
        "ACCUWEATHER_API_KEY": "your_api_key_here"
      }
    }
  },
  {
    "id": "mcp-youtube-extract:4f945feb",
    "icon": null,
    "name": "mcp-youtube-extract",
    "description": "A Model Context Protocol server for YouTube operations, extracting video information and transcripts with intelligent fallback logic. Features comprehensive logging, error handling, and support for both auto-generated and manual transcripts.",
    "repository": {
      "url": "https://github.com/sinjab/mcp_youtube_extract",
      "source": "github",
      "stars": 10,
      "lastUpdated": "2025-08-14T09:57:41Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "mcp-youtube-extract",
    "serverConfig": {
      "type": "stdio",
      "command": "mcp_youtube_extract",
      "env": {
        "YOUTUBE_API_KEY": "your_youtube_api_key"
      }
    }
  },
  {
    "id": "mcp-weather:3e7e2be6",
    "icon": null,
    "name": "mcp_weather",
    "description": "Get weather information from https://api.open-meteo.com API.",
    "repository": {
      "url": "https://github.com/isdaniel/mcp_weather_server",
      "source": "github",
      "stars": 16,
      "lastUpdated": "2025-08-05T06:41:12Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "mcp-weather",
    "serverConfig": {
      "type": "stdio",
      "command": "python",
      "args": [
        "-m",
        "mcp_weather_server"
      ]
    }
  },
  {
    "id": "mcpfinder:05551c2c",
    "icon": null,
    "name": "MCPfinder",
    "description": "The AI Agent's \"App Store\": Discover, install, and monetize AI capabilities — all within the MCP ecosystem.",
    "repository": {
      "url": "https://github.com/mcpfinder/server",
      "source": "github",
      "stars": 6,
      "lastUpdated": "2025-07-31T21:04:27Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "mcpfinder",
    "serverConfig": {
      "type": "stdio",
      "command": "npx",
      "args": [
        "-y",
        "@mcpfinder/server"
      ]
    }
  },
  {
    "id": "mcpignore-filesytem:d04a1d31",
    "icon": null,
    "name": "MCPIgnore Filesytem",
    "description": "A Data Security First filesystem MCP server that implements .mcpignore to prevent MCP clients from accessing sensitive data.",
    "repository": {
      "url": "https://github.com/CyberhavenInc/filesystem-mcpignore",
      "source": "github",
      "stars": 2,
      "lastUpdated": "2025-07-16T07:27:58Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "mcpignore-filesytem",
    "serverConfig": {
      "type": "stdio",
      "command": "npx",
      "args": [
        "-y",
        "@cyberhaven/mcpignore-filesystem",
        "/Users/<username>/Desktop",
        "/path/to/other/allowed/dir"
      ]
    }
  },
  {
    "id": "mcpjungle:fc218a1d",
    "icon": null,
    "name": "MCPJungle",
    "description": "Self-hosted MCP Registry and Gateway for enterprise AI Agents",
    "repository": {
      "url": "https://github.com/mcpjungle/MCPJungle",
      "source": "github",
      "stars": 330,
      "lastUpdated": "2025-08-17T01:22:29Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "mcpjungle",
    "serverConfig": {
      "type": "stdio",
      "command": "npx",
      "args": [
        "mcp-remote",
        "http://localhost:8080/mcp",
        "--allow-http"
      ]
    }
  },
  {
    "id": "md2doc:8e66f25c",
    "icon": null,
    "name": "Md2doc",
    "description": "Convert Markdown text to DOCX format using an external conversion service",
    "repository": {
      "url": "https://github.com/Yorick-Ryu/md2doc-mcp",
      "source": "github",
      "stars": 1,
      "lastUpdated": "2025-08-13T15:51:03Z"
    },
    "tags": [
      "community"
    ]
  },
  {
    "id": "measurespace-mcp:da133f3c",
    "icon": null,
    "name": "MeasureSpace MCP",
    "description": "A free Model Context Protocol (MCP) Server that provides global weather, climate, air quality forecast and geocoding services by measurespace.io.",
    "repository": {
      "url": "https://github.com/MeasureSpace/measure-space-mcp-server",
      "source": "github",
      "stars": 1,
      "lastUpdated": "2025-07-09T18:04:48Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "measurespace-mcp",
    "serverConfig": {
      "type": "stdio",
      "command": "/<your_uv_path>/uv",
      "args": [
        "--directory",
        "/<your-measure-space-mcp-server-folder-path>/measure-space-mcp-server",
        "run",
        "main.py"
      ]
    }
  },
  {
    "id": "mediawiki:988eaa37",
    "icon": null,
    "name": "MediaWiki",
    "description": "A Model Context Protocol (MCP) Server that interacts with any MediaWiki wiki",
    "repository": {
      "url": "https://github.com/ProfessionalWiki/MediaWiki-MCP-Server",
      "source": "github",
      "stars": 14,
      "lastUpdated": "2025-08-15T16:32:54Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "mediawiki",
    "serverConfig": {
      "type": "stdio",
      "command": "npx",
      "args": [
        "@professional-wiki/mediawiki-mcp-server@latest"
      ]
    }
  },
  {
    "id": "mediawiki-mcp-adapter:4db2a4f1",
    "icon": null,
    "name": "MediaWiki MCP adapter",
    "description": "A custom Model Context Protocol adapter for MediaWiki and WikiBase APIs",
    "repository": {
      "url": "https://github.com/lucamauri/MediaWiki-MCP-adapter",
      "source": "github",
      "stars": 4,
      "lastUpdated": "2025-07-06T21:21:06Z"
    },
    "tags": [
      "community"
    ]
  },
  {
    "id": "medrxiv:565145eb",
    "icon": null,
    "name": "medRxiv",
    "description": "Enable AI assistants to search and access medRxiv papers through a simple MCP interface.",
    "repository": {
      "url": "https://github.com/JackKuo666/medRxiv-MCP-Server",
      "source": "github",
      "stars": 6,
      "lastUpdated": "2025-07-29T12:23:22Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "medrxiv",
    "serverConfig": {
      "type": "stdio",
      "command": "python",
      "args": [
        "-m",
        "medrxiv-mcp-server"
      ]
    }
  },
  {
    "id": "mem0-mcp:f30c01b0",
    "icon": null,
    "name": "mem0-mcp",
    "description": "A Model Context Protocol server for Mem0, which helps with managing coding preferences.",
    "repository": {
      "url": "https://github.com/mem0ai/mem0-mcp",
      "source": "github",
      "stars": 428,
      "lastUpdated": "2025-08-16T16:10:19Z"
    },
    "tags": [
      "community"
    ]
  },
  {
    "id": "membase:91c8f61c",
    "icon": null,
    "name": "Membase",
    "description": "Save and query your agent memory in distributed way by Membase.",
    "repository": {
      "url": "https://github.com/unibaseio/membase-mcp",
      "source": "github",
      "stars": 10,
      "lastUpdated": "2025-08-06T07:54:05Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "membase",
    "serverConfig": {
      "type": "stdio",
      "command": "uv",
      "args": [
        "--directory",
        "path/to/membase-mcp",
        "run",
        "src/membase_mcp/server.py"
      ],
      "env": {
        "MEMBASE_ACCOUNT": "your account, 0x...",
        "MEMBASE_CONVERSATION_ID": "your conversation id, should be unique",
        "MEMBASE_ID": "your sub account, any string"
      }
    }
  },
  {
    "id": "meme-mcp:b18d11b8",
    "icon": null,
    "name": "Meme MCP",
    "description": "Generate memes via AI using the Imgflip API through the Model Context Protocol.",
    "repository": {
      "url": "https://github.com/lidorshimoni/meme-mcp",
      "source": "github",
      "stars": 1,
      "lastUpdated": "2025-08-08T02:44:48Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "meme-mcp",
    "serverConfig": {
      "type": "stdio",
      "command": "npx",
      "args": [
        "-y",
        "meme-mcp"
      ],
      "env": {
        "IMGFLIP_USERNAME": "<IMGFLIP USERNAME>",
        "IMGFLIP_PASSWORD": "<IMGFLIP PASSWORD>"
      }
    }
  },
  {
    "id": "memento-mcp:7bed540f",
    "icon": null,
    "name": "memento-mcp",
    "description": "Knowledge graph memory system built on Neo4j with semantic search, temporal awareness.",
    "repository": {
      "url": "https://github.com/gannonh/memento-mcp",
      "source": "github",
      "stars": 176,
      "lastUpdated": "2025-08-16T16:59:37Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "memento-mcp",
    "serverConfig": {
      "type": "stdio",
      "command": "npx",
      "args": [
        "-y",
        "@gannonh/memento-mcp"
      ],
      "env": {
        "MEMORY_STORAGE_TYPE": "neo4j",
        "NEO4J_URI": "bolt://127.0.0.1:7687",
        "NEO4J_USERNAME": "neo4j",
        "NEO4J_PASSWORD": "memento_password",
        "NEO4J_DATABASE": "neo4j",
        "NEO4J_VECTOR_INDEX": "entity_embeddings",
        "NEO4J_VECTOR_DIMENSIONS": "1536",
        "NEO4J_SIMILARITY_FUNCTION": "cosine",
        "OPENAI_API_KEY": "your-openai-api-key",
        "OPENAI_EMBEDDING_MODEL": "text-embedding-3-small",
        "DEBUG": "true"
      }
    }
  },
  {
    "id": "meta-ads-remote-mcp:67cd70c6",
    "icon": null,
    "name": "Meta Ads Remote MCP",
    "description": "Remote MCP server to interact with Meta Ads API - access, analyze, and manage Facebook, Instagram, and other Meta platforms advertising campaigns.",
    "repository": {
      "url": "https://github.com/pipeboard-co/meta-ads-mcp",
      "source": "github",
      "stars": 217,
      "lastUpdated": "2025-08-16T15:48:26Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "meta-ads-remote-mcp",
    "serverConfig": {
      "type": "streamable",
      "url": "https://mcp.pipeboard.co/meta-ads-mcp"
    }
  },
  {
    "id": "metatrader-mcp:880afe91",
    "icon": null,
    "name": "MetaTrader MCP",
    "description": "Enable AI LLMs to execute trades using MetaTrader 5 platform.",
    "repository": {
      "url": "https://github.com/ariadng/metatrader-mcp-server",
      "source": "github",
      "stars": 88,
      "lastUpdated": "2025-08-12T18:29:03Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "metatrader-mcp",
    "serverConfig": {
      "type": "stdio",
      "command": "metatrader-mcp-server",
      "args": [
        "--login",
        "<YOUR_MT5_LOGIN>",
        "--password",
        "<YOUR_MT5_PASSWORD>",
        "--server",
        "<YOUR_MT5_SERVER>"
      ]
    }
  },
  {
    "id": "metricool-mcp:53af3cd2",
    "icon": null,
    "name": "Metricool MCP",
    "description": "A Model Context Protocol server that integrates with Metricool's social media analytics platform to retrieve performance metrics and schedule content across networks like Instagram, Facebook, Twitter, LinkedIn, TikTok and YouTube.",
    "repository": {
      "url": "https://github.com/metricool/mcp-metricool",
      "source": "github",
      "stars": 15,
      "lastUpdated": "2025-08-09T20:15:06Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "metricool-mcp",
    "serverConfig": {
      "type": "stdio",
      "command": "uvx",
      "args": [
        "--upgrade",
        "mcp-metricool"
      ],
      "env": {
        "METRICOOL_USER_TOKEN": "<METRICOOL_USER_TOKEN>",
        "METRICOOL_USER_ID": "<METRICOOL_USER_ID>"
      }
    }
  },
  {
    "id": "microsoft-365:6b2d5af4",
    "icon": null,
    "name": "Microsoft 365",
    "description": "(by Merill) A Model Context Protocol (MCP) server for Microsoft 365. Includes support for all services including Teams, SharePoint, Exchange, OneDrive, Entra, Intune and more. See Lokka for more details.",
    "repository": {
      "url": "https://github.com/merill/lokka",
      "source": "github",
      "stars": 166,
      "lastUpdated": "2025-08-16T23:15:18Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "microsoft-365",
    "serverConfig": {
      "type": "stdio",
      "command": "npx",
      "args": [
        "-y",
        "@merill/lokka"
      ]
    }
  },
  {
    "id": "microsoft-365:28985dc5",
    "icon": null,
    "name": "Microsoft 365",
    "description": "MCP server that connects to Microsoft Office and the whole Microsoft 365 suite using Graph API (including Outlook/mail, files, Excel, calendar)",
    "repository": {
      "url": "https://github.com/softeria/ms-365-mcp-server",
      "source": "github",
      "stars": 210,
      "lastUpdated": "2025-08-16T17:37:00Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "microsoft-365",
    "serverConfig": {
      "type": "stdio",
      "command": "npx",
      "args": [
        "-y",
        "@softeria/ms-365-mcp-server",
        "--org-mode"
      ]
    }
  },
  {
    "id": "microsoft-365:430f865c",
    "icon": null,
    "name": "Microsoft 365",
    "description": "Single MCP server that allows to manage many different areas of Microsoft 365, for example: Entra ID, OneDrive, OneNote, Outlook, Planner, Power Apps, Power Automate, Power Platform, SharePoint Embedded, SharePoint Online, Teams, Viva Engage, and many more.",
    "repository": {
      "url": "https://github.com/pnp/cli-microsoft365-mcp-server",
      "source": "github",
      "stars": 31,
      "lastUpdated": "2025-08-15T22:50:43Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "microsoft-365",
    "serverConfig": {
      "type": "stdio",
      "command": "npx",
      "args": [
        "-y",
        "@pnp/cli-microsoft365-mcp-server@latest"
      ]
    }
  },
  {
    "id": "microsoft-365-files-sharepoint-onedrive:e1087401",
    "icon": null,
    "name": "Microsoft 365 Files (SharePoint/OneDrive)",
    "description": "",
    "repository": {
      "url": "https://github.com/godwin3737/mcp-server-microsoft365-filesearch",
      "source": "github",
      "stars": 4,
      "lastUpdated": "2025-08-02T15:45:33Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "microsoft-365-files-sharepoint-onedrive",
    "serverConfig": {
      "type": "stdio",
      "command": "uv",
      "args": [
        "--directory",
        "full_path_to_parent_directory",
        "run",
        ".\\src\\mcp_m365_filesearch\\server.py"
      ],
      "env": {
        "CLIENT_ID": "MSGraph Client ID",
        "CLIENT_SECRET": "MS Graph Client Secret",
        "TENANT_ID": "TENANT ID",
        "REGION": "SEARCH REGION"
      }
    }
  },
  {
    "id": "microsoft-teams:86afff11",
    "icon": null,
    "name": "Microsoft Teams",
    "description": "MCP server that integrates Microsoft Teams messaging (read, post, mention, list members and threads)",
    "repository": {
      "url": "https://github.com/InditexTech/mcp-teams-server",
      "source": "github",
      "stars": 299,
      "lastUpdated": "2025-08-15T05:44:40Z"
    },
    "tags": [
      "community"
    ]
  },
  {
    "id": "mifos-x:ab5b0b29",
    "icon": null,
    "name": "Mifos X",
    "description": "An MCP server for the Mifos X Open Source Banking useful for managing clients, loans, savings, shares, financial transactions and generating financial reports.",
    "repository": {
      "url": "https://github.com/openMF/mcp-mifosx",
      "source": "github",
      "stars": 13,
      "lastUpdated": "2025-08-15T00:05:09Z"
    },
    "tags": [
      "community"
    ]
  },
  {
    "id": "mikrotik:53d47888",
    "icon": null,
    "name": "Mikrotik",
    "description": "Mikrotik MCP server which cover networking operations (IP, DHCP, Firewall, etc)",
    "repository": {
      "url": "https://github.com/jeff-nasseri/mikrotik-mcp",
      "source": "github",
      "stars": 37,
      "lastUpdated": "2025-08-07T14:29:54Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "mikrotik",
    "serverConfig": {
      "type": "stdio",
      "command": "uvx",
      "args": [
        "mcp-server-mikrotik",
        "--host",
        "<HOST>",
        "--username",
        "<USERNAME>",
        "--password",
        "<PASSWORD>",
        "--port",
        "22"
      ]
    }
  },
  {
    "id": "mindmap:9a8e5a90",
    "icon": null,
    "name": "Mindmap",
    "description": "",
    "repository": {
      "url": "https://github.com/YuChenSSR/mindmap-mcp-server",
      "source": "github",
      "stars": 177,
      "lastUpdated": "2025-08-16T06:56:49Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "mindmap",
    "serverConfig": {
      "type": "stdio",
      "command": "uvx",
      "args": [
        "mindmap-mcp-server",
        "--return-type",
        "html"
      ]
    }
  },
  {
    "id": "minima:391e0979",
    "icon": null,
    "name": "Minima",
    "description": "MCP server for RAG on local files",
    "repository": {
      "url": "https://github.com/dmayboroda/minima",
      "source": "github",
      "stars": 973,
      "lastUpdated": "2025-08-16T05:52:23Z"
    },
    "tags": [
      "community"
    ]
  },
  {
    "id": "mobile-mcp:1ce46586",
    "icon": null,
    "name": "Mobile MCP",
    "description": "",
    "repository": {
      "url": "https://github.com/mobile-next/mobile-mcp",
      "source": "github",
      "stars": 1769,
      "lastUpdated": "2025-08-17T02:32:24Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "mobile-mcp",
    "serverConfig": {
      "type": "stdio",
      "command": "npx",
      "args": [
        "-y",
        "@mobilenext/mobile-mcp@latest"
      ]
    }
  },
  {
    "id": "monday-com:4a52421c",
    "icon": null,
    "name": "Monday.com",
    "description": "MCP Server to interact with Monday.com boards and items.",
    "repository": {
      "url": "https://github.com/sakce/mcp-server-monday",
      "source": "github",
      "stars": 31,
      "lastUpdated": "2025-06-17T14:19:28Z"
    },
    "tags": [
      "community"
    ]
  },
  {
    "id": "mongodb:328bba43",
    "icon": null,
    "name": "MongoDB",
    "description": "A Model Context Protocol Server for MongoDB.",
    "repository": {
      "url": "https://github.com/kiliczsh/mcp-mongo-server",
      "source": "github",
      "stars": 262,
      "lastUpdated": "2025-08-15T09:18:33Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "mongodb",
    "serverConfig": {
      "type": "stdio",
      "command": "npx",
      "args": [
        "-y",
        "mcp-mongo-server"
      ],
      "env": {
        "MCP_MONGODB_URI": "mongodb://muhammed:kilic@localhost:27017/database",
        "MCP_MONGODB_READONLY": "true"
      }
    }
  },
  {
    "id": "mongodb-mongoose:51cd796b",
    "icon": null,
    "name": "MongoDB & Mongoose",
    "description": "MongoDB MCP Server with Mongoose Schema and Validation.",
    "repository": {
      "url": "https://github.com/nabid-pf/mongo-mongoose-mcp",
      "source": "github",
      "stars": 0,
      "lastUpdated": "2025-08-11T07:50:39Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "mongodb-mongoose",
    "serverConfig": {
      "type": "stdio",
      "command": "npx",
      "args": [
        "-y",
        "mongo-mongoose-mcp"
      ],
      "env": {
        "MONGODB_URI": "<your mongodb uri>",
        "SCHEMA_PATH": "<path to the root folder of all your mongoose schema objects>"
      }
    }
  },
  {
    "id": "mongodb-lens:391152b6",
    "icon": null,
    "name": "MongoDB Lens",
    "description": "Full Featured MCP Server for MongoDB Databases.",
    "repository": {
      "url": "https://github.com/furey/mongodb-lens",
      "source": "github",
      "stars": 178,
      "lastUpdated": "2025-08-12T01:52:40Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "mongodb-lens",
    "serverConfig": {
      "type": "stdio",
      "command": "docker",
      "args": [
        "run",
        "--rm",
        "-i",
        "--network=host",
        "--pull=always",
        "furey/mongodb-lens",
        "mongodb://your-connection-string"
      ]
    }
  },
  {
    "id": "monzo:2c2b38dd",
    "icon": null,
    "name": "Monzo",
    "description": "Access and manage your Monzo bank accounts through natural language, including balance checking, pot management, transaction listing, and transaction annotation across multiple account types (personal, joint, flex).",
    "repository": {
      "url": "https://github.com/BfdCampos/monzo-mcp-bfdcampos",
      "source": "github",
      "stars": 3,
      "lastUpdated": "2025-07-14T20:38:57Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "monzo",
    "serverConfig": {
      "type": "stdio",
      "command": "/Users/[Your Home Directory]/.local/bin/uv",
      "args": [
        "run",
        "--with",
        "mcp[cli],requests",
        "mcp",
        "run",
        "/path/to/your/monzo-mcp-bfdcampos/monzo-mcp-bfdcampos/main.py"
      ]
    }
  },
  {
    "id": "morningstar:4aa72f9e",
    "icon": null,
    "name": "Morningstar",
    "description": "MCP Server to interact with Morningstar Research, Editorial and Datapoints",
    "repository": {
      "url": "https://github.com/Morningstar/morningstar-mcp-server",
      "source": "github",
      "stars": 16,
      "lastUpdated": "2025-08-13T22:27:02Z"
    },
    "tags": [
      "community"
    ]
  },
  {
    "id": "mssql:98febf8b",
    "icon": null,
    "name": "MSSQL",
    "description": "MSSQL database integration with configurable access controls and schema inspection",
    "repository": {
      "url": "https://github.com/aekanun2020/mcp-server/",
      "source": "github",
      "stars": 1,
      "lastUpdated": "2025-08-05T03:05:44Z"
    },
    "tags": [
      "community"
    ]
  },
  {
    "id": "mssql:a8a9c489",
    "icon": null,
    "name": "MSSQL",
    "description": "",
    "repository": {
      "url": "https://github.com/JexinSam/mssql_mcp_server",
      "source": "github",
      "stars": 44,
      "lastUpdated": "2025-08-06T22:48:56Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "mssql",
    "serverConfig": {
      "type": "stdio",
      "command": "uv",
      "args": [
        "--directory",
        "path/to/mssql_mcp_server",
        "run",
        "mssql_mcp_server"
      ],
      "env": {
        "MSSQL_DRIVER": "mssql_driver",
        "MSSQL_HOST": "localhost",
        "MSSQL_USER": "your_username",
        "MSSQL_PASSWORD": "your_password",
        "MSSQL_DATABASE": "your_database"
      }
    }
  },
  {
    "id": "mssql-mcp:5c468857",
    "icon": null,
    "name": "MSSQL-MCP",
    "description": "",
    "repository": {
      "url": "https://github.com/daobataotie/mssql-mcp",
      "source": "github",
      "stars": 37,
      "lastUpdated": "2025-07-31T13:17:31Z"
    },
    "tags": [
      "community"
    ]
  },
  {
    "id": "mssql-mcp-node:8f4af343",
    "icon": null,
    "name": "MSSQL-MCP-Node",
    "description": "",
    "repository": {
      "url": "https://github.com/mihai-dulgheru/mssql-mcp-node",
      "source": "github",
      "stars": 5,
      "lastUpdated": "2025-08-13T06:50:32Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "mssql-mcp-node",
    "serverConfig": {
      "type": "stdio",
      "command": "npx",
      "args": [
        "-y",
        "mssql-mcp-node"
      ],
      "env": {
        "MSSQL_SERVER": "your_server_name",
        "MSSQL_PORT": "1433",
        "MSSQL_USER": "your_username",
        "MSSQL_PASSWORD": "your_password",
        "MSSQL_DATABASE": "your_database",
        "MSSQL_ENCRYPT": "true",
        "MSSQL_TRUST_SERVER_CERTIFICATE": "false"
      }
    }
  },
  {
    "id": "mssql-python:7a8160e4",
    "icon": null,
    "name": "MSSQL-Python",
    "description": "",
    "repository": {
      "url": "https://github.com/amornpan/py-mcp-mssql",
      "source": "github",
      "stars": 22,
      "lastUpdated": "2025-07-22T13:02:44Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "mssql-python",
    "serverConfig": {
      "type": "stdio",
      "command": "python",
      "args": [
        "server.py"
      ],
      "env": {
        "MSSQL_SERVER": "your_server",
        "MSSQL_DATABASE": "your_database",
        "MSSQL_USER": "your_username",
        "MSSQL_PASSWORD": "your_password",
        "MSSQL_DRIVER": "{ODBC Driver 17 for SQL Server}"
      }
    }
  },
  {
    "id": "multi-model-advisor:f6ac94a4",
    "icon": null,
    "name": "Multi-Model Advisor",
    "description": "A Model Context Protocol (MCP) server that orchestrates queries across multiple Ollama models, synthesizing their insights to deliver a comprehensive and multifaceted AI perspective on any given query.",
    "repository": {
      "url": "https://github.com/YuChenSSR/multi-ai-advisor-mcp",
      "source": "github",
      "stars": 60,
      "lastUpdated": "2025-08-06T19:29:11Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "multi-model-advisor",
    "serverConfig": {
      "type": "stdio",
      "command": "node",
      "args": [
        "/absolute/path/to/multi-ai-advisor-mcp/build/index.js"
      ]
    }
  },
  {
    "id": "multicluster-mcp-sever:e947e6bc",
    "icon": null,
    "name": "Multicluster-MCP-Sever",
    "description": "The gateway for GenAI systems to interact with multiple Kubernetes clusters.",
    "repository": {
      "url": "https://github.com/yanmxa/multicluster-mcp-server",
      "source": "github",
      "stars": 4,
      "lastUpdated": "2025-08-16T13:50:31Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "multicluster-mcp-sever",
    "serverConfig": {
      "type": "stdio",
      "command": "npx",
      "args": [
        "-y",
        "multicluster-mcp-server@latest"
      ]
    }
  },
  {
    "id": "mysql:3cc72101",
    "icon": null,
    "name": "MySQL",
    "description": "",
    "repository": {
      "url": "https://github.com/benborla/mcp-server-mysql",
      "source": "github",
      "stars": 719,
      "lastUpdated": "2025-08-15T06:21:56Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "mysql",
    "serverConfig": {
      "type": "streamableHttp",
      "url": "http://your-host:3000/mcp",
      "headers": {
        "Authorization": "Bearer <REMOTE_SECRET_KEY>"
      }
    }
  },
  {
    "id": "mysql:f77010f7",
    "icon": null,
    "name": "MySQL",
    "description": "",
    "repository": {
      "url": "https://github.com/designcomputer/mysql_mcp_server",
      "source": "github",
      "stars": 784,
      "lastUpdated": "2025-08-17T00:13:58Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "mysql",
    "serverConfig": {
      "type": "stdio",
      "command": "uv",
      "args": [
        "--directory",
        "path/to/mysql_mcp_server",
        "run",
        "mysql_mcp_server"
      ],
      "env": {
        "MYSQL_HOST": "localhost",
        "MYSQL_PORT": "3306",
        "MYSQL_USER": "your_username",
        "MYSQL_PASSWORD": "your_password",
        "MYSQL_DATABASE": "your_database"
      }
    }
  },
  {
    "id": "mysql-server:7a5bf2b1",
    "icon": null,
    "name": "MySQL-Server",
    "description": "",
    "repository": {
      "url": "https://github.com/tonycai/mcp-mysql-server",
      "source": "github",
      "stars": 1,
      "lastUpdated": "2025-08-09T10:03:19Z"
    },
    "tags": [
      "community"
    ]
  },
  {
    "id": "n8n:d659b47e",
    "icon": null,
    "name": "n8n",
    "description": "This MCP server provides tools and resources for AI assistants to manage n8n workflows and executions, including listing, creating, updating, and deleting workflows, as well as monitoring their execution status.",
    "repository": {
      "url": "https://github.com/leonardsellem/n8n-mcp-server",
      "source": "github",
      "stars": 1105,
      "lastUpdated": "2025-08-16T22:52:33Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "n8n",
    "serverConfig": {
      "type": "stdio",
      "command": "node",
      "args": [
        "/path/to/your/cloned/n8n-mcp-server/build/index.js"
      ],
      "env": {
        "N8N_API_URL": "http://your-n8n-instance:5678/api/v1",
        "N8N_API_KEY": "YOUR_N8N_API_KEY"
      }
    }
  },
  {
    "id": "nacos-mcp-router:b272421e",
    "icon": null,
    "name": "Nacos MCP Router",
    "description": "This MCP(Model Context Protocol) Server provides tools to search, install, proxy other MCP servers.",
    "repository": {
      "url": "https://github.com/nacos-group/nacos-mcp-router",
      "source": "github",
      "stars": 133,
      "lastUpdated": "2025-08-15T03:16:29Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "nacos-mcp-router",
    "serverConfig": {
      "type": "stdio",
      "command": "uvx",
      "args": [
        "nacos-mcp-router@latest"
      ],
      "env": {
        "NACOS_ADDR": "<NACOS-ADDR>, optional, default is 127.0.0.1:8848",
        "NACOS_USERNAME": "<NACOS-USERNAME>, optional, default is nacos",
        "NACOS_PASSWORD": "<NACOS-PASSWORD>, required"
      }
    }
  },
  {
    "id": "nasa:97a6f3e9",
    "icon": null,
    "name": "NASA",
    "description": "",
    "repository": {
      "url": "https://github.com/ProgramComputer/NASA-MCP-server",
      "source": "github",
      "stars": 66,
      "lastUpdated": "2025-08-14T14:18:05Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "nasa",
    "serverConfig": {
      "type": "stdio",
      "command": "npx",
      "args": [
        "-y",
        "@programcomputer/nasa-mcp-server@latest"
      ],
      "env": {
        "NASA_API_KEY": "your-api-key"
      }
    }
  },
  {
    "id": "nasa-image-mcp-server:8be0cf83",
    "icon": null,
    "name": "NASA Image MCP Server",
    "description": "MCP server providing access to NASA's visual data APIs including Mars Rover photos, Earth satellite imagery (EPIC/GIBS), and Astronomy picture of the day. Features built-in image analysis tools with automatic format detection, compression, and base64 conversion for LLM integration.",
    "repository": {
      "url": "https://github.com/adithya1012/NASA-MCP-Server/blob/main/README.md",
      "source": "github",
      "stars": 1,
      "lastUpdated": "2025-08-06T21:29:27Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "nasa-image-mcp-server",
    "serverConfig": {
      "type": "stdio",
      "command": "uvx",
      "args": [
        "nasa-mcp-server"
      ],
      "env": {
        "NASA_API_KEY": "YOUR_NASA_API_KEY_HERE"
      }
    }
  },
  {
    "id": "nasdaq-data-link:afe846a5",
    "icon": null,
    "name": "Nasdaq Data Link",
    "description": "",
    "repository": {
      "url": "https://github.com/stefanoamorelli/nasdaq-data-link-mcp",
      "source": "github",
      "stars": 34,
      "lastUpdated": "2025-08-13T21:14:30Z"
    },
    "tags": [
      "community"
    ]
  },
  {
    "id": "national-parks:45fccfb7",
    "icon": null,
    "name": "National Parks",
    "description": "The server provides latest information of park details, alerts, visitor centers, campgrounds, hiking trails, and events for U.S. National Parks.",
    "repository": {
      "url": "https://github.com/KyrieTangSheng/mcp-server-nationalparks",
      "source": "github",
      "stars": 24,
      "lastUpdated": "2025-08-16T19:43:46Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "national-parks",
    "serverConfig": {
      "type": "stdio",
      "command": "npx",
      "args": [
        "-y",
        "mcp-server-nationalparks"
      ],
      "env": {
        "NPS_API_KEY": "YOUR_NPS_API_KEY"
      }
    }
  },
  {
    "id": "naver:ffc471c9",
    "icon": null,
    "name": "NAVER",
    "description": "",
    "repository": {
      "url": "https://github.com/pfldy2850/py-mcp-naver",
      "source": "github",
      "stars": 109,
      "lastUpdated": "2025-08-06T23:54:02Z"
    },
    "tags": [
      "community"
    ]
  },
  {
    "id": "naver:c8a0a35e",
    "icon": null,
    "name": "Naver",
    "description": "",
    "repository": {
      "url": "https://github.com/isnow890/naver-search-mcp",
      "source": "github",
      "stars": 35,
      "lastUpdated": "2025-08-16T11:36:28Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "naver",
    "serverConfig": {
      "type": "stdio",
      "command": "npx",
      "args": [
        "-y",
        "@isnow890/naver-search-mcp"
      ],
      "env": {
        "NAVER_CLIENT_ID": "your_client_id",
        "NAVER_CLIENT_SECRET": "your_client_secret"
      }
    }
  },
  {
    "id": "nba:9ae55153",
    "icon": null,
    "name": "NBA",
    "description": "This MCP server provides tools to fetch recent and historical NBA games including basic and advanced statistics.",
    "repository": {
      "url": "https://github.com/Taidgh-Robinson/nba-mcp-server",
      "source": "github",
      "stars": 8,
      "lastUpdated": "2025-08-13T03:57:13Z"
    },
    "tags": [
      "community"
    ]
  },
  {
    "id": "neo4j:790cf66f",
    "icon": null,
    "name": "Neo4j",
    "description": "A community built server that interacts with Neo4j Graph Database.",
    "repository": {
      "url": "https://github.com/da-okazaki/mcp-neo4j-server",
      "source": "github",
      "stars": 54,
      "lastUpdated": "2025-08-14T21:21:08Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "neo4j",
    "serverConfig": {
      "type": "stdio",
      "command": "npx",
      "args": [
        "@alanse/mcp-neo4j-server"
      ],
      "env": {
        "NEO4J_URI": "bolt://localhost:7687",
        "NEO4J_USERNAME": "neo4j",
        "NEO4J_PASSWORD": "your-password",
        "NEO4J_DATABASE": "neo4j"
      }
    }
  },
  {
    "id": "neovim:1a815226",
    "icon": null,
    "name": "Neovim",
    "description": "An MCP Server for your Neovim session.",
    "repository": {
      "url": "https://github.com/bigcodegen/mcp-neovim-server",
      "source": "github",
      "stars": 206,
      "lastUpdated": "2025-08-15T15:36:30Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "neovim",
    "serverConfig": {
      "type": "stdio",
      "command": "npx",
      "args": [
        "-y",
        "mcp-neovim-server"
      ],
      "env": {
        "ALLOW_SHELL_COMMANDS": "true",
        "NVIM_SOCKET_PATH": "/tmp/nvim"
      }
    }
  },
  {
    "id": "netbird:72b2f3b4",
    "icon": null,
    "name": "Netbird",
    "description": "List and analyze Netbird network peers, groups, policies, and more.",
    "repository": {
      "url": "https://github.com/aantti/mcp-netbird",
      "source": "github",
      "stars": 38,
      "lastUpdated": "2025-07-31T01:39:24Z"
    },
    "tags": [
      "community"
    ]
  },
  {
    "id": "netmind-parsepro:7ed13709",
    "icon": null,
    "name": "NetMind ParsePro",
    "description": "The PDF Parser AI service, built and customized by the NetMind team.",
    "repository": {
      "url": "https://github.com/protagolabs/Netmind-Parse-PDF-MCP",
      "source": "github",
      "stars": 5,
      "lastUpdated": "2025-08-02T20:31:36Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "netmind-parsepro",
    "serverConfig": {
      "type": "stdio",
      "command": "uvx",
      "args": [
        "netmind-parse-pdf-mcp"
      ],
      "env": {
        "NETMIND_API_TOKEN": "XXXXXXXXXXXXXXXXXXXX"
      }
    }
  },
  {
    "id": "nikto-mcp:e15fd5d9",
    "icon": null,
    "name": "Nikto MCP",
    "description": "",
    "repository": {
      "url": "https://github.com/weldpua2008/nikto-mcp",
      "source": "github",
      "stars": 1,
      "lastUpdated": "2025-08-14T08:35:04Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "nikto-mcp",
    "serverConfig": {
      "type": "stdio",
      "command": "node",
      "args": [
        "/absolute/path/to/nikto-mcp/index.js"
      ],
      "env": {
        "NIKTO_BINARY": "/usr/local/bin/nikto",
        "LOG_LEVEL": "info"
      }
    }
  },
  {
    "id": "nocodb:46887ec5",
    "icon": null,
    "name": "NocoDB",
    "description": "Read and write access to NocoDB database.",
    "repository": {
      "url": "https://github.com/edwinbernadus/nocodb-mcp-server",
      "source": "github",
      "stars": 41,
      "lastUpdated": "2025-08-14T05:11:31Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "nocodb",
    "serverConfig": {
      "type": "stdio",
      "command": "node",
      "args": [
        "{working_folder}/dist/start.js"
      ],
      "env": {
        "NOCODB_URL": "https://your-nocodb-instance.com",
        "NOCODB_BASE_ID": "your_base_id_here",
        "NOCODB_API_TOKEN": "your_api_token_here"
      }
    }
  },
  {
    "id": "node-code-sandbox:8addc7a1",
    "icon": null,
    "name": "Node Code Sandbox",
    "description": "",
    "repository": {
      "url": "https://github.com/alfonsograziano/node-code-sandbox-mcp",
      "source": "github",
      "stars": 87,
      "lastUpdated": "2025-08-14T14:18:22Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "node-code-sandbox",
    "serverConfig": {
      "type": "stdio",
      "command": "npx",
      "args": [
        "-y",
        "node-code-sandbox-mcp"
      ],
      "env": {
        "FILES_DIR": "/Users/alfonsograziano/Desktop/node-sandbox",
        "SANDBOX_MEMORY_LIMIT": "512m",
        "SANDBOX_CPU_LIMIT": "0.75"
      }
    }
  },
  {
    "id": "nomad-mcp:a576ae85",
    "icon": null,
    "name": "nomad-mcp",
    "description": "A server that provides a set of tools for managing Nomad clusters through the MCP.",
    "repository": {
      "url": "https://github.com/kocierik/mcp-nomad",
      "source": "github",
      "stars": 36,
      "lastUpdated": "2025-08-15T16:09:51Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "nomad-mcp",
    "serverConfig": {
      "type": "stdio",
      "command": "docker",
      "args": [
        "run",
        "-i",
        "--rm",
        "-e",
        "NOMAD_TOKEN=secret-token-acl-optional",
        "-e",
        "NOMAD_ADDR=http://host.docker.internal:4646",
        "mcpnomad/server:latest"
      ]
    }
  },
  {
    "id": "notion:a6ca6945",
    "icon": null,
    "name": "Notion",
    "description": "",
    "repository": {
      "url": "https://github.com/suekou/mcp-notion-server",
      "source": "github",
      "stars": 805,
      "lastUpdated": "2025-08-16T13:25:43Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "notion",
    "serverConfig": {
      "type": "stdio",
      "command": "npx",
      "args": [
        "-y",
        "@suekou/mcp-notion-server"
      ],
      "env": {
        "NOTION_API_TOKEN": "your-integration-token"
      }
    }
  },
  {
    "id": "notion:743e7755",
    "icon": null,
    "name": "Notion",
    "description": "",
    "repository": {
      "url": "https://github.com/v-3/notion-server",
      "source": "github",
      "stars": 108,
      "lastUpdated": "2025-08-16T20:49:28Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "notion",
    "serverConfig": {
      "type": "stdio",
      "command": "node",
      "args": [
        "/absolute/path/to/notion-server/build/index.js"
      ],
      "env": {
        "NOTION_API_KEY": "your_notion_api_key_here"
      }
    }
  },
  {
    "id": "ns-travel-information:4a34c84b",
    "icon": null,
    "name": "NS Travel Information",
    "description": "Access Dutch Railways (NS) real-time train travel information and disruptions through the official NS API.",
    "repository": {
      "url": "https://github.com/r-huijts/ns-mcp-server",
      "source": "github",
      "stars": 39,
      "lastUpdated": "2025-06-28T10:24:32Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "ns-travel-information",
    "serverConfig": {
      "type": "stdio",
      "command": "npx",
      "args": [
        "-y",
        "ns-mcp-server"
      ],
      "env": {
        "NS_API_KEY": "your_api_key_here"
      }
    }
  },
  {
    "id": "ntfy-mcp:0ab8709b",
    "icon": null,
    "name": "ntfy-mcp",
    "description": "",
    "repository": {
      "url": "https://github.com/teddyzxcv/ntfy-mcp",
      "source": "github",
      "stars": 36,
      "lastUpdated": "2025-08-12T03:54:47Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "ntfy-mcp",
    "serverConfig": {
      "type": "stdio",
      "command": "node",
      "args": [
        "/path/to/ntfy-mcp/build/index.js"
      ],
      "env": {
        "NTFY_TOPIC": "<your topic name>"
      }
    }
  },
  {
    "id": "ntfy-me-mcp:80412c46",
    "icon": null,
    "name": "ntfy-me-mcp",
    "description": "",
    "repository": {
      "url": "https://github.com/gitmotion/ntfy-me-mcp",
      "source": "github",
      "stars": 31,
      "lastUpdated": "2025-08-11T13:45:58Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "ntfy-me-mcp",
    "serverConfig": {
      "type": "stdio",
      "command": "npx",
      "args": [
        "ntfy-me-mcp"
      ],
      "env": {
        "NTFY_TOPIC": "your-topic-name"
      }
    }
  },
  {
    "id": "oatpp-mcp:cff50268",
    "icon": null,
    "name": "oatpp-mcp",
    "description": "C++ MCP integration for Oat++. Use Oat++ to build MCP servers.",
    "repository": {
      "url": "https://github.com/oatpp/oatpp-mcp",
      "source": "github",
      "stars": 44,
      "lastUpdated": "2025-07-16T09:29:58Z"
    },
    "tags": [
      "community"
    ]
  },
  {
    "id": "obsidian-markdown-notes:1fc5f104",
    "icon": null,
    "name": "Obsidian Markdown Notes",
    "description": "Read and search through your Obsidian vault or any directory containing Markdown notes",
    "repository": {
      "url": "https://github.com/calclavia/mcp-obsidian",
      "source": "github",
      "stars": 1060,
      "lastUpdated": "2025-08-16T22:47:51Z"
    },
    "tags": [
      "community"
    ]
  },
  {
    "id": "obsidian-mcp:8614a162",
    "icon": null,
    "name": "obsidian-mcp",
    "description": "(by Steven Stavrakis) An MCP server for Obsidian.md with tools for searching, reading, writing, and organizing notes.",
    "repository": {
      "url": "https://github.com/StevenStavrakis/obsidian-mcp",
      "source": "github",
      "stars": 486,
      "lastUpdated": "2025-08-14T21:50:00Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "obsidian-mcp",
    "serverConfig": {
      "type": "stdio",
      "command": "npx",
      "args": [
        "-y",
        "obsidian-mcp",
        "/path/to/your/vault",
        "/path/to/your/vault2"
      ]
    }
  },
  {
    "id": "oceanbase:fb7ccdfe",
    "icon": null,
    "name": "OceanBase",
    "description": "(by yuanoOo) A Model Context Protocol (MCP) server that enables secure interaction with OceanBase databases.",
    "repository": {
      "url": "https://github.com/yuanoOo/oceanbase_mcp_server",
      "source": "github",
      "stars": 3,
      "lastUpdated": "2025-04-27T21:56:08Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "oceanbase",
    "serverConfig": {
      "type": "stdio",
      "command": "uv",
      "args": [
        "--directory",
        "path/to/oceanbase_mcp_server",
        "run",
        "oceanbase_mcp_server"
      ],
      "env": {
        "OB_HOST": "localhost",
        "OB_PORT": "2881",
        "OB_USER": "your_username",
        "OB_PASSWORD": "your_password",
        "OB_DATABASE": "your_database"
      }
    }
  },
  {
    "id": "octocode:e4e0ce89",
    "icon": null,
    "name": "Octocode",
    "description": "(by Guy Bary) AI-powered developer assistant that enables advanced code research, analysis and discovery across GitHub and NPM realms in realtime",
    "repository": {
      "url": "https://github.com/bgauryy/octocode-mcp",
      "source": "github",
      "stars": 384,
      "lastUpdated": "2025-08-17T00:27:47Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "octocode",
    "serverConfig": {
      "type": "stdio",
      "command": "npx",
      "args": [
        "octocode-mcp"
      ],
      "env": {
        "GITHUB_TOKEN": "your_github_token"
      }
    }
  },
  {
    "id": "odoo:674b4bee",
    "icon": null,
    "name": "Odoo",
    "description": "Connect AI assistants to Odoo ERP systems for business data access and workflow automation.",
    "repository": {
      "url": "https://github.com/ivnvxd/mcp-server-odoo",
      "source": "github",
      "stars": 48,
      "lastUpdated": "2025-08-15T01:57:26Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "odoo",
    "serverConfig": {
      "type": "stdio",
      "command": "uvx",
      "args": [
        "mcp-server-odoo"
      ],
      "env": {
        "ODOO_URL": "https://your-odoo-instance.com",
        "ODOO_API_KEY": "your-api-key-here"
      }
    }
  },
  {
    "id": "office-powerpoint-mcp-server:7688f7f7",
    "icon": null,
    "name": "Office-PowerPoint-MCP-Server",
    "description": "A Model Context Protocol (MCP) server for creating, reading, and manipulating Microsoft PowerPoint documents.",
    "repository": {
      "url": "https://github.com/GongRzhe/Office-PowerPoint-MCP-Server",
      "source": "github",
      "stars": 853,
      "lastUpdated": "2025-08-16T15:30:30Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "office-powerpoint-mcp-server",
    "serverConfig": {
      "type": "stdio",
      "command": "uvx",
      "args": [
        "--from",
        "office-powerpoint-mcp-server",
        "ppt_mcp_server"
      ],
      "env": {}
    }
  },
  {
    "id": "office-visio-mcp-server:bb9652bd",
    "icon": null,
    "name": "Office-Visio-MCP-Server",
    "description": "A Model Context Protocol (MCP) server for creating, reading, and manipulating Microsoft Visio documents.",
    "repository": {
      "url": "https://github.com/GongRzhe/Office-Visio-MCP-Server",
      "source": "github",
      "stars": 7,
      "lastUpdated": "2025-08-15T02:24:24Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "office-visio-mcp-server",
    "serverConfig": {
      "type": "stdio",
      "command": "uvx",
      "args": [
        "--from",
        "office-visio-mcp-server",
        "visio_mcp_server"
      ]
    }
  },
  {
    "id": "office-word-mcp-server:c7493eb9",
    "icon": null,
    "name": "Office-Word-MCP-Server",
    "description": "A Model Context Protocol (MCP) server for creating, reading, and manipulating Microsoft Word documents.",
    "repository": {
      "url": "https://github.com/GongRzhe/Office-Word-MCP-Server",
      "source": "github",
      "stars": 605,
      "lastUpdated": "2025-08-17T02:23:09Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "office-word-mcp-server",
    "serverConfig": {
      "type": "stdio",
      "command": "uvx",
      "args": [
        "--from",
        "office-word-mcp-server",
        "word_mcp_server"
      ]
    }
  },
  {
    "id": "okta:6de43d77",
    "icon": null,
    "name": "Okta",
    "description": "Interact with Okta API.",
    "repository": {
      "url": "https://github.com/kapilduraphe/okta-mcp-server",
      "source": "github",
      "stars": 18,
      "lastUpdated": "2025-08-04T17:20:00Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "okta",
    "serverConfig": {
      "type": "stdio",
      "command": "node",
      "args": [
        "PATH_TO_PROJECT_DIRECTORY/dist/index.js"
      ],
      "env": {
        "OKTA_ORG_URL": "https://your-domain.okta.com",
        "OKTA_API_TOKEN": "your-api-token"
      }
    }
  },
  {
    "id": "okx-mcp-server:5ece065f",
    "icon": null,
    "name": "OKX-MCP-Server",
    "description": "An MCP server provides various blockchain data and market price data via the OKX API. The server enables Claude to perform operations like retrieve assets prices, transaction data, account history data and trade instruction data.",
    "repository": {
      "url": "https://github.com/memetus/okx-mcp-playground",
      "source": "github",
      "stars": 1,
      "lastUpdated": "2025-07-17T04:08:01Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "okx-mcp-server",
    "serverConfig": {
      "type": "stdio",
      "command": "node",
      "args": [
        "your project path/dist/index.js"
      ],
      "env": {
        "OKX_API_KEY": "your-okx-api-key",
        "OKX_API_SECRET": "your-okx-api-secret",
        "OKX_PASSPHRASE": "your-okx-api-passphrase",
        "OKX_PROJECT_ID": "your-okx-project-id"
      }
    }
  },
  {
    "id": "onenote:115567ad",
    "icon": null,
    "name": "OneNote",
    "description": "(by Rajesh Vijay) An MCP server that connects to Microsoft OneNote using the Microsoft Graph API. Reading notebooks, sections, and pages from OneNote,Creating new notebooks, sections, and pages in OneNote.",
    "repository": {
      "url": "https://github.com/rajvirtual/MCP-Servers/tree/master/onenote",
      "source": "github",
      "stars": 14,
      "lastUpdated": "2025-08-08T13:31:04Z"
    },
    "tags": [
      "community"
    ]
  },
  {
    "id": "open-strategy-partners-marketing-tools:9a24a273",
    "icon": null,
    "name": "Open Strategy Partners Marketing Tools",
    "description": "Content editing codes, value map, and positioning tools for product marketing.",
    "repository": {
      "url": "https://github.com/open-strategy-partners/osp_marketing_tools",
      "source": "github",
      "stars": 215,
      "lastUpdated": "2025-08-12T01:31:33Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "open-strategy-partners-marketing-tools",
    "serverConfig": {
      "type": "stdio",
      "command": "uvx",
      "args": [
        "--from",
        "git+https://github.com/open-strategy-partners/osp_marketing_tools@main",
        "osp_marketing_tools"
      ]
    }
  },
  {
    "id": "openai-websearch-mcp:ffb290ff",
    "icon": null,
    "name": "OpenAI WebSearch MCP",
    "description": "This is a Python-based MCP server that provides OpenAI `web_search` built-in tool.",
    "repository": {
      "url": "https://github.com/ConechoAI/openai-websearch-mcp",
      "source": "github",
      "stars": 59,
      "lastUpdated": "2025-08-11T13:44:48Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "openai-websearch-mcp",
    "serverConfig": {
      "type": "stdio",
      "command": "uvx",
      "args": [
        "openai-websearch-mcp"
      ],
      "env": {
        "OPENAI_API_KEY": "your-api-key-here"
      }
    }
  },
  {
    "id": "openalex-org-mcp:8dd7fcd6",
    "icon": null,
    "name": "OpenAlex.org MCP",
    "description": "Professional MCP server providing ML-powered author disambiguation and comprehensive researcher profiles using the OpenAlex database.",
    "repository": {
      "url": "https://github.com/drAbreu/alex-mcp",
      "source": "github",
      "stars": 8,
      "lastUpdated": "2025-08-14T01:58:20Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "openalex-org-mcp",
    "serverConfig": {
      "type": "stdio",
      "command": "/path/to/alex-mcp/run_alex_mcp.sh",
      "env": {
        "OPENALEX_MAILTO": "your-email@domain.com"
      }
    }
  },
  {
    "id": "openapi:14e146e2",
    "icon": null,
    "name": "OpenAPI",
    "description": "Interact with OpenAPI APIs.",
    "repository": {
      "url": "https://github.com/snaggle-ai/openapi-mcp-server",
      "source": "github",
      "stars": 771,
      "lastUpdated": "2025-08-17T01:32:31Z"
    },
    "tags": [
      "community"
    ]
  },
  {
    "id": "openapi-anyapi:b8ee38a0",
    "icon": null,
    "name": "OpenAPI AnyApi",
    "description": "Interact with large OpenAPI docs using built-in semantic search for endpoints. Allows for customizing the MCP server prefix.",
    "repository": {
      "url": "https://github.com/baryhuang/mcp-server-any-openapi",
      "source": "github",
      "stars": 68,
      "lastUpdated": "2025-08-04T07:13:56Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "openapi-anyapi",
    "serverConfig": {
      "type": "stdio",
      "command": "docker",
      "args": [
        "run",
        "-i",
        "--rm",
        "-e",
        "OPENAPI_JSON_DOCS_URL=https://api.finance.com/openapi.json",
        "-e",
        "MCP_API_PREFIX=finance",
        "-e",
        "GLOBAL_TOOL_PROMPT='Access to insights apis for ACME Financial Services abc.com .'",
        "buryhuang/mcp-server-any-openapi:latest"
      ]
    }
  },
  {
    "id": "openapi-schema:8c7ad365",
    "icon": null,
    "name": "OpenAPI Schema",
    "description": "Allow LLMs to explore large OpenAPI schemas without bloating the context.",
    "repository": {
      "url": "https://github.com/hannesj/mcp-openapi-schema",
      "source": "github",
      "stars": 38,
      "lastUpdated": "2025-08-17T00:00:22Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "openapi-schema",
    "serverConfig": {
      "type": "stdio",
      "command": "npx",
      "args": [
        "-y",
        "mcp-openapi-schema",
        "/ABSOLUTE/PATH/TO/openapi.yaml"
      ]
    }
  },
  {
    "id": "openapi-schema-explorer:b4277017",
    "icon": null,
    "name": "OpenAPI Schema Explorer",
    "description": "Token-efficient access to local or remote OpenAPI/Swagger specs via MCP Resources.",
    "repository": {
      "url": "https://github.com/kadykov/mcp-openapi-schema-explorer",
      "source": "github",
      "stars": 40,
      "lastUpdated": "2025-08-16T17:48:37Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "openapi-schema-explorer",
    "serverConfig": {
      "type": "stdio",
      "command": "npx",
      "args": [
        "-y",
        "mcp-openapi-schema-explorer@latest",
        "<path-or-url-to-spec>",
        "--output-format",
        "yaml"
      ],
      "env": {}
    }
  },
  {
    "id": "opencti:3f50116d",
    "icon": null,
    "name": "OpenCTI",
    "description": "Interact with OpenCTI platform to retrieve threat intelligence data including reports, indicators, malware and threat actors.",
    "repository": {
      "url": "https://github.com/Spathodea-Network/opencti-mcp",
      "source": "github",
      "stars": 22,
      "lastUpdated": "2025-08-10T06:14:44Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "opencti",
    "serverConfig": {
      "type": "stdio",
      "command": "node",
      "args": [
        "path/to/opencti-server/build/index.js"
      ],
      "env": {
        "OPENCTI_URL": "${OPENCTI_URL}",
        "OPENCTI_TOKEN": "${OPENCTI_TOKEN}"
      }
    }
  },
  {
    "id": "opencv:c18a50fe",
    "icon": null,
    "name": "OpenCV",
    "description": "An MCP server providing OpenCV computer vision capabilities. This allows AI assistants and language models to access powerful computer vision tools.",
    "repository": {
      "url": "https://github.com/GongRzhe/opencv-mcp-server",
      "source": "github",
      "stars": 54,
      "lastUpdated": "2025-08-16T22:57:03Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "opencv",
    "serverConfig": {
      "type": "stdio",
      "command": "uvx",
      "args": [
        "opencv-mcp-server"
      ]
    }
  },
  {
    "id": "opendota:dd70c431",
    "icon": null,
    "name": "OpenDota",
    "description": "Interact with OpenDota API to retrieve Dota 2 match data, player statistics, and more.",
    "repository": {
      "url": "https://github.com/asusevski/opendota-mcp-server",
      "source": "github",
      "stars": 4,
      "lastUpdated": "2025-03-12T22:32:05Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "opendota",
    "serverConfig": {
      "type": "stdio",
      "command": "wsl.exe",
      "args": [
        "--",
        "bash",
        "-c",
        "cd ~/opendota-mcp-server && source .venv/bin/activate && python src/opendota_server/server.py"
      ]
    }
  },
  {
    "id": "openlink-generic-java-database-connectivity:88f6ea5e",
    "icon": null,
    "name": "OpenLink Generic Java Database Connectivity",
    "description": "Generic Database Management System (DBMS) access via Open Database Connectivity (ODBC) Connectors (Drivers)",
    "repository": {
      "url": "https://github.com/OpenLinkSoftware/mcp-jdbc-server",
      "source": "github",
      "stars": 5,
      "lastUpdated": "2025-08-09T05:30:11Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "openlink-generic-java-database-connectivity",
    "serverConfig": {
      "type": "stdio",
      "command": "java",
      "args": [
        "-jar",
        "/path/to/mcp-jdbc-server/MCPServer-1.0.0-runner.jar"
      ],
      "env": {
        "jdbc.url": "jdbc:virtuoso://localhost:1111",
        "jdbc.user": "username",
        "jdbc.password": "password",
        "jdbc.api_key": "sk-xxx"
      }
    }
  },
  {
    "id": "openlink-generic-open-database-connectivity:9e0e3ad5",
    "icon": null,
    "name": "OpenLink Generic Open Database Connectivity",
    "description": "Generic Database Management System (DBMS) access via Open Database Connectivity (ODBC) Connectors (Drivers)",
    "repository": {
      "url": "https://github.com/OpenLinkSoftware/mcp-odbc-server",
      "source": "github",
      "stars": 8,
      "lastUpdated": "2025-07-23T23:52:15Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "openlink-generic-open-database-connectivity",
    "serverConfig": {
      "type": "stdio",
      "command": "/path/to/.nvm/versions/node/v21.1.0/bin/node",
      "args": [
        "/path/to/mcp-odbc-server/node_modules/.bin/tsx",
        "/path/to/mcp-odbc-server/src/main.ts"
      ],
      "env": {
        "ODBCINI": "/Library/ODBC/odbc.ini",
        "NODE_VERSION": "v21.1.0",
        "PATH": "~/.nvm/versions/node/v21.1.0/bin:${PATH}"
      }
    }
  },
  {
    "id": "openlink-generic-python-open-database-connectivity:6d3c132a",
    "icon": null,
    "name": "OpenLink Generic Python Open Database Connectivity",
    "description": "Generic Database Management System (DBMS) access via Open Database Connectivity (ODBC) Connectors (Drivers) for PyODBC",
    "repository": {
      "url": "https://github.com/OpenLinkSoftware/mcp-pyodbc-server",
      "source": "github",
      "stars": 3,
      "lastUpdated": "2025-07-22T20:48:34Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "openlink-generic-python-open-database-connectivity",
    "serverConfig": {
      "type": "stdio",
      "command": "uv",
      "args": [
        "--directory",
        "/path/to/mcp-pyodbc-server",
        "run",
        "mcp-pyodbc-server"
      ],
      "env": {
        "ODBC_DSN": "dsn_name",
        "ODBC_USER": "username",
        "ODBC_PASSWORD": "password",
        "API_KEY": "sk-xxx"
      }
    }
  },
  {
    "id": "openlink-generic-sqlalchemy-object-relational-database-connectivity-for-pyodbc:d6cf6d14",
    "icon": null,
    "name": "OpenLink Generic SQLAlchemy Object-Relational Database Connectivity for PyODBC",
    "description": "Generic Database Management System (DBMS) access via SQLAlchemy (PyODBC) Connectors (Drivers)",
    "repository": {
      "url": "https://github.com/OpenLinkSoftware/mcp-sqlalchemy-server",
      "source": "github",
      "stars": 15,
      "lastUpdated": "2025-07-28T10:10:51Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "openlink-generic-sqlalchemy-object-relational-database-connectivity-for-pyodbc",
    "serverConfig": {
      "type": "stdio",
      "command": "uv",
      "args": [
        "--directory",
        "/path/to/mcp-sqlalchemy-server",
        "run",
        "mcp-sqlalchemy-server"
      ],
      "env": {
        "ODBC_DSN": "dsn_name",
        "ODBC_USER": "username",
        "ODBC_PASSWORD": "password",
        "API_KEY": "sk-xxx"
      }
    }
  },
  {
    "id": "openmetadata:b3953cf0",
    "icon": null,
    "name": "OpenMetadata",
    "description": "MCP Server for OpenMetadata, an open-source metadata management platform.",
    "repository": {
      "url": "https://github.com/yangkyeongmo/mcp-server-openmetadata",
      "source": "github",
      "stars": 15,
      "lastUpdated": "2025-07-22T21:52:06Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "openmetadata",
    "serverConfig": {
      "type": "stdio",
      "command": "uvx",
      "args": [
        "mcp-server-openmetadata"
      ],
      "env": {
        "OPENMETADATA_HOST": "https://your-openmetadata-host",
        "OPENMETADATA_JWT_TOKEN": "your-jwt-token"
      }
    }
  },
  {
    "id": "openreview:19ff567f",
    "icon": null,
    "name": "OpenReview",
    "description": "An MCP server for OpenReview to fetch, read and save manuscripts from AI/ML conferences.",
    "repository": {
      "url": "https://github.com/anyakors/openreview-mcp-server",
      "source": "github",
      "stars": 0,
      "lastUpdated": "2025-08-15T00:55:18Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "openreview",
    "serverConfig": {
      "type": "stdio",
      "command": "python",
      "args": [
        "-m",
        "openreview_mcp_server"
      ],
      "env": {
        "OPENREVIEW_USERNAME": "your_email@domain.com",
        "OPENREVIEW_PASSWORD": "your_password"
      }
    }
  },
  {
    "id": "openrpc:7815304f",
    "icon": null,
    "name": "OpenRPC",
    "description": "Interact with and discover JSON-RPC APIs via OpenRPC.",
    "repository": {
      "url": "https://github.com/shanejonas/openrpc-mpc-server",
      "source": "github",
      "stars": 36,
      "lastUpdated": "2025-07-07T20:20:12Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "openrpc",
    "serverConfig": {
      "type": "stdio",
      "command": "npx",
      "args": [
        "-y",
        "openrpc-mcp-server"
      ]
    }
  },
  {
    "id": "openstack:9827d8bd",
    "icon": null,
    "name": "OpenStack",
    "description": "MCP server implementation that provides OpenStack interaction.",
    "repository": {
      "url": "https://github.com/wangsqly0407/openstack-mcp-server",
      "source": "github",
      "stars": 1,
      "lastUpdated": "2025-06-30T05:50:03Z"
    },
    "tags": [
      "community"
    ]
  },
  {
    "id": "openweather:c32309e6",
    "icon": null,
    "name": "OpenWeather",
    "description": "Interact with the free openweathermap API to get the current and forecast weather for a location.",
    "repository": {
      "url": "https://github.com/mschneider82/mcp-openweather",
      "source": "github",
      "stars": 6,
      "lastUpdated": "2025-08-07T10:53:20Z"
    },
    "tags": [
      "community"
    ]
  },
  {
    "id": "operative-webevalagent:96e625a4",
    "icon": null,
    "name": "Operative WebEvalAgent",
    "description": "",
    "repository": {
      "url": "https://github.com/Operative-Sh/web-eval-agent",
      "source": "github",
      "stars": 1146,
      "lastUpdated": "2025-08-14T14:18:15Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "operative-webevalagent",
    "serverConfig": {
      "type": "stdio",
      "command": "uvx",
      "args": [
        "--refresh-package",
        "webEvalAgent",
        "--from",
        "git+https://github.com/Operative-Sh/web-eval-agent.git",
        "webEvalAgent"
      ],
      "env": {
        "OPERATIVE_API_KEY": "<YOUR_KEY>"
      }
    }
  },
  {
    "id": "opnsense-mcp:11e98559",
    "icon": null,
    "name": "OPNSense MCP",
    "description": "MCP Server for OPNSense Firewall Management and API access",
    "repository": {
      "url": "https://github.com/vespo92/OPNSenseMCP",
      "source": "github",
      "stars": 15,
      "lastUpdated": "2025-08-13T22:02:00Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "opnsense-mcp",
    "serverConfig": {
      "type": "stdio",
      "command": "npx",
      "args": [
        "--yes",
        "opnsense-mcp-server@latest"
      ],
      "env": {
        "OPNSENSE_HOST": "https://192.168.1.1",
        "OPNSENSE_API_KEY": "your-api-key",
        "OPNSENSE_API_SECRET": "your-api-secret",
        "OPNSENSE_VERIFY_SSL": "true"
      }
    }
  },
  {
    "id": "openai-gpt-image:aea1bc9d",
    "icon": null,
    "name": "OpenAI GPT Image",
    "description": "OpenAI GPT image generation/editing MCP server.",
    "repository": {
      "url": "https://github.com/SureScaleAI/openai-gpt-image-mcp",
      "source": "github",
      "stars": 64,
      "lastUpdated": "2025-08-14T13:11:44Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "openai-gpt-image",
    "serverConfig": {
      "type": "stdio",
      "command": "node",
      "args": [
        "/absolute/path/to/dist/index.js"
      ],
      "env": {
        "OPENAI_API_KEY": "sk-..."
      }
    }
  },
  {
    "id": "optimade-mcp:2f6a6e1d",
    "icon": null,
    "name": "Optimade MCP",
    "description": "An MCP server conducts real-time material science data queries with the Optimade database (for example, elemental composition, crystal structure).",
    "repository": {
      "url": "https://github.com/dianfengxiaobo/optimade-mcp-server",
      "source": "github",
      "stars": 1,
      "lastUpdated": "2025-07-28T09:13:55Z"
    },
    "tags": [
      "community"
    ]
  },
  {
    "id": "oracle:1b7493ef",
    "icon": null,
    "name": "Oracle",
    "description": "",
    "repository": {
      "url": "https://github.com/marcelo-ochoa/servers",
      "source": "github",
      "stars": 1,
      "lastUpdated": "2025-07-24T21:44:57Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "oracle",
    "serverConfig": {
      "type": "stdio",
      "command": "npx",
      "args": [
        "-y",
        "@modelcontextprotocol/server-memory"
      ]
    }
  },
  {
    "id": "oracle-cloud-infrastructure-oci:e087c1da",
    "icon": null,
    "name": "Oracle Cloud Infrastructure (OCI)",
    "description": "",
    "repository": {
      "url": "https://github.com/karthiksuku/oci-mcp",
      "source": "github",
      "stars": 1,
      "lastUpdated": "2025-08-16T21:23:22Z"
    },
    "tags": [
      "community"
    ]
  },
  {
    "id": "oura-mcp-server:4a8e6555",
    "icon": null,
    "name": "Oura MCP server",
    "description": "MCP server for Oura API to retrieve one's sleep data",
    "repository": {
      "url": "https://github.com/tomekkorbak/oura-mcp-server",
      "source": "github",
      "stars": 23,
      "lastUpdated": "2025-08-12T13:49:47Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "oura-mcp-server",
    "serverConfig": {
      "type": "stdio",
      "command": "uvx",
      "args": [
        "oura-mcp-server"
      ],
      "env": {
        "OURA_API_TOKEN": "YOUR_OURA_API_TOKEN"
      }
    }
  },
  {
    "id": "oura-ring:a88cf637",
    "icon": null,
    "name": "Oura Ring",
    "description": "",
    "repository": {
      "url": "https://github.com/rajvirtual/oura-mcp-server",
      "source": "github",
      "stars": 9,
      "lastUpdated": "2025-06-24T21:13:00Z"
    },
    "tags": [
      "community"
    ]
  },
  {
    "id": "outline:1f165189",
    "icon": null,
    "name": "Outline",
    "description": "MCP Server to interact with Outline knowledge base to search, read, create, and manage documents and their content, access collections, add comments, and manage document backlinks.",
    "repository": {
      "url": "https://github.com/Vortiago/mcp-outline",
      "source": "github",
      "stars": 30,
      "lastUpdated": "2025-08-06T07:27:43Z"
    },
    "tags": [
      "community"
    ]
  },
  {
    "id": "pacman:0fbf0463",
    "icon": null,
    "name": "Pacman",
    "description": "An MCP server that provides package index querying capabilities. This server is able to search and retrieve information from package repositories like PyPI, npm, crates.io, Docker Hub, and Terraform Registry.",
    "repository": {
      "url": "https://github.com/oborchers/mcp-server-pacman",
      "source": "github",
      "stars": 6,
      "lastUpdated": "2025-08-06T19:33:23Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "pacman",
    "serverConfig": {
      "type": "stdio",
      "command": "uvx",
      "args": [
        "mcp-server-pacman"
      ]
    }
  },
  {
    "id": "pancakeswap-poolspy-mcp:06d50f73",
    "icon": null,
    "name": "pancakeswap-poolspy-mcp",
    "description": "An MCP server that tracks newly created liquidity pools on Pancake Swap.",
    "repository": {
      "url": "https://github.com/kukapay/pancakeswap-poolspy-mcp",
      "source": "github",
      "stars": 5,
      "lastUpdated": "2025-07-02T11:03:37Z"
    },
    "tags": [
      "community"
    ]
  },
  {
    "id": "pandoc:e6c20ef0",
    "icon": null,
    "name": "Pandoc",
    "description": "MCP server for seamless document format conversion using Pandoc, supporting Markdown, HTML, PDF, DOCX (.docx), csv and more.",
    "repository": {
      "url": "https://github.com/vivekVells/mcp-pandoc",
      "source": "github",
      "stars": 364,
      "lastUpdated": "2025-08-16T05:31:54Z"
    },
    "tags": [
      "community"
    ]
  },
  {
    "id": "paradex-mcp:cfb620ed",
    "icon": null,
    "name": "Paradex MCP",
    "description": "MCP native server for interacting with Paradex platform, including fully features trading.",
    "repository": {
      "url": "https://github.com/sv/mcp-paradex-py",
      "source": "github",
      "stars": 8,
      "lastUpdated": "2025-08-07T08:46:00Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "paradex-mcp",
    "serverConfig": {
      "type": "stdio",
      "command": "uvx",
      "args": [
        "mcp-paradex"
      ],
      "env": {
        "PARADEX_ENVIRONMENT": "testnet",
        "PARADEX_ACCOUNT_PRIVATE_KEY": "your_private_key"
      }
    }
  },
  {
    "id": "pdf-reader-mcp:957e75b0",
    "icon": null,
    "name": "PDF reader MCP",
    "description": "MCP server to read and search text in a local PDF file.",
    "repository": {
      "url": "https://github.com/gpetraroli/mcp_pdf_reader",
      "source": "github",
      "stars": 18,
      "lastUpdated": "2025-08-05T07:10:12Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "pdf-reader-mcp",
    "serverConfig": {
      "type": "stdio",
      "command": "node",
      "args": [
        "/absolute/path/to/mcp_gp_pdf_reader/index.js"
      ]
    }
  },
  {
    "id": "pdf-tools-mcp:775ed7d5",
    "icon": null,
    "name": "PDF Tools MCP",
    "description": "Comprehensive PDF manipulation toolkit (merge, split, encrypt, optimize and much more)",
    "repository": {
      "url": "https://github.com/Sohaib-2/pdf-mcp-server",
      "source": "github",
      "stars": 4,
      "lastUpdated": "2025-08-15T14:07:35Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "pdf-tools-mcp",
    "serverConfig": {
      "type": "stdio",
      "command": "C:\\path\\to\\pdf-mcp-server\\.venv\\Scripts\\python.exe",
      "args": [
        "C:\\path\\to\\pdf-mcp-server\\server.py"
      ]
    }
  },
  {
    "id": "pdmt:29a75388",
    "icon": null,
    "name": "PDMT",
    "description": "Pragmatic Deterministic MCP Templating - High-performance deterministic templating library with comprehensive todo validation, quality enforcement, and 0.0 temperature generation for reproducible outputs.",
    "repository": {
      "url": "https://github.com/paiml/pdmt",
      "source": "github",
      "stars": 0,
      "lastUpdated": "2025-08-13T15:54:47Z"
    },
    "tags": [
      "community"
    ]
  },
  {
    "id": "peacock-for-vs-code:e37e2d84",
    "icon": null,
    "name": "Peacock for VS Code",
    "description": "MCP Server for the Peacock extension for VS Code, coloring your world, one Code editor at a time. The main goal of the project is to show how an MCP server can be used to interact with APIs.",
    "repository": {
      "url": "https://github.com/johnpapa/peacock-mcp",
      "source": "github",
      "stars": 1,
      "lastUpdated": "2025-06-29T21:23:32Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "peacock-for-vs-code",
    "serverConfig": {
      "type": "stdio",
      "command": "npx",
      "args": [
        "-y",
        "@johnpapa/peacock-mcp"
      ],
      "env": {}
    }
  },
  {
    "id": "persistproc:270d8dcf",
    "icon": null,
    "name": "persistproc",
    "description": "MCP server + command line tool that allows agents to see & control long-running processes like web servers.",
    "repository": {
      "url": "https://github.com/irskep/persistproc",
      "source": "github",
      "stars": 4,
      "lastUpdated": "2025-07-26T21:16:01Z"
    },
    "tags": [
      "community"
    ]
  },
  {
    "id": "phone-mcp:18350bcb",
    "icon": null,
    "name": "Phone MCP",
    "description": "📱 A powerful plugin that lets you control your Android phone. Enables AI agents to perform complex tasks like automatically playing music based on weather or making calls and sending texts.",
    "repository": {
      "url": "https://github.com/hao-cyber/phone-mcp",
      "source": "github",
      "stars": 148,
      "lastUpdated": "2025-08-15T08:15:03Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "phone-mcp",
    "serverConfig": {
      "type": "stdio",
      "command": "uvx",
      "args": [
        "phone-mcp"
      ]
    }
  },
  {
    "id": "pif:009f33b3",
    "icon": null,
    "name": "PIF",
    "description": "A Personal Intelligence Framework (PIF), providing tools for file operations, structured reasoning, and journal-based documentation to support continuity and evolving human-AI collaboration across sessions.",
    "repository": {
      "url": "https://github.com/hungryrobot1/MCP-PIF",
      "source": "github",
      "stars": 51,
      "lastUpdated": "2025-07-31T12:51:29Z"
    },
    "tags": [
      "community"
    ]
  },
  {
    "id": "pinecone:c9f7b597",
    "icon": null,
    "name": "Pinecone",
    "description": "MCP server for searching and uploading records to Pinecone. Allows for simple RAG features, leveraging Pinecone's Inference API.",
    "repository": {
      "url": "https://github.com/sirmews/mcp-pinecone",
      "source": "github",
      "stars": 140,
      "lastUpdated": "2025-08-06T07:44:23Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "pinecone",
    "serverConfig": {
      "type": "stdio",
      "command": "uvx",
      "args": [
        "--index-name",
        "{your-index-name}",
        "--api-key",
        "{your-secret-api-key}",
        "mcp-pinecone"
      ]
    }
  },
  {
    "id": "pinner-mcp:2d3347be",
    "icon": null,
    "name": "Pinner MCP",
    "description": "An MCP server for pinning GitHub Actions and container base images to their immutable SHA hashes to prevent supply chain attacks.",
    "repository": {
      "url": "https://github.com/safedep/pinner-mcp",
      "source": "github",
      "stars": 9,
      "lastUpdated": "2025-04-14T03:25:58Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "pinner-mcp",
    "serverConfig": {
      "type": "stdio",
      "command": "docker",
      "args": [
        "run",
        "--rm",
        "-i",
        "ghcr.io/safedep/pinner-mcp:latest"
      ]
    }
  },
  {
    "id": "pixelle-mcp:21e59251",
    "icon": null,
    "name": "Pixelle MCP",
    "description": "An omnimodal AIGC framework that seamlessly converts ComfyUI workflows into MCP tools with zero code, enabling full-modal support for Text, Image, Sound, and Video generation with Chainlit-based web interface.",
    "repository": {
      "url": "https://github.com/AIDC-AI/Pixelle-MCP",
      "source": "github",
      "stars": 291,
      "lastUpdated": "2025-08-16T17:21:02Z"
    },
    "tags": [
      "community"
    ]
  },
  {
    "id": "placid-app:255c217e",
    "icon": null,
    "name": "Placid.app",
    "description": "Generate image and video creatives using Placid.app templates",
    "repository": {
      "url": "https://github.com/felores/placid-mcp-server",
      "source": "github",
      "stars": 12,
      "lastUpdated": "2025-05-29T23:13:02Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "placid-app",
    "serverConfig": {
      "type": "stdio",
      "command": "npx",
      "args": [
        "@felores/placid-mcp-server"
      ],
      "env": {
        "PLACID_API_TOKEN": "your-api-token"
      }
    }
  },
  {
    "id": "plane:6c74df79",
    "icon": null,
    "name": "Plane",
    "description": "This MCP Server will help you to manage projects and issues through Plane's API",
    "repository": {
      "url": "https://github.com/kelvin6365/plane-mcp-server",
      "source": "github",
      "stars": 29,
      "lastUpdated": "2025-08-16T06:48:29Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "plane",
    "serverConfig": {
      "type": "stdio",
      "command": "node",
      "args": [
        "path/to/plane-mcp-server/build/index.js"
      ],
      "env": {
        "PLANE_API_KEY": "your_plane_api_key_here",
        "PLANE_WORKSPACE_SLUG": "your_workspace_slug_here"
      }
    }
  },
  {
    "id": "playwright:fb69620b",
    "icon": null,
    "name": "Playwright",
    "description": "This MCP Server will help you run browser automation and webscraping using Playwright",
    "repository": {
      "url": "https://github.com/executeautomation/mcp-playwright",
      "source": "github",
      "stars": 4564,
      "lastUpdated": "2025-08-17T02:16:45Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "playwright",
    "serverConfig": {
      "type": "stdio",
      "command": "npx",
      "args": [
        "-y",
        "@executeautomation/playwright-mcp-server"
      ]
    }
  },
  {
    "id": "podbean:b34a8fcc",
    "icon": null,
    "name": "Podbean",
    "description": "MCP server for managing your podcasts, episodes, and analytics through the Podbean API. Allows for updating, adding, deleting podcasts, querying show description, notes, analytics, and more.",
    "repository": {
      "url": "https://github.com/amurshak/podbeanMCP",
      "source": "github",
      "stars": 0,
      "lastUpdated": "2025-06-10T23:08:03Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "podbean",
    "serverConfig": {
      "type": "stdio",
      "command": "uv",
      "args": [
        "run",
        "--with",
        "mcp[cli]",
        "mcp",
        "run",
        "/full/path/to/PodbeanMCP/server.py"
      ],
      "env": {
        "PODBEAN_CLIENT_ID": "your_client_id",
        "PODBEAN_CLIENT_SECRET": "your_client_secret"
      }
    }
  },
  {
    "id": "polarsteps:8b93a733",
    "icon": null,
    "name": "Polarsteps",
    "description": "An MCP server to help you review your previous Trips and plan new ones!",
    "repository": {
      "url": "https://github.com/remuzel/polarsteps-mcp",
      "source": "github",
      "stars": 2,
      "lastUpdated": "2025-07-24T12:42:57Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "polarsteps",
    "serverConfig": {
      "type": "stdio",
      "command": "uvx",
      "args": [
        "--from",
        "git+https://github.com/remuzel/polarsteps-mcp",
        "polarsteps-mcp"
      ],
      "env": {
        "POLARSTEPS_REMEMBER_TOKEN": "your_remember_token_here"
      }
    }
  },
  {
    "id": "postgresql:e8aa1cbf",
    "icon": null,
    "name": "PostgreSQL",
    "description": "A PostgreSQL MCP server offering dual HTTP/Stdio transports for database schema inspection and read-only query execution with session management and Podman(or Docker) support.",
    "repository": {
      "url": "https://github.com/ahmedmustahid/postgres-mcp-server",
      "source": "github",
      "stars": 8,
      "lastUpdated": "2025-08-17T00:44:50Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "postgresql",
    "serverConfig": {
      "type": "stdio",
      "command": "npx",
      "args": [
        "@ahmedmustahid/postgres-mcp-server",
        "stdio"
      ],
      "env": {
        "POSTGRES_USERNAME": "your-username",
        "POSTGRES_PASSWORD": "your-password",
        "POSTGRES_HOST": "hostname",
        "POSTGRES_DATABASE": "database-name"
      }
    }
  },
  {
    "id": "postman:48177e18",
    "icon": null,
    "name": "Postman",
    "description": "MCP server for running Postman Collections locally via Newman. Allows for simple execution of Postman Server and returns the results of whether the collection passed all the tests.",
    "repository": {
      "url": "https://github.com/shannonlal/mcp-postman",
      "source": "github",
      "stars": 74,
      "lastUpdated": "2025-08-11T04:19:34Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "postman",
    "serverConfig": {
      "type": "stdio",
      "command": "node",
      "args": [
        "/absolute/path/to/mcp-postman/build/index.js"
      ]
    }
  },
  {
    "id": "prefect:fbf07c04",
    "icon": null,
    "name": "Prefect",
    "description": "MCP Server for workflow orchestration and ELT/ETL with Prefect Server, and Prefect Cloud [https://www.prefect.io/] using the `prefect` python client.",
    "repository": {
      "url": "https://github.com/allen-munsch/mcp-prefect",
      "source": "github",
      "stars": 14,
      "lastUpdated": "2025-08-14T09:16:40Z"
    },
    "tags": [
      "community"
    ]
  },
  {
    "id": "productboard:05d78705",
    "icon": null,
    "name": "Productboard",
    "description": "Integrate the Productboard API into agentic workflows via MCP.",
    "repository": {
      "url": "https://github.com/kenjihikmatullah/productboard-mcp",
      "source": "github",
      "stars": 9,
      "lastUpdated": "2025-07-31T12:50:08Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "productboard",
    "serverConfig": {
      "type": "stdio",
      "command": "npx",
      "args": [
        "-y",
        "productboard-mcp"
      ],
      "env": {
        "PRODUCTBOARD_ACCESS_TOKEN": "<YOUR_TOKEN>"
      }
    }
  },
  {
    "id": "prometheus:d4fe0afc",
    "icon": null,
    "name": "Prometheus",
    "description": "Query and analyze Prometheus - open-source monitoring system.",
    "repository": {
      "url": "https://github.com/pab1it0/prometheus-mcp-server",
      "source": "github",
      "stars": 183,
      "lastUpdated": "2025-08-15T02:08:15Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "prometheus",
    "serverConfig": {
      "type": "stdio",
      "command": "docker",
      "args": [
        "run",
        "-i",
        "--rm",
        "-e",
        "PROMETHEUS_URL",
        "ghcr.io/pab1it0/prometheus-mcp-server:latest"
      ],
      "env": {
        "PROMETHEUS_URL": "<url>"
      }
    }
  },
  {
    "id": "pubchem:4540b39f",
    "icon": null,
    "name": "PubChem",
    "description": "extract drug information from pubchem API.",
    "repository": {
      "url": "https://github.com/sssjiang/pubchem_mcp_server",
      "source": "github",
      "stars": 5,
      "lastUpdated": "2025-07-05T14:57:39Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "pubchem",
    "serverConfig": {
      "type": "stdio",
      "command": "uvx",
      "args": [
        "pubchem_mcp_server"
      ]
    }
  },
  {
    "id": "pubmed:30a1ba92",
    "icon": null,
    "name": "PubMed",
    "description": "Enable AI assistants to search, access, and analyze PubMed articles through a simple MCP interface.",
    "repository": {
      "url": "https://github.com/JackKuo666/PubMed-MCP-Server",
      "source": "github",
      "stars": 52,
      "lastUpdated": "2025-08-16T14:22:19Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "pubmed",
    "serverConfig": {
      "type": "stdio",
      "command": "python",
      "args": [
        "-m",
        "pubmed-mcp-server"
      ]
    }
  },
  {
    "id": "pulumi:129d2d4c",
    "icon": null,
    "name": "Pulumi",
    "description": "MCP Server to Interact with Pulumi API, creates and lists Stacks",
    "repository": {
      "url": "https://github.com/dogukanakkaya/pulumi-mcp-server",
      "source": "github",
      "stars": 3,
      "lastUpdated": "2025-08-09T10:14:03Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "pulumi",
    "serverConfig": {
      "type": "stdio",
      "command": "docker",
      "args": [
        "run",
        "-i",
        "--rm",
        "--name",
        "pulumi-mcp-server",
        "-e",
        "PULUMI_ACCESS_TOKEN",
        "dogukanakkaya/pulumi-mcp-server"
      ],
      "env": {
        "PULUMI_ACCESS_TOKEN": "${YOUR_TOKEN}"
      }
    }
  },
  {
    "id": "puppeteer-vision:337282e1",
    "icon": null,
    "name": "Puppeteer vision",
    "description": "Use Puppeteer to browse a webpage and return a high quality Markdown. Use AI vision capabilities to handle cookies, captchas, and other interactive elements automatically.",
    "repository": {
      "url": "https://github.com/djannot/puppeteer-vision-mcp",
      "source": "github",
      "stars": 31,
      "lastUpdated": "2025-08-11T23:55:56Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "puppeteer-vision",
    "serverConfig": {
      "type": "stdio",
      "command": "npx",
      "args": [
        "-y",
        "puppeteer-vision-mcp-server"
      ],
      "env": {
        "OPENAI_API_KEY": "YOUR_OPENAI_API_KEY_HERE"
      }
    }
  },
  {
    "id": "pushover:845570a6",
    "icon": null,
    "name": "Pushover",
    "description": "Send instant notifications to your devices using Pushover.net",
    "repository": {
      "url": "https://github.com/ashiknesin/pushover-mcp",
      "source": "github",
      "stars": 26,
      "lastUpdated": "2025-08-12T05:00:37Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "pushover",
    "serverConfig": {
      "type": "stdio",
      "command": "npx",
      "args": [
        "-y",
        "pushover-mcp@latest",
        "start",
        "--token",
        "YOUR_TOKEN",
        "--user",
        "YOUR_USER"
      ]
    }
  },
  {
    "id": "py-mcp-qdrant-rag:5b5b19b0",
    "icon": null,
    "name": "py-mcp-qdrant-rag",
    "description": "",
    "repository": {
      "url": "https://github.com/amornpan/py-mcp-qdrant-rag",
      "source": "github",
      "stars": 1,
      "lastUpdated": "2025-07-18T02:42:00Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "py-mcp-qdrant-rag",
    "serverConfig": {
      "type": "stdio",
      "command": "/path/to/conda/envs/mcp-rag-qdrant-1.0/bin/python",
      "args": [
        "/path/to/py-mcp-qdrant-rag/run.py",
        "--mode",
        "mcp"
      ],
      "env": {
        "QDRANT_URL": "http://localhost:6333",
        "EMBEDDING_PROVIDER": "ollama",
        "OLLAMA_URL": "http://localhost:11434"
      }
    }
  },
  {
    "id": "pydantic-pydantic-ai-mcp-run-python:eb4e0e69",
    "icon": null,
    "name": "pydantic/pydantic-ai/mcp-run-python",
    "description": "Run Python code in a secure sandbox via MCP tool calls, powered by Deno and Pyodide",
    "repository": {
      "url": "https://github.com/pydantic/pydantic-ai/tree/main/mcp-run-python",
      "source": "github",
      "stars": 11626,
      "lastUpdated": "2025-08-16T21:50:30Z"
    },
    "tags": [
      "community"
    ]
  },
  {
    "id": "python-cli-mcp:1e597d78",
    "icon": null,
    "name": "Python CLI MCP",
    "description": "Interact with local Python command line applications.",
    "repository": {
      "url": "https://github.com/ofek/pycli-mcp",
      "source": "github",
      "stars": 6,
      "lastUpdated": "2025-07-18T09:21:15Z"
    },
    "tags": [
      "community"
    ]
  },
  {
    "id": "qgis:40020bee",
    "icon": null,
    "name": "QGIS",
    "description": "connects QGIS to Claude AI through the MCP. This integration enables prompt-assisted project creation, layer loading, code execution, and more.",
    "repository": {
      "url": "https://github.com/jjsantos01/qgis_mcp",
      "source": "github",
      "stars": 599,
      "lastUpdated": "2025-08-16T19:01:37Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "qgis",
    "serverConfig": {
      "type": "stdio",
      "command": "uv",
      "args": [
        "--directory",
        "/ABSOLUTE/PATH/TO/PARENT/REPO/FOLDER/qgis_mcp/src/qgis_mcp",
        "run",
        "qgis_mcp_server.py"
      ]
    }
  },
  {
    "id": "qiniu-mcp-server:93ce3fe6",
    "icon": null,
    "name": "Qiniu MCP Server",
    "description": "The Model Context Protocol (MCP) Server built on Qiniu Cloud products supports users in accessing Qiniu Cloud Storage, intelligent multimedia services, and more through this MCP Server within the context of AI large model clients.",
    "repository": {
      "url": "https://github.com/qiniu/qiniu-mcp-server",
      "source": "github",
      "stars": 24,
      "lastUpdated": "2025-08-06T06:34:24Z"
    },
    "tags": [
      "community"
    ]
  },
  {
    "id": "quantconnect:ef21b9f6",
    "icon": null,
    "name": "QuantConnect",
    "description": "QuantConnect Algorithmic Trading Platform Orchestration MCP - Agentic LLM Driven Trading Strategy Design, Research & Implementation.",
    "repository": {
      "url": "https://github.com/taylorwilsdon/quantconnect-mcp",
      "source": "github",
      "stars": 27,
      "lastUpdated": "2025-08-14T05:39:57Z"
    },
    "tags": [
      "community"
    ]
  },
  {
    "id": "quarkus:2107ceaa",
    "icon": null,
    "name": "Quarkus",
    "description": "MCP servers for the Quarkus Java framework.",
    "repository": {
      "url": "https://github.com/quarkiverse/quarkus-mcp-servers",
      "source": "github",
      "stars": 160,
      "lastUpdated": "2025-08-12T03:40:04Z"
    },
    "tags": [
      "community"
    ]
  },
  {
    "id": "quickchart:13e2f5a4",
    "icon": null,
    "name": "QuickChart",
    "description": "A Model Context Protocol server for generating charts using QuickChart.io",
    "repository": {
      "url": "https://github.com/GongRzhe/Quickchart-MCP-Server",
      "source": "github",
      "stars": 136,
      "lastUpdated": "2025-08-16T07:52:17Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "quickchart",
    "serverConfig": {
      "type": "stdio",
      "command": "npx",
      "args": [
        "-y",
        "@gongrzhe/quickchart-mcp-server"
      ]
    }
  },
  {
    "id": "qwen-max:b2204382",
    "icon": null,
    "name": "Qwen_Max",
    "description": "A Model Context Protocol (MCP) server implementation for the Qwen models.",
    "repository": {
      "url": "https://github.com/66julienmartin/MCP-server-Qwen_Max",
      "source": "github",
      "stars": 21,
      "lastUpdated": "2025-07-16T09:49:12Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "qwen-max",
    "serverConfig": {
      "type": "stdio",
      "command": "node",
      "args": [
        "/path/to/Qwen_Max/build/index.js"
      ],
      "env": {
        "DASHSCOPE_API_KEY": "your-api-key-here"
      }
    }
  },
  {
    "id": "rabbitmq:c7422896",
    "icon": null,
    "name": "RabbitMQ",
    "description": "The MCP server that interacts with RabbitMQ to publish and consume messages.",
    "repository": {
      "url": "https://github.com/kenliao94/mcp-server-rabbitmq",
      "source": "github",
      "stars": 36,
      "lastUpdated": "2025-08-14T18:08:56Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "rabbitmq",
    "serverConfig": {
      "type": "stdio",
      "command": "uv",
      "args": [
        "--directory",
        "/path/to/repo/mcp-server-rabbitmq",
        "run",
        "mcp-server-rabbitmq",
        "--rabbitmq-host",
        "<hostname ex. test.rabbit.com, localhost>",
        "--port",
        "<port number ex. 5672>",
        "--username",
        "<rabbitmq username>",
        "--password",
        "<rabbitmq password>",
        "--use-tls",
        "<true if uses amqps, false otherwise>"
      ]
    }
  },
  {
    "id": "rae:78c6f56d",
    "icon": null,
    "name": "RAE",
    "description": "MPC Server to connect your preferred model with rae-api.com, Roya Academy of Spanish Dictionary",
    "repository": {
      "url": "https://github.com/rae-api-com/rae-mcp",
      "source": "github",
      "stars": 1,
      "lastUpdated": "2025-08-15T21:30:36Z"
    },
    "tags": [
      "community"
    ]
  },
  {
    "id": "rag-local:fddab0d7",
    "icon": null,
    "name": "RAG Local",
    "description": "This MCP server for storing and retrieving text passages locally based on their semantic meaning.",
    "repository": {
      "url": "https://github.com/renl/mcp-rag-local",
      "source": "github",
      "stars": 10,
      "lastUpdated": "2025-08-13T03:59:17Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "rag-local",
    "serverConfig": {
      "type": "stdio",
      "command": "uv",
      "args": [
        "--directory",
        "path\\to\\mcp-rag-local",
        "run",
        "main.py"
      ],
      "env": {
        "CHROMADB_PORT": "8321",
        "OLLAMA_PORT": "11434"
      }
    }
  },
  {
    "id": "rag-web-browser:c3b363c1",
    "icon": null,
    "name": "RAG Web Browser",
    "description": "",
    "repository": {
      "url": "https://github.com/apify/mcp-server-rag-web-browser",
      "source": "github",
      "stars": 178,
      "lastUpdated": "2025-08-15T04:28:17Z"
    },
    "tags": [
      "community"
    ]
  },
  {
    "id": "raindrop-io:535bed80",
    "icon": null,
    "name": "Raindrop.io",
    "description": "An integration that allows LLMs to interact with Raindrop.io bookmarks using the Model Context Protocol (MCP).",
    "repository": {
      "url": "https://github.com/hiromitsusasaki/raindrop-io-mcp-server",
      "source": "github",
      "stars": 52,
      "lastUpdated": "2025-08-15T14:38:42Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "raindrop-io",
    "serverConfig": {
      "type": "stdio",
      "command": "node",
      "args": [
        "PATH_TO_BUILD/index.js"
      ],
      "env": {
        "RAINDROP_TOKEN": "your_access_token_here"
      }
    }
  },
  {
    "id": "random-number:d5bb15eb",
    "icon": null,
    "name": "Random Number",
    "description": "Provides LLMs with essential random generation abilities, built entirely on Python's standard library.",
    "repository": {
      "url": "https://github.com/zazencodes/random-number-mcp",
      "source": "github",
      "stars": 35,
      "lastUpdated": "2025-08-08T03:18:58Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "random-number",
    "serverConfig": {
      "type": "stdio",
      "command": "uvx",
      "args": [
        "random-number-mcp"
      ]
    }
  },
  {
    "id": "reaper:ec6ca162",
    "icon": null,
    "name": "Reaper",
    "description": "Interact with your Reaper (Digital Audio Workstation) projects.",
    "repository": {
      "url": "https://github.com/dschuler36/reaper-mcp-server",
      "source": "github",
      "stars": 49,
      "lastUpdated": "2025-08-11T23:55:58Z"
    },
    "tags": [
      "community"
    ]
  },
  {
    "id": "redbee:5848f533",
    "icon": null,
    "name": "Redbee",
    "description": "Redbee MCP server that provides support for interacting with Redbee API.",
    "repository": {
      "url": "https://github.com/Tamsi/redbee-mcp",
      "source": "github",
      "stars": 0,
      "lastUpdated": "2025-06-23T17:01:20Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "redbee",
    "serverConfig": {
      "type": "stdio",
      "command": "uvx",
      "args": [
        "redbee-mcp",
        "--stdio"
      ],
      "env": {
        "REDBEE_CUSTOMER": "CUSTOMER_NAME",
        "REDBEE_BUSINESS_UNIT": "BUSINESS_UNIT_NAME"
      }
    }
  },
  {
    "id": "redis:bcdecda5",
    "icon": null,
    "name": "Redis",
    "description": "Redis database operations and caching microservice server with support for key-value operations, expiration management, and pattern-based key listing.",
    "repository": {
      "url": "https://github.com/GongRzhe/REDIS-MCP-Server",
      "source": "github",
      "stars": 29,
      "lastUpdated": "2025-07-15T03:56:55Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "redis",
    "serverConfig": {
      "type": "stdio",
      "command": "npx",
      "args": [
        "@gongrzhe/server-redis-mcp@1.0.0",
        "redis://localhost:6379"
      ]
    }
  },
  {
    "id": "redis:070643f3",
    "icon": null,
    "name": "Redis",
    "description": "",
    "repository": {
      "url": "https://github.com/prajwalnayak7/mcp-server-redis",
      "source": "github",
      "stars": 24,
      "lastUpdated": "2025-07-20T09:45:08Z"
    },
    "tags": [
      "community"
    ]
  },
  {
    "id": "rednote-mcp:d93ce66a",
    "icon": null,
    "name": "RedNote MCP",
    "description": "MCP server for accessing RedNote(XiaoHongShu, xhs) content",
    "repository": {
      "url": "https://github.com/ifuryst/rednote-mcp",
      "source": "github",
      "stars": 764,
      "lastUpdated": "2025-08-15T01:29:10Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "rednote-mcp",
    "serverConfig": {
      "type": "stdio",
      "command": "npx",
      "args": [
        "rednote-mcp",
        "--stdio"
      ]
    }
  },
  {
    "id": "reed-jobs:c0bfdef6",
    "icon": null,
    "name": "Reed Jobs",
    "description": "Search and retrieve job listings from Reed.co.uk.",
    "repository": {
      "url": "https://github.com/kld3v/reed_jobs_mcp",
      "source": "github",
      "stars": 0,
      "lastUpdated": "2025-07-21T13:09:13Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "reed-jobs",
    "serverConfig": {
      "type": "stdio",
      "command": "node",
      "args": [
        "path/to/your/dist/index.js"
      ]
    }
  },
  {
    "id": "rememberizer-ai:03c54a00",
    "icon": null,
    "name": "Rememberizer AI",
    "description": "An MCP server designed for interacting with the Rememberizer data source, facilitating enhanced knowledge retrieval.",
    "repository": {
      "url": "https://github.com/skydeckai/mcp-server-rememberizer",
      "source": "github",
      "stars": 31,
      "lastUpdated": "2025-08-01T15:27:03Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "rememberizer-ai",
    "serverConfig": {
      "type": "stdio",
      "command": "uvx",
      "args": [
        "mcp-server-rememberizer"
      ],
      "env": {
        "REMEMBERIZER_API_TOKEN": "your_rememberizer_api_token"
      }
    }
  },
  {
    "id": "replicate:93422817",
    "icon": null,
    "name": "Replicate",
    "description": "Search, run and manage machine learning models on Replicate through a simple tool-based interface. Browse models, create predictions, track their status, and handle generated images.",
    "repository": {
      "url": "https://github.com/deepfates/mcp-replicate",
      "source": "github",
      "stars": 82,
      "lastUpdated": "2025-08-15T12:11:05Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "replicate",
    "serverConfig": {
      "type": "stdio",
      "command": "mcp-replicate",
      "env": {
        "REPLICATE_API_TOKEN": "your_token_here"
      }
    }
  },
  {
    "id": "resend:d975b660",
    "icon": null,
    "name": "Resend",
    "description": "Send email using Resend services",
    "repository": {
      "url": "https://github.com/Klavis-AI/klavis/tree/main/mcp_servers/resend",
      "source": "github",
      "stars": 3955,
      "lastUpdated": "2025-08-17T02:22:39Z"
    },
    "tags": [
      "community"
    ]
  },
  {
    "id": "revit-mcp:0f0f5ada",
    "icon": null,
    "name": "Revit MCP",
    "description": "A service implementing the MCP protocol for Autodesk Revit.",
    "repository": {
      "url": "https://github.com/revit-mcp",
      "source": "github"
    },
    "tags": [
      "community"
    ]
  },
  {
    "id": "rijksmuseum:9c2bc422",
    "icon": null,
    "name": "Rijksmuseum",
    "description": "Interface with the Rijksmuseum API to search artworks, retrieve artwork details, access image tiles, and explore user collections.",
    "repository": {
      "url": "https://github.com/r-huijts/rijksmuseum-mcp",
      "source": "github",
      "stars": 56,
      "lastUpdated": "2025-08-12T09:36:33Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "rijksmuseum",
    "serverConfig": {
      "type": "stdio",
      "command": "npx",
      "args": [
        "-y",
        "mcp-server-rijksmuseum"
      ],
      "env": {
        "RIJKSMUSEUM_API_KEY": "your_api_key_here"
      }
    }
  },
  {
    "id": "riot-games:6c04cb44",
    "icon": null,
    "name": "Riot Games",
    "description": "MCP server for League of Legends – fetch player info, ranks, champion stats, and match history via Riot API.",
    "repository": {
      "url": "https://github.com/jifrozen0110/mcp-riot",
      "source": "github",
      "stars": 16,
      "lastUpdated": "2025-08-11T14:39:51Z"
    },
    "tags": [
      "community"
    ]
  },
  {
    "id": "rquest:1adc3fa7",
    "icon": null,
    "name": "Rquest",
    "description": "An MCP server providing realistic browser-like HTTP request capabilities with accurate TLS/JA3/JA4 fingerprints for bypassing anti-bot measures.",
    "repository": {
      "url": "https://github.com/xxxbrian/mcp-rquest",
      "source": "github",
      "stars": 37,
      "lastUpdated": "2025-08-05T22:55:28Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "rquest",
    "serverConfig": {
      "type": "stdio",
      "command": "uvx",
      "args": [
        "mcp-rquest"
      ]
    }
  },
  {
    "id": "rust-mcp-filesystem:3736524c",
    "icon": null,
    "name": "Rust MCP Filesystem",
    "description": "Fast, asynchronous MCP server for efficient handling of various filesystem operations built with the power of Rust.",
    "repository": {
      "url": "https://github.com/rust-mcp-stack/rust-mcp-filesystem",
      "source": "github",
      "stars": 65,
      "lastUpdated": "2025-08-15T06:31:43Z"
    },
    "tags": [
      "community"
    ]
  },
  {
    "id": "safetysearch:8d41b837",
    "icon": null,
    "name": "SafetySearch",
    "description": "Real-time FDA food safety data: recalls, adverse events, analysis.",
    "repository": {
      "url": "https://github.com/surabhya/SafetySearch",
      "source": "github",
      "stars": 0,
      "lastUpdated": "2025-06-22T14:20:48Z"
    },
    "tags": [
      "community"
    ]
  },
  {
    "id": "salesforce-mcp:40f0a9a8",
    "icon": null,
    "name": "Salesforce MCP",
    "description": "Interact with Salesforce Data and Metadata",
    "repository": {
      "url": "https://github.com/smn2gnt/MCP-Salesforce",
      "source": "github",
      "stars": 131,
      "lastUpdated": "2025-08-15T17:51:45Z"
    },
    "tags": [
      "community"
    ]
  },
  {
    "id": "salesforce-mcp-aiondadotcom:c30931ee",
    "icon": null,
    "name": "Salesforce MCP (AiondaDotCom)",
    "description": "Universal Salesforce integration with OAuth authentication, smart learning system, comprehensive backup capabilities, and full CRUD operations for any Salesforce org including custom objects and fields.",
    "repository": {
      "url": "https://github.com/AiondaDotCom/mcp-salesforce",
      "source": "github",
      "stars": 2,
      "lastUpdated": "2025-07-16T12:33:29Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "salesforce-mcp-aiondadotcom",
    "serverConfig": {
      "type": "stdio",
      "command": "npx",
      "args": [
        "@aiondadotcom/mcp-salesforce"
      ]
    }
  },
  {
    "id": "salesforce-mcp-server:4f89c728",
    "icon": null,
    "name": "Salesforce MCP Server",
    "description": "Comprehensive Salesforce integration with tools for querying records, executing Apex, managing fields/objects, and handling debug logs",
    "repository": {
      "url": "https://github.com/tsmztech/mcp-server-salesforce",
      "source": "github",
      "stars": 84,
      "lastUpdated": "2025-08-15T17:58:36Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "salesforce-mcp-server",
    "serverConfig": {
      "type": "stdio",
      "command": "npx",
      "args": [
        "-y",
        "@tsmztech/mcp-server-salesforce"
      ],
      "env": {
        "SALESFORCE_CONNECTION_TYPE": "User_Password",
        "SALESFORCE_USERNAME": "your_username",
        "SALESFORCE_PASSWORD": "your_password",
        "SALESFORCE_TOKEN": "your_security_token",
        "SALESFORCE_INSTANCE_URL": "org_url"
      }
    }
  },
  {
    "id": "schemacrawler:1dde13df",
    "icon": null,
    "name": "SchemaCrawler",
    "description": "Connect to any relational database, and be able to get valid SQL, and ask questions like what does a certain column prefix mean.",
    "repository": {
      "url": "https://github.com/schemacrawler/SchemaCrawler-MCP-Server-Usage",
      "source": "github",
      "stars": 4,
      "lastUpdated": "2025-08-15T00:36:03Z"
    },
    "tags": [
      "community"
    ]
  },
  {
    "id": "schemaflow:ed2dadd5",
    "icon": null,
    "name": "SchemaFlow",
    "description": "Real-time PostgreSQL & Supabase database schema access for AI-IDEs via Model Context Protocol. Provides live database context through secure SSE connections with three powerful tools: get_schema, analyze_database, and check_schema_alignment. SchemaFlow",
    "repository": {
      "url": "https://github.com/CryptoRadi/schemaflow-mcp-server",
      "source": "github",
      "stars": 6,
      "lastUpdated": "2025-08-04T22:23:37Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "schemaflow",
    "serverConfig": {
      "type": "sse",
      "url": "https://api.schemaflow.dev/mcp/?token=your-token-here"
    }
  },
  {
    "id": "scholarly:8f41941c",
    "icon": null,
    "name": "Scholarly",
    "description": "An MCP server to search for scholarly and academic articles.",
    "repository": {
      "url": "https://github.com/adityak74/mcp-scholarly",
      "source": "github",
      "stars": 146,
      "lastUpdated": "2025-08-17T02:32:16Z"
    },
    "tags": [
      "community"
    ]
  },
  {
    "id": "scrapling-fetch:a2ad8634",
    "icon": null,
    "name": "scrapling-fetch",
    "description": "Access text content from bot-protected websites. Fetches HTML/markdown from sites with anti-automation measures using Scrapling.",
    "repository": {
      "url": "https://github.com/cyberchitta/scrapling-fetch-mcp",
      "source": "github",
      "stars": 45,
      "lastUpdated": "2025-08-08T05:26:07Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "scrapling-fetch",
    "serverConfig": {
      "type": "stdio",
      "command": "uvx",
      "args": [
        "scrapling-fetch-mcp"
      ]
    }
  },
  {
    "id": "screeny:443837f7",
    "icon": null,
    "name": "Screeny",
    "description": "Privacy-first macOS MCP server that provides visual context for AI agents through window screenshots",
    "repository": {
      "url": "https://github.com/rohanrav/screeny",
      "source": "github",
      "stars": 3,
      "lastUpdated": "2025-08-13T05:38:07Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "screeny",
    "serverConfig": {
      "type": "stdio",
      "command": "uvx",
      "args": [
        "mcp-server-screeny"
      ]
    }
  },
  {
    "id": "scriptflow:0bbf3389",
    "icon": null,
    "name": "ScriptFlow",
    "description": "Transform complex, repetitive AI interactions into persistent, executable scripts with comprehensive script management (add, edit, remove, list, search, execute) and multi-language support (Bash, Python, Node.js, TypeScript).",
    "repository": {
      "url": "https://github.com/yanmxa/scriptflow-mcp",
      "source": "github",
      "stars": 0,
      "lastUpdated": "2025-08-06T03:38:14Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "scriptflow",
    "serverConfig": {
      "type": "stdio",
      "command": "npx",
      "args": [
        "scriptflow-mcp"
      ],
      "env": {
        "SCRIPTFLOW_SCRIPTS_DIR": "/your/custom/path"
      }
    }
  },
  {
    "id": "searxng:ba2f157b",
    "icon": null,
    "name": "SearXNG",
    "description": "A Model Context Protocol Server for SearXNG",
    "repository": {
      "url": "https://github.com/ihor-sokoliuk/mcp-searxng",
      "source": "github",
      "stars": 174,
      "lastUpdated": "2025-08-15T17:54:29Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "searxng",
    "serverConfig": {
      "type": "stdio",
      "command": "npx",
      "args": [
        "-y",
        "mcp-searxng"
      ],
      "env": {
        "SEARXNG_URL": "YOUR_SEARXNG_INSTANCE_URL"
      }
    }
  },
  {
    "id": "searxng:72f9c0bd",
    "icon": null,
    "name": "SearXNG",
    "description": "An MCP server provide web searching via SearXNG & retrieve url as makrdown.",
    "repository": {
      "url": "https://github.com/erhwenkuo/mcp-searxng",
      "source": "github",
      "stars": 6,
      "lastUpdated": "2025-07-26T14:55:31Z"
    },
    "tags": [
      "community"
    ]
  },
  {
    "id": "searxng-public:e1a060a6",
    "icon": null,
    "name": "SearXNG Public",
    "description": "A Model Context Protocol Server for retrieving data from public SearXNG instances, with fallback support",
    "repository": {
      "url": "https://github.com/pwilkin/mcp-searxng-public",
      "source": "github",
      "stars": 14,
      "lastUpdated": "2025-07-31T17:07:10Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "searxng-public",
    "serverConfig": {
      "type": "stdio",
      "command": "npx",
      "args": [
        "mcp-searxng-public"
      ],
      "env": {
        "SEARXNG_BASE_URL": "https://metacat.online;https://nyc1.sx.ggtyler.dev;https://ooglester.com;https://search.080609.xyz;https://search.canine.tools;https://search.catboy.house;https://search.citw.lgbt;https://search.einfachzocken.eu;https://search.federicociro.com;https://search.hbubli.cc;https://search.im-in.space;https://search.indst.eu",
        "DEFAULT_LANGUAGE": "en"
      }
    }
  },
  {
    "id": "sec-edgar:1791ec51",
    "icon": null,
    "name": "SEC EDGAR",
    "description": "(by Stefano Amorelli) A community Model Context Protocol Server to access financial filings and data through the U.S. Securities and Exchange Commission (SEC) `Electronic Data Gathering, Analysis, and Retrieval` (EDGAR) database",
    "repository": {
      "url": "https://github.com/stefanoamorelli/sec-edgar-mcp",
      "source": "github",
      "stars": 102,
      "lastUpdated": "2025-08-17T02:20:25Z"
    },
    "tags": [
      "community"
    ]
  },
  {
    "id": "seo-mcp:d403f6ef",
    "icon": null,
    "name": "SEO MCP",
    "description": "A free SEO tool MCP (Model Control Protocol) service based on Ahrefs data. Includes features such as backlinks, keyword ideas, and more. by claudemcp.",
    "repository": {
      "url": "https://github.com/cnych/seo-mcp",
      "source": "github",
      "stars": 141,
      "lastUpdated": "2025-08-17T01:54:17Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "seo-mcp",
    "serverConfig": {
      "type": "stdio",
      "command": "uvx",
      "args": [
        "--python",
        "3.10",
        "seo-mcp"
      ],
      "env": {
        "CAPSOLVER_API_KEY": "CAP-xxxxxx"
      }
    }
  },
  {
    "id": "serper:9c0d560b",
    "icon": null,
    "name": "Serper",
    "description": "An MCP server that performs Google searches using Serper.",
    "repository": {
      "url": "https://github.com/garymengcom/serper-mcp-server",
      "source": "github",
      "stars": 10,
      "lastUpdated": "2025-08-17T01:54:36Z"
    },
    "tags": [
      "community"
    ]
  },
  {
    "id": "servicenow:b2fa0f3a",
    "icon": null,
    "name": "ServiceNow",
    "description": "An MCP server to interact with a ServiceNow instance",
    "repository": {
      "url": "https://github.com/osomai/servicenow-mcp",
      "source": "github",
      "stars": 123,
      "lastUpdated": "2025-08-16T16:05:58Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "servicenow",
    "serverConfig": {
      "type": "stdio",
      "command": "/Users/yourusername/dev/servicenow-mcp/.venv/bin/python",
      "args": [
        "-m",
        "servicenow_mcp.cli"
      ],
      "env": {
        "SERVICENOW_INSTANCE_URL": "https://your-instance.service-now.com",
        "SERVICENOW_USERNAME": "your-username",
        "SERVICENOW_PASSWORD": "your-password",
        "SERVICENOW_AUTH_TYPE": "basic"
      }
    }
  },
  {
    "id": "shadertoy:1819e2e7",
    "icon": null,
    "name": "ShaderToy",
    "description": "This MCP server lets LLMs to interact with the ShaderToy API, allowing LLMs to learn from compute shaders examples and enabling them to create complex GLSL shaders that they are previously not capable of.",
    "repository": {
      "url": "https://github.com/wilsonchenghy/ShaderToy-MCP",
      "source": "github",
      "stars": 29,
      "lastUpdated": "2025-08-14T23:06:08Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "shadertoy",
    "serverConfig": {
      "type": "stdio",
      "command": "uv",
      "args": [
        "run",
        "--with",
        "mcp[cli]",
        "mcp",
        "run",
        "<path_to_project>/ShaderToy-MCP/src/ShaderToy-MCP/server.py"
      ],
      "env": {
        "SHADERTOY_APP_KEY": "your_actual_api_key"
      }
    }
  },
  {
    "id": "shareseer:eaeeeee1",
    "icon": null,
    "name": "ShareSeer",
    "description": "MCP to Access SEC filings, financials & insider trading data in real time using ShareSeer",
    "repository": {
      "url": "https://github.com/shareseer/shareseer-mcp-server",
      "source": "github",
      "stars": 4,
      "lastUpdated": "2025-08-02T11:41:40Z"
    },
    "tags": [
      "community"
    ]
  },
  {
    "id": "shell:9f777217",
    "icon": null,
    "name": "Shell",
    "description": "Give hands to AI. MCP server to run shell commands securely, auditably, and on demand",
    "repository": {
      "url": "https://github.com/sonirico/mcp-shell",
      "source": "github",
      "stars": 17,
      "lastUpdated": "2025-08-15T01:07:03Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "shell",
    "serverConfig": {
      "type": "stdio",
      "command": "docker",
      "args": [
        "run",
        "--rm",
        "-i",
        "mcp-shell:latest"
      ],
      "env": {
        "MCP_SHELL_SECURITY_ENABLED": "true",
        "MCP_SHELL_LOG_LEVEL": "info"
      }
    }
  },
  {
    "id": "shodan-mcp:291baf82",
    "icon": null,
    "name": "Shodan MCP",
    "description": "MCP server to interact with Shodan",
    "repository": {
      "url": "https://github.com/Hexix23/shodan-mcp",
      "source": "github",
      "stars": 10,
      "lastUpdated": "2025-07-27T00:34:12Z"
    },
    "tags": [
      "community"
    ]
  },
  {
    "id": "shopify:75089b5e",
    "icon": null,
    "name": "Shopify",
    "description": "MCP to interact with Shopify API including order, product, customers and so on.",
    "repository": {
      "url": "https://github.com/GeLi2001/shopify-mcp",
      "source": "github",
      "stars": 70,
      "lastUpdated": "2025-08-16T13:25:10Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "shopify",
    "serverConfig": {
      "type": "stdio",
      "command": "npx",
      "args": [
        "shopify-mcp",
        "--accessToken",
        "<YOUR_ACCESS_TOKEN>",
        "--domain",
        "<YOUR_SHOP>.myshopify.com"
      ]
    }
  },
  {
    "id": "shopify-storefront:8745012b",
    "icon": null,
    "name": "Shopify Storefront",
    "description": "Unofficial MCP server that allows AI agents to discover Shopify storefronts and interact with them to fetch products, collections, and other store data through the Storefront API.",
    "repository": {
      "url": "https://github.com/QuentinCody/shopify-storefront-mcp-server",
      "source": "github",
      "stars": 1,
      "lastUpdated": "2025-06-03T19:32:46Z"
    },
    "tags": [
      "community"
    ]
  },
  {
    "id": "simple-loki-mcp:f2eb0486",
    "icon": null,
    "name": "Simple Loki MCP",
    "description": "A simple MCP server to query Loki logs using logcli.",
    "repository": {
      "url": "https://github.com/ghrud92/simple-loki-mcp",
      "source": "github",
      "stars": 4,
      "lastUpdated": "2025-07-06T14:37:19Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "simple-loki-mcp",
    "serverConfig": {
      "type": "stdio",
      "command": "npx",
      "args": [
        "-y",
        "simple-loki-mcp"
      ],
      "env": {
        "LOKI_ADDR": "https://loki.sup.band"
      }
    }
  },
  {
    "id": "siri-shortcuts:ff832107",
    "icon": null,
    "name": "Siri Shortcuts",
    "description": "MCP to interact with Siri Shortcuts on macOS. Exposes all Shortcuts as MCP tools.",
    "repository": {
      "url": "https://github.com/dvcrn/mcp-server-siri-shortcuts",
      "source": "github",
      "stars": 157,
      "lastUpdated": "2025-08-14T06:48:35Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "siri-shortcuts",
    "serverConfig": {
      "type": "stdio",
      "command": "npx",
      "args": [
        "mcp-server-siri-shortcuts"
      ],
      "env": {
        "GENERATE_SHORTCUT_TOOLS": "true",
        "INJECT_SHORTCUT_LIST": "false"
      }
    }
  },
  {
    "id": "skyvern:f9462fdb",
    "icon": null,
    "name": "Skyvern",
    "description": "MCP to let Claude / Windsurf / Cursor / your LLM control the browser",
    "repository": {
      "url": "https://github.com/Skyvern-AI/skyvern/tree/main/integrations/mcp",
      "source": "github",
      "stars": 14061,
      "lastUpdated": "2025-08-17T00:48:15Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "skyvern",
    "serverConfig": {
      "type": "stdio",
      "command": "PATH_TO_PYTHON",
      "args": [
        "-m",
        "skyvern",
        "run",
        "mcp"
      ],
      "env": {
        "SKYVERN_BASE_URL": "https://api.skyvern.com",
        "SKYVERN_API_KEY": "YOUR_SKYVERN_API_KEY"
      }
    }
  },
  {
    "id": "slack:d2cd7e5e",
    "icon": null,
    "name": "Slack",
    "description": "The most powerful MCP server for Slack Workspaces. This integration supports both Stdio and SSE transports, proxy settings and does not require any permissions or bots being created or approved by Workspace admins 😏.",
    "repository": {
      "url": "https://github.com/korotovsky/slack-mcp-server",
      "source": "github",
      "stars": 503,
      "lastUpdated": "2025-08-16T13:25:40Z"
    },
    "tags": [
      "community"
    ]
  },
  {
    "id": "slack:b200f2a2",
    "icon": null,
    "name": "Slack",
    "description": "Slack MCP server which supports both stdio and Streamable HTTP transports. Extended from the original Anthropic's implementation which is now archived",
    "repository": {
      "url": "https://github.com/zencoderai/slack-mcp-server",
      "source": "github",
      "stars": 22,
      "lastUpdated": "2025-08-13T01:15:32Z"
    },
    "tags": [
      "community"
    ]
  },
  {
    "id": "slidespeak:9a49f2d8",
    "icon": null,
    "name": "Slidespeak",
    "description": "Create PowerPoint presentations using the Slidespeak API.",
    "repository": {
      "url": "https://github.com/SlideSpeak/slidespeak-mcp",
      "source": "github",
      "stars": 8,
      "lastUpdated": "2025-08-12T10:43:20Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "slidespeak",
    "serverConfig": {
      "type": "stdio",
      "command": "docker",
      "args": [
        "run",
        "-i",
        "--rm",
        "-e",
        "SLIDESPEAK_API_KEY",
        "slidespeak/slidespeak-mcp:latest"
      ],
      "env": {
        "SLIDESPEAK_API_KEY": "YOUR-SLIDESPEAK-API-KEY-HERE"
      }
    }
  },
  {
    "id": "smartlead:165bd540",
    "icon": null,
    "name": "Smartlead",
    "description": "MCP to connect to Smartlead. Additional, tooling, functionality, and connection to workflow automation platforms also available.",
    "repository": {
      "url": "https://github.com/jean-technologies/smartlead-mcp-server-local",
      "source": "github",
      "stars": 15,
      "lastUpdated": "2025-08-08T20:57:45Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "smartlead",
    "serverConfig": {
      "type": "stdio",
      "command": "npx",
      "args": [
        "smartlead-mcp-server",
        "start"
      ],
      "env": {
        "SMARTLEAD_API_KEY": "your_api_key_here"
      }
    }
  },
  {
    "id": "snowflake:cec14842",
    "icon": null,
    "name": "Snowflake",
    "description": "This MCP server enables LLMs to interact with Snowflake databases, allowing for secure and controlled data operations.",
    "repository": {
      "url": "https://github.com/isaacwasserman/mcp-snowflake-server",
      "source": "github",
      "stars": 152,
      "lastUpdated": "2025-08-16T13:24:42Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "snowflake",
    "serverConfig": {
      "type": "stdio",
      "command": "uvx",
      "args": [
        "--python=3.12",
        "mcp_snowflake_server",
        "--account",
        "your_account",
        "--warehouse",
        "your_warehouse",
        "--user",
        "your_user",
        "--password",
        "your_password",
        "--role",
        "your_role",
        "--database",
        "your_database",
        "--schema",
        "your_schema"
      ]
    }
  },
  {
    "id": "soccerdataapi:16b4e456",
    "icon": null,
    "name": "SoccerDataAPI",
    "description": "This MCP server provides real-time football match data based on the SoccerDataAPI.",
    "repository": {
      "url": "https://github.com/yeonupark/mcp-soccer-data",
      "source": "github",
      "stars": 17,
      "lastUpdated": "2025-08-12T07:57:34Z"
    },
    "tags": [
      "community"
    ]
  },
  {
    "id": "solana-agent-kit:fe1f34ef",
    "icon": null,
    "name": "Solana Agent Kit",
    "description": "This MCP server enables LLMs to interact with the Solana blockchain with help of Solana Agent Kit by SendAI, allowing for 40+ protocol actions and growing",
    "repository": {
      "url": "https://github.com/sendaifun/solana-agent-kit/tree/main/examples/agent-kit-mcp-server",
      "source": "github",
      "stars": 1456,
      "lastUpdated": "2025-08-16T13:48:31Z"
    },
    "tags": [
      "community"
    ]
  },
  {
    "id": "solr-mcp:b34aecf4",
    "icon": null,
    "name": "Solr MCP",
    "description": "This MCP server offers a basic functionality to perform a search on Solr servers.",
    "repository": {
      "url": "https://github.com/mjochum64/mcp-solr-search",
      "source": "github",
      "stars": 7,
      "lastUpdated": "2025-08-14T11:06:16Z"
    },
    "tags": [
      "community"
    ]
  },
  {
    "id": "solver:ec2e0bf4",
    "icon": null,
    "name": "Solver",
    "description": "Solves constraint satisfaction and optimization problems .",
    "repository": {
      "url": "https://github.com/szeider/mcp-solver",
      "source": "github",
      "stars": 105,
      "lastUpdated": "2025-08-15T06:46:05Z"
    },
    "tags": [
      "community"
    ]
  },
  {
    "id": "solvitor:bf05127d",
    "icon": null,
    "name": "Solvitor",
    "description": "",
    "repository": {
      "url": "https://github.com/Adeptus-Innovatio/solvitor-mcp",
      "source": "github",
      "stars": 1,
      "lastUpdated": "2025-07-26T17:07:08Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "solvitor",
    "serverConfig": {
      "type": "stdio",
      "command": "/Users/$username/.cargo/bin/solvitor-mcp",
      "args": [],
      "env": {
        "SOLVITOR_API_KEY": "your_solvitor_api_key"
      }
    }
  },
  {
    "id": "specbridge:51b524f5",
    "icon": null,
    "name": "Specbridge",
    "description": "Easily turn your OpenAPI specs into MCP Tools.",
    "repository": {
      "url": "https://github.com/TBosak/specbridge",
      "source": "github",
      "stars": 4,
      "lastUpdated": "2025-07-26T06:57:41Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "specbridge",
    "serverConfig": {
      "type": "stdio",
      "command": "npx",
      "args": [
        "-y",
        "specbridge",
        "--specs",
        "/absolute/path/to/your/specs"
      ]
    }
  },
  {
    "id": "splunk:e8bd3ddb",
    "icon": null,
    "name": "Splunk",
    "description": "Golang MCP server for Splunk (lists saved searches, alerts, indexes, macros...). Supports SSE and STDIO.",
    "repository": {
      "url": "https://github.com/jkosik/mcp-server-splunk",
      "source": "github",
      "stars": 5,
      "lastUpdated": "2025-07-27T03:04:03Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "splunk",
    "serverConfig": {
      "type": "stdio",
      "command": "/Users/juraj/data/github.com/jkosik/mcp-server-splunk/cmd/mcp-server-splunk/mcp-server-splunk",
      "env": {
        "SPLUNK_URL": "https://your-splunk-instance:8089",
        "SPLUNK_TOKEN": "your-splunk-token"
      }
    }
  },
  {
    "id": "spotify:735cbaa5",
    "icon": null,
    "name": "Spotify",
    "description": "This MCP allows an LLM to play and use Spotify.",
    "repository": {
      "url": "https://github.com/varunneal/spotify-mcp",
      "source": "github",
      "stars": 454,
      "lastUpdated": "2025-08-16T14:23:52Z"
    },
    "tags": [
      "community"
    ]
  },
  {
    "id": "spring-initializr:3d1b0b58",
    "icon": null,
    "name": "Spring Initializr",
    "description": "This MCP allows an LLM to create Spring Boot projects with custom configurations. Instead of manually visiting start.spring.io, you can now ask your AI assistant to generate projects with specific dependencies, Java versions, and project structures.",
    "repository": {
      "url": "https://github.com/hpalma/springinitializr-mcp",
      "source": "github",
      "stars": 2,
      "lastUpdated": "2025-08-06T11:11:24Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "spring-initializr",
    "serverConfig": {
      "type": "stdio",
      "command": "/path/to/springinitializr-mcp-binary"
    }
  },
  {
    "id": "squad-ai:a0a221dc",
    "icon": null,
    "name": "Squad AI",
    "description": "",
    "repository": {
      "url": "https://github.com/the-basilisk-ai/squad-mcp",
      "source": "github",
      "stars": 1,
      "lastUpdated": "2025-08-11T16:24:27Z"
    },
    "tags": [
      "community"
    ]
  },
  {
    "id": "ssh:7aaddec9",
    "icon": null,
    "name": "SSH",
    "description": "Agent for managing and controlling SSH connections.",
    "repository": {
      "url": "https://github.com/AiondaDotCom/mcp-ssh",
      "source": "github",
      "stars": 22,
      "lastUpdated": "2025-08-15T05:51:32Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "ssh",
    "serverConfig": {
      "type": "stdio",
      "command": "npx",
      "args": [
        "@aiondadotcom/mcp-ssh"
      ]
    }
  },
  {
    "id": "ssh:550f8cc4",
    "icon": null,
    "name": "SSH",
    "description": "An MCP server that can execute SSH commands remotely, upload files, download files, and so on.",
    "repository": {
      "url": "https://github.com/classfang/ssh-mcp-server",
      "source": "github",
      "stars": 44,
      "lastUpdated": "2025-08-15T01:34:46Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "ssh",
    "serverConfig": {
      "type": "stdio",
      "command": "npx",
      "args": [
        "-y",
        "@fangjunjie/ssh-mcp-server",
        "--host 192.168.1.1",
        "--port 22",
        "--username root",
        "--password pwd123456"
      ]
    }
  },
  {
    "id": "ssh-mcp-server:51198328",
    "icon": null,
    "name": "SSH MCP Server",
    "description": "A production-ready Model Context Protocol server for SSH automation with background execution, file transfers, and comprehensive timeout protection. Features structured output, progress tracking, and enterprise-grade testing (87% coverage).",
    "repository": {
      "url": "https://github.com/sinjab/mcp_ssh",
      "source": "github",
      "stars": 0,
      "lastUpdated": "2025-07-29T17:55:31Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "ssh-mcp-server",
    "serverConfig": {
      "type": "stdio",
      "command": "uv",
      "args": [
        "--directory",
        "/path/to/mcp_ssh",
        "run",
        "mcp_ssh"
      ],
      "env": {
        "SSH_KEY_PHRASE": "your-passphrase",
        "SSH_KEY_FILE": "~/.ssh/id_rsa"
      }
    }
  },
  {
    "id": "sslmon:75b9548b",
    "icon": null,
    "name": "sslmon",
    "description": "Domain/HTTPS/SSL domain registration information and SSL certificate monitoring capabilities. Query domain registration and expiration information, and SSL certificate information and validity status for any domain.",
    "repository": {
      "url": "https://github.com/firesh/sslmon-mcp",
      "source": "github",
      "stars": 1,
      "lastUpdated": "2025-08-07T09:53:22Z"
    },
    "tags": [
      "community"
    ]
  },
  {
    "id": "standard-korean-dictionary:f51dfed4",
    "icon": null,
    "name": "Standard Korean Dictionary",
    "description": "Search the dictionary using API",
    "repository": {
      "url": "https://github.com/privetin/stdict",
      "source": "github",
      "stars": 0,
      "lastUpdated": "2025-04-10T21:45:50Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "standard-korean-dictionary",
    "serverConfig": {
      "type": "stdio",
      "command": "uv",
      "args": [
        "--directory",
        "/path/to/stdict",
        "run",
        "stdict.py"
      ],
      "env": {
        "STDICT_API_KEY": "YOUR_API_KEY"
      }
    }
  },
  {
    "id": "star-wars:488f39f9",
    "icon": null,
    "name": "Star Wars",
    "description": "MCP Server for the SWAPI Star Wars API. The main goal of the project is to show how an MCP server can be used to interact with APIs.",
    "repository": {
      "url": "https://github.com/johnpapa/mcp-starwars",
      "source": "github",
      "stars": 6,
      "lastUpdated": "2025-07-03T17:16:06Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "star-wars",
    "serverConfig": {
      "type": "stdio",
      "command": "npx",
      "args": [
        "-y",
        "@johnpapa/mcp-starwars"
      ],
      "env": {}
    }
  },
  {
    "id": "starknet-mcp-server:d6feaf6f",
    "icon": null,
    "name": "Starknet MCP Server",
    "description": "A comprehensive MCP server for interacting with the Starknet blockchain, providing tools for querying blockchain data, resolving StarknetIDs, and performing token transfers.",
    "repository": {
      "url": "https://github.com/mcpdotdirect/starknet-mcp-server",
      "source": "github",
      "stars": 4,
      "lastUpdated": "2025-05-23T18:18:05Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "starknet-mcp-server",
    "serverConfig": {
      "type": "stdio",
      "command": "npx",
      "args": [
        "@mcpdotdirect/starknet-mcp-server"
      ]
    }
  },
  {
    "id": "starwind-ui:ed005938",
    "icon": null,
    "name": "Starwind UI",
    "description": "This MCP provides relevant commands, documentation, and other information to allow LLMs to take full advantage of Starwind UI's open source Astro components.",
    "repository": {
      "url": "https://github.com/Boston343/starwind-ui-mcp/",
      "source": "github",
      "stars": 25,
      "lastUpdated": "2025-07-28T12:42:51Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "starwind-ui",
    "serverConfig": {
      "type": "stdio",
      "command": "npx",
      "args": [
        "-y",
        "@starwind-ui/mcp"
      ],
      "env": {}
    }
  },
  {
    "id": "stellar:b58bbc73",
    "icon": null,
    "name": "Stellar",
    "description": "This MCP server enables LLMs to interact with the Stellar blockchain to create accounts, check address balances, analyze transactions, view transaction history, mint new assets, interact with smart contracts and much more.",
    "repository": {
      "url": "https://github.com/syronlabs/stellar-mcp/",
      "source": "github",
      "stars": 14,
      "lastUpdated": "2025-07-12T14:57:43Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "stellar",
    "serverConfig": {
      "type": "stdio",
      "command": "npx",
      "args": [
        "-y",
        "stellar-mcp"
      ]
    }
  },
  {
    "id": "stitch-ai:ded37223",
    "icon": null,
    "name": "Stitch AI",
    "description": "Knowledge management system for AI agents with memory space creation and retrieval capabilities.",
    "repository": {
      "url": "https://github.com/StitchAI/stitch-ai-mcp/",
      "source": "github",
      "stars": 1,
      "lastUpdated": "2025-06-29T16:58:13Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "stitch-ai",
    "serverConfig": {
      "type": "stdio",
      "command": "npx",
      "args": [
        "ts-node",
        "/path/to/cloned/stitch-ai-mcp/src/server.ts"
      ],
      "env": {
        "API_KEY": "<STITCH_AI_API_KEY>",
        "BASE_URL": "https://api-demo.stitch-ai.co"
      }
    }
  },
  {
    "id": "stockfish:e7498545",
    "icon": null,
    "name": "Stockfish",
    "description": "MCP server connecting AI systems to Stockfish chess engine",
    "repository": {
      "url": "https://github.com/sonirico/mcp-stockfish",
      "source": "github",
      "stars": 2,
      "lastUpdated": "2025-07-21T17:01:40Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "stockfish",
    "serverConfig": {
      "type": "stdio",
      "command": "mcp-stockfish",
      "env": {
        "MCP_STOCKFISH_LOG_LEVEL": "info"
      }
    }
  },
  {
    "id": "strava:a43605c3",
    "icon": null,
    "name": "Strava",
    "description": "Connect to the Strava API to access activity data, athlete profiles, segments, and routes, enabling fitness tracking and analysis with Claude.",
    "repository": {
      "url": "https://github.com/r-huijts/strava-mcp",
      "source": "github",
      "stars": 115,
      "lastUpdated": "2025-08-16T19:42:15Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "strava",
    "serverConfig": {
      "type": "stdio",
      "command": "node",
      "args": [
        "/absolute/path/to/your/strava-mcp/dist/server.js"
      ]
    }
  },
  {
    "id": "strava-api:a8fd10c1",
    "icon": null,
    "name": "Strava API",
    "description": "MCP server for Strava API to retrieve one's activities",
    "repository": {
      "url": "https://github.com/tomekkorbak/strava-mcp-server",
      "source": "github",
      "stars": 14,
      "lastUpdated": "2025-08-03T08:08:32Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "strava-api",
    "serverConfig": {
      "type": "stdio",
      "command": "uvx",
      "args": [
        "strava-mcp-server"
      ],
      "env": {
        "STRAVA_CLIENT_ID": "YOUR_CLIENT_ID",
        "STRAVA_CLIENT_SECRET": "YOUR_CLIENT_SECRET",
        "STRAVA_REFRESH_TOKEN": "YOUR_REFRESH_TOKEN"
      }
    }
  },
  {
    "id": "stripe:b00353cd",
    "icon": null,
    "name": "Stripe",
    "description": "This MCP allows integration with Stripe for handling payments, customers, and refunds.",
    "repository": {
      "url": "https://github.com/atharvagupta2003/mcp-stripe",
      "source": "github",
      "stars": 39,
      "lastUpdated": "2025-07-26T23:46:35Z"
    },
    "tags": [
      "community"
    ]
  },
  {
    "id": "substack-medium:fb64b34a",
    "icon": null,
    "name": "Substack/Medium",
    "description": "Connect Claude to your Substack/Medium writing, enabling semantic search and analysis of your published content.",
    "repository": {
      "url": "https://github.com/jonathan-politzki/mcp-writer-substack",
      "source": "github",
      "stars": 18,
      "lastUpdated": "2025-08-03T08:31:48Z"
    },
    "tags": [
      "community"
    ]
  },
  {
    "id": "system-health:0c747c56",
    "icon": null,
    "name": "System Health",
    "description": "The MCP (Multi-Channel Protocol) System Health Monitoring is a robust, real-time monitoring solution designed to provide comprehensive health metrics and alerts for remote Linux servers.",
    "repository": {
      "url": "https://github.com/thanhtung0201/mcp-remote-system-health",
      "source": "github",
      "stars": 5,
      "lastUpdated": "2025-08-04T16:15:29Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "system-health",
    "serverConfig": {
      "type": "stdio",
      "command": "/path/to/your/venv/bin/python3",
      "args": [
        "/path/to/your/system-health-mcp-server/src/mcp_launcher.py",
        "--username=your_ssh_username",
        "--password=your_ssh_password",
        "--key-path=~/.ssh/id_rsa",
        "--servers=server1.example.com,server2.example.com",
        "--log-level=debug"
      ]
    }
  },
  {
    "id": "systemsage:d4d2e9ec",
    "icon": null,
    "name": "SystemSage",
    "description": "A powerful, cross-platform system management and monitoring tool for Windows, Linux, and macOS.",
    "repository": {
      "url": "https://github.com/Tarusharma1/SystemSage",
      "source": "github",
      "stars": 1,
      "lastUpdated": "2025-08-15T09:14:55Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "systemsage",
    "serverConfig": {
      "type": "stdio",
      "command": "uvx",
      "args": [
        "systemsage@latest"
      ]
    }
  },
  {
    "id": "talk-to-figma:5f99d30a",
    "icon": null,
    "name": "Talk To Figma",
    "description": "This MCP server enables LLMs to interact with Figma, allowing them to read and modify designs programmatically.",
    "repository": {
      "url": "https://github.com/sonnylazuardi/cursor-talk-to-figma-mcp",
      "source": "github",
      "stars": 5046,
      "lastUpdated": "2025-08-17T01:50:23Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "talk-to-figma",
    "serverConfig": {
      "type": "stdio",
      "command": "bun",
      "args": [
        "/path-to-repo/src/talk_to_figma_mcp/server.ts"
      ]
    }
  },
  {
    "id": "talk-to-figma-via-claude:59da2e36",
    "icon": null,
    "name": "Talk To Figma via Claude",
    "description": "TMCP server that provides seamless Figma integration specifically for Claude Desktop, enabling design creation, modification, and real-time collaboration through natural language commands.",
    "repository": {
      "url": "https://github.com/gaganmanku96/talk-with-figma-claude",
      "source": "github",
      "stars": 9,
      "lastUpdated": "2025-08-17T01:24:59Z"
    },
    "tags": [
      "community"
    ]
  },
  {
    "id": "tam-mcp-server:dc0bdaf0",
    "icon": null,
    "name": "TAM MCP Server",
    "description": "Market research and business intelligence with TAM/SAM calculations and integration across 8 economic data sources: Alpha Vantage, BLS, Census Bureau, FRED, IMF, Nasdaq Data Link, OECD, and World Bank.",
    "repository": {
      "url": "https://github.com/gvaibhav/TAM-MCP-Server",
      "source": "github",
      "stars": 20,
      "lastUpdated": "2025-08-06T08:24:39Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "tam-mcp-server",
    "serverConfig": {
      "type": "stdio",
      "command": "npm",
      "args": [
        "run",
        "start:http"
      ]
    }
  },
  {
    "id": "tasks:db4ca4bd",
    "icon": null,
    "name": "Tasks",
    "description": "An efficient task manager. Designed to minimize tool confusion and maximize LLM budget efficiency while providing powerful search, filtering, and organization capabilities across multiple file formats (Markdown, JSON, YAML)",
    "repository": {
      "url": "https://github.com/flesler/mcp-tasks",
      "source": "github",
      "stars": 11,
      "lastUpdated": "2025-08-15T04:44:32Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "tasks",
    "serverConfig": {
      "type": "stdio",
      "command": "npx",
      "args": [
        "-y",
        "mcp-tasks"
      ]
    }
  },
  {
    "id": "tavily-search:15650548",
    "icon": null,
    "name": "Tavily search",
    "description": "An MCP server for Tavily's search & news API, with explicit site inclusions/exclusions",
    "repository": {
      "url": "https://github.com/RamXX/mcp-tavily",
      "source": "github",
      "stars": 68,
      "lastUpdated": "2025-08-11T13:40:34Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "tavily-search",
    "serverConfig": {
      "type": "stdio",
      "command": "python",
      "args": [
        "-m",
        "mcp_server_tavily"
      ]
    }
  },
  {
    "id": "teamretro:7572bc06",
    "icon": null,
    "name": "TeamRetro",
    "description": "This MCP server allows LLMs to interact with TeamRetro, allowing LLMs to manage user, team, team member, retrospective, health check, action, agreement and fetch the reports.",
    "repository": {
      "url": "https://github.com/adepanges/teamretro-mcp-server",
      "source": "github",
      "stars": 0,
      "lastUpdated": "2025-07-09T12:20:20Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "teamretro",
    "serverConfig": {
      "type": "stdio",
      "command": "npx",
      "args": [
        "-y",
        "teamretro-mcp-server"
      ],
      "env": {
        "TEAMRETRO_AUTH_TYPE": "apiKey",
        "TEAMRETRO_API_KEY": "your-api-key"
      }
    }
  },
  {
    "id": "telegram:1d8e4df7",
    "icon": null,
    "name": "Telegram",
    "description": "An MCP server that provides paginated chat reading, message retrieval, and message sending capabilities for Telegram through Telethon integration.",
    "repository": {
      "url": "https://github.com/chigwell/telegram-mcp",
      "source": "github",
      "stars": 282,
      "lastUpdated": "2025-08-15T05:01:45Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "telegram",
    "serverConfig": {
      "type": "stdio",
      "command": "uv",
      "args": [
        "--directory",
        "/full/path/to/telegram-mcp",
        "run",
        "main.py"
      ]
    }
  },
  {
    "id": "telegram-client:4d510c89",
    "icon": null,
    "name": "Telegram-Client",
    "description": "A Telegram API bridge that manages user data, dialogs, messages, drafts, read status, and more for seamless interactions.",
    "repository": {
      "url": "https://github.com/chaindead/telegram-mcp",
      "source": "github",
      "stars": 172,
      "lastUpdated": "2025-08-16T04:40:15Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "telegram-client",
    "serverConfig": {
      "type": "stdio",
      "command": "npx",
      "args": [
        "-y",
        "@chaindead/telegram-mcp"
      ],
      "env": {
        "TG_APP_ID": "<your-api-id>",
        "TG_API_HASH": "<your-api-hash>"
      }
    }
  },
  {
    "id": "telegram-mcp-server:97a27108",
    "icon": null,
    "name": "Telegram-mcp-server",
    "description": "Access Telegram channels and groups directly in Claude. Features dual-mode operation with API access (100x faster) or web scraping, unlimited post retrieval, and search functionality.",
    "repository": {
      "url": "https://github.com/DLHellMe/telegram-mcp-server",
      "source": "github",
      "stars": 19,
      "lastUpdated": "2025-08-12T23:35:26Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "telegram-mcp-server",
    "serverConfig": {
      "type": "stdio",
      "command": "node",
      "args": [
        "/absolute/path/to/telegram-mcp-server/dist/index.js"
      ],
      "env": {
        "TELEGRAM_API_ID": "your_api_id",
        "TELEGRAM_API_HASH": "your_api_hash"
      }
    }
  },
  {
    "id": "template-mcp-server:e8ba87c6",
    "icon": null,
    "name": "Template MCP Server",
    "description": "A CLI tool to create a new Model Context Protocol server project with TypeScript support, dual transport options, and an extensible structure",
    "repository": {
      "url": "https://github.com/mcpdotdirect/template-mcp-server",
      "source": "github",
      "stars": 56,
      "lastUpdated": "2025-08-14T06:10:06Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "template-mcp-server",
    "serverConfig": {
      "type": "stdio",
      "command": "npm",
      "args": [
        "start"
      ],
      "env": {
        "NODE_ENV": "development"
      }
    }
  },
  {
    "id": "tempo:fa2bc6ce",
    "icon": null,
    "name": "Tempo",
    "description": "An MCP server to query traces/spans from Grafana Tempo.",
    "repository": {
      "url": "https://github.com/scottlepp/tempo-mcp-server",
      "source": "github",
      "stars": 12,
      "lastUpdated": "2025-07-28T12:39:30Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "tempo",
    "serverConfig": {
      "type": "stdio",
      "command": "docker",
      "args": [
        "run",
        "--rm",
        "-i",
        "-e",
        "TEMPO_URL=http://host.docker.internal:3200",
        "tempo-mcp-server"
      ]
    }
  },
  {
    "id": "teradata:aa0c8bf8",
    "icon": null,
    "name": "Teradata",
    "description": "his MCP server enables LLMs to interact with Teradata databases. This MCP Server support tools and prompts for multi task data analytics",
    "repository": {
      "url": "https://github.com/arturborycki/mcp-teradata",
      "source": "github",
      "stars": 5,
      "lastUpdated": "2025-08-12T08:21:31Z"
    },
    "tags": [
      "community"
    ]
  },
  {
    "id": "terminal-control:dd387f81",
    "icon": null,
    "name": "Terminal-Control",
    "description": "An MCP server that enables secure terminal command execution, directory navigation, and file system operations through a standardized interface.",
    "repository": {
      "url": "https://github.com/GongRzhe/terminal-controller-mcp",
      "source": "github",
      "stars": 76,
      "lastUpdated": "2025-08-11T13:40:19Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "terminal-control",
    "serverConfig": {
      "type": "stdio",
      "command": "uvx",
      "args": [
        "terminal_controller"
      ]
    }
  },
  {
    "id": "terraform-cloud:023b4d34",
    "icon": null,
    "name": "Terraform-Cloud",
    "description": "An MCP server that integrates AI assistants with the Terraform Cloud API, allowing you to manage your infrastructure through natural conversation.",
    "repository": {
      "url": "https://github.com/severity1/terraform-cloud-mcp",
      "source": "github",
      "stars": 15,
      "lastUpdated": "2025-08-11T10:40:33Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "terraform-cloud",
    "serverConfig": {
      "type": "stdio",
      "command": "/path/to/uv",
      "args": [
        "--directory",
        "/path/to/your/terraform-cloud-mcp",
        "run",
        "terraform-cloud-mcp"
      ],
      "env": {
        "TFC_TOKEN": "my token...",
        "TFC_ADDRESS": "https://app.terraform.io",
        "ENABLE_DELETE_TOOLS": "false"
      }
    }
  },
  {
    "id": "tft-match-analyzer:5adff5eb",
    "icon": null,
    "name": "TFT-Match-Analyzer",
    "description": "MCP server for teamfight tactics match history & match details fetching, providing user the detailed context for every match.",
    "repository": {
      "url": "https://github.com/GeLi2001/tft-mcp-server",
      "source": "github",
      "stars": 8,
      "lastUpdated": "2025-06-04T19:50:42Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "tft-match-analyzer",
    "serverConfig": {
      "type": "stdio",
      "command": "npx",
      "args": [
        "mcp-server-tft",
        "--apiKey",
        "<YOUR_RIOT_API_KEY>",
        "--gameName",
        "<YOUR_GAME_NAME>",
        "--tagLine",
        "<YOUR_TAG_LINE>"
      ]
    }
  },
  {
    "id": "thales-cdsp-cakm-mcp-server:a64998ee",
    "icon": null,
    "name": "Thales CDSP CAKM MCP Server",
    "description": "An MCP server for the Thales CipherTrust Data Security Platform (CDSP) Cloud Key Management (CAKM) connector. This MCP server supports Ms SQL and Oracle databases.",
    "repository": {
      "url": "https://github.com/sanyambassi/thales-cdsp-cakm-mcp-server",
      "source": "github",
      "stars": 0,
      "lastUpdated": "2025-08-01T16:27:36Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "thales-cdsp-cakm-mcp-server",
    "serverConfig": {
      "type": "stdio",
      "command": "uv",
      "args": [
        "run",
        "python",
        "-m",
        "database_tde_server"
      ],
      "env": {
        "DB_TDE_SERVER_NAME": "database-tde-mcp",
        "DB_TDE_LOG_LEVEL": "INFO",
        "DB_TDE_DATABASE_CONNECTIONS": "[{\"name\":\"prod_sql\",\"db_type\":\"sqlserver\",\"host\":\"sql-prod.company.com\",\"port\":1433,\"username\":\"tde_admin\",\"password\":\"secure_password\"},{\"name\":\"oracle_cdb1\",\"db_type\":\"oracle\",\"host\":\"oracle-prod.company.com\",\"port\":1521,\"username\":\"sys\",\"password\":\"oracle_password\",\"oracle_config\":{\"oracle_home\":\"/u01/app/oracle/product/21.0.0/dbhome_1\",\"oracle_sid\":\"cdb1\",\"service_name\":\"orcl\",\"mode\":\"SYSDBA\",\"wallet_root\":\"/opt/oracle/wallet\"},\"ssh_config\":{\"host\":\"oracle-prod.company.com\",\"username\":\"oracle\",\"private_key_path\":\"/path/to/private-key.pem\",\"port\":22,\"timeout\":30}}]"
      }
    }
  },
  {
    "id": "thales-cdsp-crdp-mcp-server:a691a910",
    "icon": null,
    "name": "Thales CDSP CRDP MCP Server",
    "description": "A Model Context Protocol (MCP) server that allows interacting with the CipherTrust RestFul Data Protection (CRDP) data protection service.",
    "repository": {
      "url": "https://github.com/sanyambassi/thales-cdsp-crdp-mcp-server",
      "source": "github",
      "stars": 1,
      "lastUpdated": "2025-08-15T00:14:45Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "thales-cdsp-crdp-mcp-server",
    "serverConfig": {
      "type": "stdio",
      "command": "node",
      "args": [
        "/path/to/your/crdp-mcp-server/dist/crdp-mcp-server.js"
      ],
      "env": {
        "CRDP_SERVICE_URL": "http://your-crdp-server:8090",
        "CRDP_PROBES_URL": "http://your-crdp-server:8080",
        "MCP_TRANSPORT": "stdio"
      }
    }
  },
  {
    "id": "thales-ciphertrust-manager-mcp-server:dd615dff",
    "icon": null,
    "name": "Thales CipherTrust Manager MCP Server",
    "description": "MCP server for Thales CipherTrust Manager integration, enabling secure key management and cryptographic operations.",
    "repository": {
      "url": "https://github.com/sanyambassi/ciphertrust-manager-mcp-server",
      "source": "github",
      "stars": 5,
      "lastUpdated": "2025-08-16T19:40:36Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "thales-ciphertrust-manager-mcp-server",
    "serverConfig": {
      "type": "stdio",
      "command": "Path to your project folder/ciphertrust-manager-mcp-server/.venv/bin/ciphertrust-mcp-server",
      "args": [],
      "env": {
        "CIPHERTRUST_URL": "https://your-ciphertrust.example.com",
        "CIPHERTRUST_USER": "admin",
        "CIPHERTRUST_PASSWORD": "your-password-here"
      }
    }
  },
  {
    "id": "thegraph-mcp:34ddf6a5",
    "icon": null,
    "name": "thegraph-mcp",
    "description": "An MCP server that powers AI agents with indexed blockchain data from The Graph.",
    "repository": {
      "url": "https://github.com/kukapay/thegraph-mcp",
      "source": "github",
      "stars": 5,
      "lastUpdated": "2025-07-31T09:46:46Z"
    },
    "tags": [
      "community"
    ]
  },
  {
    "id": "things3-mcp:c24b9185",
    "icon": null,
    "name": "Things3 MCP",
    "description": "Things3 task management integration for macOS with comprehensive TODO, project, and tag management.",
    "repository": {
      "url": "https://github.com/urbanogardun/things3-mcp",
      "source": "github",
      "stars": 8,
      "lastUpdated": "2025-08-13T18:03:50Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "things3-mcp",
    "serverConfig": {
      "type": "stdio",
      "command": "npx",
      "args": [
        "things3-mcp@latest"
      ],
      "env": {
        "THINGS3_AUTH_TOKEN": "your_auth_token_here"
      }
    }
  },
  {
    "id": "think-mcp:67f2296f",
    "icon": null,
    "name": "Think MCP",
    "description": "Enhances any agent's reasoning capabilities by integrating the think-tools, as described in Anthropic's article.",
    "repository": {
      "url": "https://github.com/Rai220/think-mcp",
      "source": "github",
      "stars": 61,
      "lastUpdated": "2025-08-15T08:42:03Z"
    },
    "tags": [
      "community"
    ]
  },
  {
    "id": "think-node-mcp:de0a9eaa",
    "icon": null,
    "name": "Think Node MCP",
    "description": "Enhances any agent's reasoning capabilities by integrating the think-tools, as described in Anthropic's article. (Works with Node)",
    "repository": {
      "url": "https://github.com/abhinav-mangla/think-tool-mcp",
      "source": "github",
      "stars": 7,
      "lastUpdated": "2025-08-15T08:42:00Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "think-node-mcp",
    "serverConfig": {
      "type": "stdio",
      "command": "npx",
      "args": [
        "-y",
        "think-tool-mcp"
      ]
    }
  },
  {
    "id": "ticketmaster:8615c6cf",
    "icon": null,
    "name": "Ticketmaster",
    "description": "Search for events, venues, and attractions through the Ticketmaster Discovery API",
    "repository": {
      "url": "https://github.com/delorenj/mcp-server-ticketmaster",
      "source": "github",
      "stars": 20,
      "lastUpdated": "2025-07-01T23:37:54Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "ticketmaster",
    "serverConfig": {
      "type": "stdio",
      "command": "npx",
      "args": [
        "-y",
        "@delorenj/mcp-server-ticketmaster"
      ],
      "env": {
        "TICKETMASTER_API_KEY": "your-api-key-here"
      }
    }
  },
  {
    "id": "ticktick:81df29c3",
    "icon": null,
    "name": "TickTick",
    "description": "A Model Context Protocol (MCP) server designed to integrate with the TickTick task management platform, enabling intelligent context-aware task operations and automation.",
    "repository": {
      "url": "https://github.com/alexarevalo9/ticktick-mcp-server",
      "source": "github",
      "stars": 33,
      "lastUpdated": "2025-08-15T04:44:40Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "ticktick",
    "serverConfig": {
      "type": "stdio",
      "command": "npx",
      "args": [
        "-y",
        "@alexarevalo.ai/mcp-server-ticktick"
      ],
      "env": {
        "TICKTICK_CLIENT_ID": "<YOUR_CLIENT_ID>",
        "TICKTICK_CLIENT_SECRET": "<YOUR_CLIENT_SECRET>",
        "TICKTICK_ACCESS_TOKEN": "<YOUR_ACCESS_TOKEN>"
      }
    }
  },
  {
    "id": "tigergraph:27cf55ee",
    "icon": null,
    "name": "TigerGraph",
    "description": "A community built MCP server that interacts with TigerGraph Graph Database.",
    "repository": {
      "url": "https://github.com/custom-discoveries/TigerGraph_MCP",
      "source": "github",
      "stars": 0,
      "lastUpdated": "2025-08-15T15:58:09Z"
    },
    "tags": [
      "community"
    ]
  },
  {
    "id": "tip-md:2fb74d8b",
    "icon": null,
    "name": "tip.md",
    "description": "An MCP server that enables AI assistants to interact with tip.md's crypto tipping functionality, allowing agents or supporters to tip registered developers directly from AI chat interfaces.",
    "repository": {
      "url": "https://github.com/tipdotmd#-mcp-server-for-ai-assistants",
      "source": "github"
    },
    "tags": [
      "community"
    ]
  },
  {
    "id": "tmd-earthquake:7f695fb5",
    "icon": null,
    "name": "TMD Earthquake",
    "description": "🌍 Real-time earthquake monitoring from Thai Meteorological Department. Features magnitude filtering, location-based search (Thai/English), today's events tracking, dangerous earthquake alerts, and comprehensive statistics. Covers regional and global seismic activities.",
    "repository": {
      "url": "https://github.com/amornpan/tmd-earthquake-server-1.0",
      "source": "github",
      "stars": 1,
      "lastUpdated": "2025-08-15T14:37:38Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "tmd-earthquake",
    "serverConfig": {
      "type": "stdio",
      "command": "python",
      "args": [
        "C:\\Users\\Asus\\2025-Aug-APT_LLMs-for-Telecom\\tmd-earthquake-server-1.0\\server.py"
      ]
    }
  },
  {
    "id": "tmdb:74917842",
    "icon": null,
    "name": "TMDB",
    "description": "This MCP server integrates with The Movie Database (TMDB) API to provide movie information, search capabilities, and recommendations.",
    "repository": {
      "url": "https://github.com/Laksh-star/mcp-server-tmdb",
      "source": "github",
      "stars": 49,
      "lastUpdated": "2025-08-06T02:01:22Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "tmdb",
    "serverConfig": {
      "type": "stdio",
      "command": "/full/path/to/dist/index.js",
      "env": {
        "TMDB_API_KEY": "your_api_key_here"
      }
    }
  },
  {
    "id": "todoist:7be17ed9",
    "icon": null,
    "name": "Todoist",
    "description": "Interact with Todoist to manage your tasks.",
    "repository": {
      "url": "https://github.com/abhiz123/todoist-mcp-server",
      "source": "github",
      "stars": 300,
      "lastUpdated": "2025-08-15T04:43:33Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "todoist",
    "serverConfig": {
      "type": "stdio",
      "command": "npx",
      "args": [
        "-y",
        "@abhiz123/todoist-mcp-server"
      ],
      "env": {
        "TODOIST_API_TOKEN": "your_api_token_here"
      }
    }
  },
  {
    "id": "todos:cfdee3e6",
    "icon": null,
    "name": "Todos",
    "description": "A practical todo list manager to use with your favourite chatbot.",
    "repository": {
      "url": "https://github.com/tomelliot/todos-mcp",
      "source": "github",
      "stars": 4,
      "lastUpdated": "2025-08-15T04:45:06Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "todos",
    "serverConfig": {
      "type": "stdio",
      "command": "npx",
      "args": [
        "-y",
        "todos-mcp"
      ]
    }
  },
  {
    "id": "token-minter-mcp:6e6fac0a",
    "icon": null,
    "name": "token-minter-mcp",
    "description": "An MCP server providing tools for AI agents to mint ERC-20 tokens across multiple blockchains.",
    "repository": {
      "url": "https://github.com/kukapay/token-minter-mcp",
      "source": "github",
      "stars": 15,
      "lastUpdated": "2025-07-10T14:44:01Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "token-minter-mcp",
    "serverConfig": {
      "type": "stdio",
      "command": "node",
      "args": [
        "path/to/token-minter-mcp/server/index.js"
      ],
      "env": {
        "INFURA_KEY": "your infura key",
        "PRIVATE_KEY": "your private key"
      }
    }
  },
  {
    "id": "token-revoke-mcp:a45f56e8",
    "icon": null,
    "name": "token-revoke-mcp",
    "description": "An MCP server for checking and revoking ERC-20 token allowances across multiple blockchains.",
    "repository": {
      "url": "https://github.com/kukapay/token-revoke-mcp",
      "source": "github",
      "stars": 2,
      "lastUpdated": "2025-07-10T14:44:30Z"
    },
    "tags": [
      "community"
    ]
  },
  {
    "id": "ton-blockchain-mcp:6a958e5d",
    "icon": null,
    "name": "Ton Blockchain MCP",
    "description": "An MCP server for interacting with Ton Blockchain.",
    "repository": {
      "url": "https://github.com/devonmojito/ton-blockchain-mcp",
      "source": "github",
      "stars": 14,
      "lastUpdated": "2025-07-12T13:25:04Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "ton-blockchain-mcp",
    "serverConfig": {
      "type": "stdio",
      "command": "/Users/devon/ton-mcp/ton-blockchain-mcp/venv/bin/python",
      "args": [
        "-m",
        "tonmcp.mcp_server"
      ],
      "env": {
        "PYTHONPATH": "/Users/devon/ton-mcp/ton-blockchain-mcp/src"
      }
    }
  },
  {
    "id": "touchdesigner:fcd4c018",
    "icon": null,
    "name": "TouchDesigner",
    "description": "An MCP server for TouchDesigner, enabling interaction with TouchDesigner projects, nodes, and parameters.",
    "repository": {
      "url": "https://github.com/8beeeaaat/touchdesigner-mcp",
      "source": "github",
      "stars": 78,
      "lastUpdated": "2025-08-16T01:17:40Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "touchdesigner",
    "serverConfig": {
      "type": "stdio",
      "command": "npx",
      "args": [
        "-y",
        "touchdesigner-mcp-server@latest",
        "--stdio"
      ]
    }
  },
  {
    "id": "transcribe:07b0991f",
    "icon": null,
    "name": "Transcribe",
    "description": "An MCP server provides fast and reliable transcriptions for audio/video files and voice memos. It allows LLMs to interact with the text content of audio/video file.",
    "repository": {
      "url": "https://github.com/transcribe-app/mcp-transcribe",
      "source": "github",
      "stars": 0,
      "lastUpdated": "2025-08-07T15:33:44Z"
    },
    "tags": [
      "community"
    ]
  },
  {
    "id": "travel-planner:9b51a63f",
    "icon": null,
    "name": "Travel Planner",
    "description": "Travel planning and itinerary management server integrating with Google Maps API for location search, place details, and route calculations.",
    "repository": {
      "url": "https://github.com/GongRzhe/TRAVEL-PLANNER-MCP-Server",
      "source": "github",
      "stars": 77,
      "lastUpdated": "2025-08-15T15:29:37Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "travel-planner",
    "serverConfig": {
      "type": "stdio",
      "command": "npx",
      "args": [
        "@gongrzhe/server-travelplanner-mcp"
      ],
      "env": {
        "GOOGLE_MAPS_API_KEY": "your_google_maps_api_key"
      }
    }
  },
  {
    "id": "trello-mcp-server:04d55cbb",
    "icon": null,
    "name": "Trello MCP Server",
    "description": "An MCP server that interact with user Trello boards, modifying them with prompting.",
    "repository": {
      "url": "https://github.com/lioarce01/trello-mcp-server",
      "source": "github",
      "stars": 3,
      "lastUpdated": "2025-06-21T17:15:01Z"
    },
    "tags": [
      "community"
    ]
  },
  {
    "id": "trino:3ae92286",
    "icon": null,
    "name": "Trino",
    "description": "A high-performance Model Context Protocol (MCP) server for Trino implemented in Go.",
    "repository": {
      "url": "https://github.com/tuannvm/mcp-trino",
      "source": "github",
      "stars": 55,
      "lastUpdated": "2025-08-14T02:03:06Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "trino",
    "serverConfig": {
      "type": "streamable",
      "url": "https://your-mcp-server.com/mcp",
      "headers": {
        "Authorization": "Bearer YOUR_JWT_TOKEN"
      }
    }
  },
  {
    "id": "tripadvisor:2630ff34",
    "icon": null,
    "name": "Tripadvisor",
    "description": "An MCP server that enables LLMs to interact with Tripadvisor API, supporting location data, reviews, and photos through standardized MCP interfaces",
    "repository": {
      "url": "https://github.com/pab1it0/tripadvisor-mcp",
      "source": "github",
      "stars": 44,
      "lastUpdated": "2025-08-15T15:40:36Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "tripadvisor",
    "serverConfig": {
      "type": "stdio",
      "command": "docker",
      "args": [
        "run",
        "--rm",
        "-i",
        "-e",
        "TRIPADVISOR_API_KEY",
        "tripadvisor-mcp-server"
      ],
      "env": {
        "TRIPADVISOR_API_KEY": "your_api_key_here"
      }
    }
  },
  {
    "id": "truenas-core-mcp:2757f5ab",
    "icon": null,
    "name": "TrueNAS Core MCP",
    "description": "An MCP server for interacting with TrueNAS Core.",
    "repository": {
      "url": "https://github.com/vespo92/TrueNasCoreMCP",
      "source": "github",
      "stars": 4,
      "lastUpdated": "2025-08-15T02:36:09Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "truenas-core-mcp",
    "serverConfig": {
      "type": "stdio",
      "command": "uvx",
      "args": [
        "truenas-mcp-server"
      ],
      "env": {
        "TRUENAS_URL": "https://your-truenas-server.local",
        "TRUENAS_API_KEY": "your-api-key-here",
        "TRUENAS_VERIFY_SSL": "false"
      }
    }
  },
  {
    "id": "turix-computer-automation-mcp:4fd3d08d",
    "icon": null,
    "name": "TuriX Computer Automation MCP",
    "description": "MCP server for helping automation control your computer complete your pre-setting task.",
    "repository": {
      "url": "https://github.com/TurixAI/TuriX-CUA/tree/mac_mcp",
      "source": "github",
      "stars": 55,
      "lastUpdated": "2025-08-14T16:52:35Z"
    },
    "tags": [
      "community"
    ]
  },
  {
    "id": "tyk-api-management:f2c57752",
    "icon": null,
    "name": "Tyk API Management",
    "description": "Chat with all of your organization's managed APIs and perform other API lifecycle operations, managing tokens, users, analytics, and more.",
    "repository": {
      "url": "https://github.com/TykTechnologies/tyk-dashboard-mcp",
      "source": "github",
      "stars": 1,
      "lastUpdated": "2025-06-25T03:03:23Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "tyk-api-management",
    "serverConfig": {
      "type": "stdio",
      "command": "npx",
      "args": [
        "-y",
        "@tyktechnologies/api-to-mcp",
        "--spec",
        "https://petstore3.swagger.io/api/v3/openapi.json"
      ]
    }
  },
  {
    "id": "typesense:83630a31",
    "icon": null,
    "name": "Typesense",
    "description": "A Model Context Protocol (MCP) server implementation that provides AI models with access to Typesense search capabilities. This server enables LLMs to discover, search, and analyze data stored in Typesense collections.",
    "repository": {
      "url": "https://github.com/suhail-ak-s/mcp-typesense-server",
      "source": "github",
      "stars": 12,
      "lastUpdated": "2025-07-28T09:56:35Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "typesense",
    "serverConfig": {
      "type": "stdio",
      "command": "npx",
      "args": [
        "-y",
        "typesense-mcp-server",
        "--host",
        "your-typesense-host",
        "--port",
        "8108",
        "--protocol",
        "http",
        "--api-key",
        "your-api-key"
      ]
    }
  },
  {
    "id": "uniswap-poolspy-mcp:a27e6932",
    "icon": null,
    "name": "uniswap-poolspy-mcp",
    "description": "An MCP server that tracks newly created liquidity pools on Uniswap across nine blockchain networks.",
    "repository": {
      "url": "https://github.com/kukapay/uniswap-poolspy-mcp",
      "source": "github",
      "stars": 5,
      "lastUpdated": "2025-07-17T18:12:10Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "uniswap-poolspy-mcp",
    "serverConfig": {
      "type": "stdio",
      "command": "uv",
      "args": [
        "--directory",
        "path/to/uniswap-poolspy-mcp",
        "run",
        "main.py"
      ],
      "env": {
        "THEGRAPH_API_KEY": "your api key from The Graph"
      }
    }
  },
  {
    "id": "uniswap-trader-mcp:aff48f92",
    "icon": null,
    "name": "uniswap-trader-mcp",
    "description": "An MCP server for AI agents to automate token swaps on Uniswap DEX across multiple blockchains.",
    "repository": {
      "url": "https://github.com/kukapay/uniswap-trader-mcp",
      "source": "github",
      "stars": 27,
      "lastUpdated": "2025-08-06T23:08:48Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "uniswap-trader-mcp",
    "serverConfig": {
      "type": "stdio",
      "command": "node",
      "args": [
        "path/to/uniswap-trader-mcp/server/index.js"
      ],
      "env": {
        "INFURA_KEY": "your infura key",
        "WALLET_PRIVATE_KEY": "your private key"
      }
    }
  },
  {
    "id": "unity-catalog:f4bf851c",
    "icon": null,
    "name": "Unity Catalog",
    "description": "An MCP server that enables LLMs to interact with Unity Catalog AI, supporting CRUD operations on Unity Catalog Functions and executing them as MCP tools.",
    "repository": {
      "url": "https://github.com/ognis1205/mcp-server-unitycatalog",
      "source": "github",
      "stars": 15,
      "lastUpdated": "2025-08-06T07:43:19Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "unity-catalog",
    "serverConfig": {
      "type": "stdio",
      "command": "docker",
      "args": [
        "run",
        "--rm",
        "-i",
        "mcp/unitycatalog",
        "--uc_server",
        "<your unity catalog url>",
        "--uc_catalog",
        "<your catalog name>",
        "--uc_schema",
        "<your schema name>"
      ]
    }
  },
  {
    "id": "unity-integration-advanced:65d7cfd9",
    "icon": null,
    "name": "Unity Integration (Advanced)",
    "description": "Advanced Unity3d Game Engine MCP which supports ,Execution of Any Editor Related Code Directly Inside of Unity, Fetch Logs, Get Editor State and Allow File Access of the Project making it much more useful in Script Editing or asset creation.",
    "repository": {
      "url": "https://github.com/quazaai/UnityMCPIntegration",
      "source": "github",
      "stars": 84,
      "lastUpdated": "2025-08-15T05:59:27Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "unity-integration-advanced",
    "serverConfig": {
      "type": "stdio",
      "command": "node",
      "args": [
        "path-to-project>\\Library\\PackageCache\\com.quaza.unitymcp@d2b8f1260bca\\mcpServer\\mcpServer\\build\\index.js"
      ],
      "env": {
        "MCP_WEBSOCKET_PORT": "5010"
      }
    }
  },
  {
    "id": "unity3d-game-engine:3e7f0193",
    "icon": null,
    "name": "Unity3d Game Engine",
    "description": "An MCP server that enables LLMs to interact with Unity3d Game Engine, supporting access to a variety of the Unit's Editor engine tools (e.g. Console Logs, Test Runner logs, Editor functions, hierarchy state, etc) and executing them as MCP tools or gather them as resources.",
    "repository": {
      "url": "https://github.com/CoderGamester/mcp-unity",
      "source": "github",
      "stars": 899,
      "lastUpdated": "2025-08-16T07:43:58Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "unity3d-game-engine",
    "serverConfig": {
      "type": "stdio",
      "command": "node",
      "args": [
        "ABSOLUTE/PATH/TO/mcp-unity/Server~/build/index.js"
      ]
    }
  },
  {
    "id": "universal-mcp-servers:40a42253",
    "icon": null,
    "name": "Universal MCP Servers",
    "description": "A collection of MCP servers created using the AgentR Universal MCP SDK.",
    "repository": {
      "url": "https://github.com/universal-mcp",
      "source": "github"
    },
    "tags": [
      "community"
    ]
  },
  {
    "id": "unleash-integration-feature-toggle:69dd7f47",
    "icon": null,
    "name": "Unleash Integration (Feature Toggle)",
    "description": "A Model Context Protocol (MCP) server implementation that integrates with Unleash Feature Toggle system. Provide a bridge between LLM applications and Unleash feature flag system",
    "repository": {
      "url": "https://github.com/cuongtl1992/unleash-mcp",
      "source": "github",
      "stars": 10,
      "lastUpdated": "2025-08-12T15:31:25Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "unleash-integration-feature-toggle",
    "serverConfig": {
      "type": "stdio",
      "command": "npx",
      "args": [
        "-y",
        "unleash-mcp"
      ],
      "env": {
        "UNLEASH_URL": "YOUR_UNLEASH_END_POINT",
        "UNLEASH_API_TOKEN": "YOUR_UNLEASH_API_TOKEN",
        "MCP_TRANSPORT": "stdio",
        "MCP_HTTP_PORT": 3001
      }
    }
  },
  {
    "id": "upbit-mcp-server:8f756e07",
    "icon": null,
    "name": "Upbit MCP Server",
    "description": "",
    "repository": {
      "url": "https://github.com/solangii/upbit-mcp-server",
      "source": "github",
      "stars": 13,
      "lastUpdated": "2025-08-17T02:46:47Z"
    },
    "tags": [
      "community"
    ]
  },
  {
    "id": "use-aws-mcp:d92f8fb1",
    "icon": null,
    "name": "use_aws_mcp",
    "description": "amazon-q-cli's use_aws tool extracted into independent mcp, for general aws api usage.",
    "repository": {
      "url": "https://github.com/runjivu/use_aws_mcp",
      "source": "github",
      "stars": 1,
      "lastUpdated": "2025-06-27T17:02:53Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "use-aws-mcp",
    "serverConfig": {
      "type": "stdio",
      "command": "use_aws_mcp",
      "env": {}
    }
  },
  {
    "id": "user-feedback:355c1aa5",
    "icon": null,
    "name": "User Feedback",
    "description": "Simple MCP Server to enable a human-in-the-loop workflow in tools like Cline and Cursor.",
    "repository": {
      "url": "https://github.com/mrexodia/user-feedback-mcp",
      "source": "github",
      "stars": 45,
      "lastUpdated": "2025-08-15T16:40:09Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "user-feedback",
    "serverConfig": {
      "type": "stdio",
      "command": "uv",
      "args": [
        "--directory",
        "c:\\MCP\\user-feedback-mcp",
        "run",
        "server.py"
      ]
    }
  },
  {
    "id": "uspto:070ec4be",
    "icon": null,
    "name": "USPTO",
    "description": "MCP server for accessing United States Patent & Trademark Office data through its Open Data Protocol (ODP) API.",
    "repository": {
      "url": "https://github.com/riemannzeta/patent_mcp_server",
      "source": "github",
      "stars": 16,
      "lastUpdated": "2025-08-04T13:26:11Z"
    },
    "tags": [
      "community"
    ]
  },
  {
    "id": "vectara:959a23d6",
    "icon": null,
    "name": "Vectara",
    "description": "Query Vectara's trusted RAG-as-a-service platform.",
    "repository": {
      "url": "https://github.com/vectara/vectara-mcp",
      "source": "github",
      "stars": 19,
      "lastUpdated": "2025-08-09T03:22:23Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "vectara",
    "serverConfig": {
      "type": "stdio",
      "command": "uv",
      "args": [
        "tool",
        "run",
        "vectara-mcp"
      ]
    }
  },
  {
    "id": "vega-lite:eb363e2f",
    "icon": null,
    "name": "Vega-Lite",
    "description": "Generate visualizations from fetched data using the VegaLite format and renderer.",
    "repository": {
      "url": "https://github.com/isaacwasserman/mcp-vegalite-server",
      "source": "github",
      "stars": 84,
      "lastUpdated": "2025-08-09T07:46:02Z"
    },
    "tags": [
      "community"
    ]
  },
  {
    "id": "vertica:c2a77788",
    "icon": null,
    "name": "Vertica",
    "description": "Vertica database integration in Python with configurable access controls and schema inspection",
    "repository": {
      "url": "https://github.com/nolleh/mcp-vertica",
      "source": "github",
      "stars": 0,
      "lastUpdated": "2025-08-05T00:27:51Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "vertica",
    "serverConfig": {
      "type": "stdio",
      "command": "uvx",
      "args": [
        "mcp-vertica"
      ],
      "env": {
        "VERTICA_HOST": "localhost",
        "VERTICA_PORT": 5433,
        "VERTICA_DATABASE": "VMart",
        "VERTICA_USER": "dbadmin",
        "VERTICA_PASSWORD": "test_password",
        "VERTICA_CONNECTION_LIMIT": 10,
        "VERTICA_SSL": false,
        "VERTICA_SSL_REJECT_UNAUTHORIZED": true
      }
    }
  },
  {
    "id": "vibe-check:e79addec",
    "icon": null,
    "name": "Vibe Check",
    "description": "An MCP server leveraging an external oversight layer to \"vibe check\" agents, and also self-improve accuracy & user alignment over time. Prevents scope creep, code bloat, misalignment, misinterpretation, tunnel vision, and overcomplication.",
    "repository": {
      "url": "https://github.com/PV-Bhat/vibe-check-mcp-server",
      "source": "github",
      "stars": 130,
      "lastUpdated": "2025-08-15T05:08:11Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "vibe-check",
    "serverConfig": {
      "type": "stdio",
      "command": "node",
      "args": [
        "/path/to/vibe-check-mcp/build/index.js"
      ],
      "env": {
        "GEMINI_API_KEY": "YOUR_GEMINI_API_KEY"
      }
    }
  },
  {
    "id": "video-editor:0010357c",
    "icon": null,
    "name": "Video Editor",
    "description": "A Model Context Protocol Server to add, edit, and search videos with Video Jungle.",
    "repository": {
      "url": "https://github.com/burningion/video-editing-mcp",
      "source": "github",
      "stars": 202,
      "lastUpdated": "2025-08-15T17:36:19Z"
    },
    "tags": [
      "community"
    ]
  },
  {
    "id": "video-still-capture:72a94aa9",
    "icon": null,
    "name": "Video Still Capture",
    "description": "📷 Capture video stills from an OpenCV-compatible webcam or other video source.",
    "repository": {
      "url": "https://github.com/13rac1/videocapture-mcp",
      "source": "github",
      "stars": 10,
      "lastUpdated": "2025-08-15T06:43:17Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "video-still-capture",
    "serverConfig": {
      "type": "stdio",
      "command": "uv",
      "args": [
        "run",
        "--with",
        "mcp[cli]",
        "--with",
        "numpy",
        "--with",
        "opencv-python",
        "mcp",
        "run",
        "/ABSOLUTE_PATH/videocapture_mcp.py"
      ]
    }
  },
  {
    "id": "virtual-location-google-street-view-etc:28afc9d9",
    "icon": null,
    "name": "Virtual location (Google Street View,etc.)",
    "description": "Integrates Google Map, Google Street View, PixAI, Stability.ai, ComfyUI API and Bluesky to provide a virtual location simulation in LLM (written in Effect.ts)",
    "repository": {
      "url": "https://github.com/mfukushim/map-traveler-mcp",
      "source": "github",
      "stars": 18,
      "lastUpdated": "2025-08-11T08:44:36Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "virtual-location-google-street-view-etc",
    "serverConfig": {
      "type": "stdio",
      "command": "npx",
      "args": [
        "-y",
        "@mfukushim/map-traveler-mcp"
      ],
      "env": {
        "MT_GOOGLE_MAP_KEY": "(Google Map API key)",
        "MT_MAP_API_URL": "(Optional: Map API custom endpoint. Example: direction=https://xxxx,places=https://yyyy )",
        "MT_TIME_SCALE": "(Optional:Scale of travel time on real roads duration. default 4)",
        "MT_SQLITE_PATH": "(db save path: e.g. %USERPROFILE%/Desktop/traveler.sqlite ,$HOME/traveler.sqlite )",
        "MT_TURSO_URL": "(Turso sqlite API URL)",
        "MT_TURSO_TOKEN": "(Turso sqlite API access token)",
        "MT_REMBG_PATH": "(absolute path of the installed rembg cli)",
        "MT_REMBG_URL": "(rembg API URL)",
        "MT_REMBG_WO_KEY": "(withoutbg.com rembg API key)",
        "MT_PIXAI_KEY": "(pixAi API key)",
        "MT_SD_KEY": "(or Stability.ai image generation API key",
        "MT_PIXAI_MODEL_ID": "(Optional: pixAi ModelId, if not set use default model 1648918127446573124 ",
        "MT_COMFY_URL": "(Option: Generate image using ComfyUI API at specified URL. Example: http://192.168.1.100:8188)",
        "MT_COMFY_WORKFLOW_T2I": "(Optional: Path to API workflow file when using text to image with ComfyUI. If not specified: assets/comfy/t2i_sample.json)",
        "MT_COMFY_WORKFLOW_I2I": "(Optional: Path of API workflow file when image to image in ComfyUI. If not specified: assets/comfy/i2i_sample.json)",
        "MT_COMFY_PARAMS": "(Optional: Variable values to send to the workflow via comfyUI API)",
        "MT_FIXED_MODEL_PROMPT": "(Optional: Fixed avatar generation prompt. You will no longer be able to change your avatar during conversations.)",
        "MT_BODY_AREA_RATIO": "(Optional: Acceptable avatar image area ratio. default 0.042)",
        "MT_BODY_HW_RATIO": "(Optional: Acceptable avatar image aspect ratios. default 1.5~2.3)",
        "MT_BODY_WINDOW_RATIO_W": "(Optional: Avatar composite window horizontal ratio. default 0.5)",
        "MT_BODY_WINDOW_RATIO_H": "(Optional: Avatar composite window aspect ratio. default 0.75)",
        "MT_BS_ID": "(Bluesky sns registration address)",
        "MT_BS_PASS": "(bluesky sns password)",
        "MT_BS_HANDLE": "(bluesky sns handle name: e.g. xxxxxxxx.bsky.social )",
        "MT_FILTER_TOOLS": "(Optional: Directly filter the tools to be used. All are available if not specified. e.g. tips,set_traveler_location)",
        "MT_MOVE_MODE": "(Option: Specify whether the movement mode is realtime or skip. default realtime)",
        "MT_IMAGE_WIDTH": "(Option: Output image width (pixels) Default is 512)",
        "MT_NO_IMAGE": "(Options: true = do not output image, not specified = output image if possible, default is not specified)",
        "MT_NO_AVATAR": "(Option: true = Output StreetView image as is without avatar superimposition. Not specified = Superimpose avatar image. Default is not specified.)",
        "MT_FEED_TAG": "(Optional: Specify the feed tag when posting to SNS (#required, 15 characters or more) Default is #geo_less_traveler)"
      }
    }
  },
  {
    "id": "vmware-fusion:b2b3dfa0",
    "icon": null,
    "name": "VMware Fusion",
    "description": "Manage VMware Fusion virtual machines via the Fusion REST API.",
    "repository": {
      "url": "https://github.com/yeahdongcn/vmware-fusion-mcp-server",
      "source": "github",
      "stars": 5,
      "lastUpdated": "2025-08-14T14:18:34Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "vmware-fusion",
    "serverConfig": {
      "type": "stdio",
      "command": "uvx",
      "args": [
        "vmware-fusion-mcp-server"
      ],
      "env": {
        "VMREST_USER": "your-username",
        "VMREST_PASS": "your-password"
      }
    }
  },
  {
    "id": "voice-mcp:78144dab",
    "icon": null,
    "name": "Voice MCP",
    "description": "Enable voice conversations with Claude using any OpenAI-compatible STT/TTS service (voice-mcp.com)",
    "repository": {
      "url": "https://github.com/mbailey/voice-mcp",
      "source": "github",
      "stars": 201,
      "lastUpdated": "2025-08-17T00:33:31Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "voice-mcp",
    "serverConfig": {
      "type": "stdio",
      "command": "uvx",
      "args": [
        "voice-mode"
      ],
      "env": {
        "OPENAI_API_KEY": "your-openai-key"
      }
    }
  },
  {
    "id": "voice-status-report:b08be1a4",
    "icon": null,
    "name": "Voice Status Report",
    "description": "An MCP server that provides voice status updates using OpenAI's text-to-speech API, to be used with Cursor or Claude Code.",
    "repository": {
      "url": "https://github.com/tomekkorbak/voice-status-report-mcp-server",
      "source": "github",
      "stars": 7,
      "lastUpdated": "2025-07-28T02:01:23Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "voice-status-report",
    "serverConfig": {
      "type": "stdio",
      "command": "uvx",
      "args": [
        "voice-status-report-mcp-server"
      ],
      "env": {
        "OPENAI_API_KEY": "YOUR_OPENAI_API_KEY"
      }
    }
  },
  {
    "id": "volcengine-tos:66c9235c",
    "icon": null,
    "name": "VolcEngine TOS",
    "description": "A sample MCP server for VolcEngine TOS that flexibly get objects from TOS.",
    "repository": {
      "url": "https://github.com/dinghuazhou/sample-mcp-server-tos",
      "source": "github",
      "stars": 2,
      "lastUpdated": "2025-05-20T12:13:42Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "volcengine-tos",
    "serverConfig": {
      "type": "stdio",
      "command": "uvx",
      "args": [
        "--from",
        "git+https://github.com/volcengine/mcp-server#subdirectory=server/mcp_server_tos",
        "mcp-server-tos"
      ],
      "env": {
        "VOLCENGINE_ACCESS_KEY": "your access-key-id",
        "VOLCENGINE_SECRET_KEY": "your access-key-secret",
        "VOLCENGINE_REGION": "tos region",
        "TOS_ENDPOINT": "tos endpoint",
        "SECURITY_TOKEN": "your security token",
        "TOS_BUCKET": "your specific bucket"
      }
    }
  },
  {
    "id": "voyp:4a63c26b",
    "icon": null,
    "name": "Voyp",
    "description": "VOYP MCP server for making calls using Artificial Intelligence.",
    "repository": {
      "url": "https://github.com/paulotaylor/voyp-mcp",
      "source": "github",
      "stars": 8,
      "lastUpdated": "2025-07-17T19:45:10Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "voyp",
    "serverConfig": {
      "type": "stdio",
      "command": "npx",
      "args": [
        "-y",
        "voyp-mcp"
      ],
      "env": {
        "VOYP_API_KEY": "your-VOYP-api-key"
      }
    }
  },
  {
    "id": "vulnicheck:fb1f39ef",
    "icon": null,
    "name": "vulnicheck",
    "description": "Real-time Python package vulnerability scanner that checks dependencies against OSV and NVD databases, providing comprehensive security analysis with CVE details, lock file support, and actionable upgrade recommendations.",
    "repository": {
      "url": "https://github.com/andrasfe/vulnicheck",
      "source": "github",
      "stars": 5,
      "lastUpdated": "2025-08-15T08:38:36Z"
    },
    "tags": [
      "community"
    ]
  },
  {
    "id": "wanaku-mcp-router:0c101a0a",
    "icon": null,
    "name": "Wanaku MCP Router",
    "description": "The Wanaku MCP Router is a SSE-based MCP server that provides an extensible routing engine that allows integrating your enterprise systems with AI agents.",
    "repository": {
      "url": "https://github.com/wanaku-ai/wanaku/",
      "source": "github",
      "stars": 80,
      "lastUpdated": "2025-08-12T14:54:02Z"
    },
    "tags": [
      "community"
    ]
  },
  {
    "id": "weather-mcp-server:bf1abe25",
    "icon": null,
    "name": "weather-mcp-server",
    "description": "Get real-time weather data for any location using weatherapi.",
    "repository": {
      "url": "https://github.com/devilcoder01/weather-mcp-server",
      "source": "github",
      "stars": 13,
      "lastUpdated": "2025-08-06T00:55:41Z"
    },
    "tags": [
      "community"
    ]
  },
  {
    "id": "web-search-mcp:0af93093",
    "icon": null,
    "name": "Web Search MCP",
    "description": "A server that provides full web search, summaries and page extration for use with Local LLMs.",
    "repository": {
      "url": "https://github.com/mrkrsl/web-search-mcp",
      "source": "github",
      "stars": 73,
      "lastUpdated": "2025-08-17T01:16:40Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "web-search-mcp",
    "serverConfig": {
      "type": "stdio",
      "command": "node",
      "args": [
        "/path/to/extracted/web-search-mcp/dist/index.js"
      ]
    }
  },
  {
    "id": "webex:4f7d5c32",
    "icon": null,
    "name": "Webex",
    "description": "A Model Context Protocol (MCP) server that provides AI assistants with comprehensive access to Cisco Webex messaging capabilities.",
    "repository": {
      "url": "https://github.com/Kashyap-AI-ML-Solutions/webex-messaging-mcp-server",
      "source": "github",
      "stars": 4,
      "lastUpdated": "2025-08-08T00:36:32Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "webex",
    "serverConfig": {
      "type": "stdio",
      "command": "docker",
      "args": [
        "run",
        "-i",
        "--rm",
        "-e",
        "WEBEX_PUBLIC_WORKSPACE_API_KEY",
        "-e",
        "WEBEX_USER_EMAIL",
        "-e",
        "WEBEX_API_BASE_URL",
        "webex-mcp-server"
      ],
      "env": {
        "WEBEX_USER_EMAIL": "your.email@company.com",
        "WEBEX_API_BASE_URL": "https://webexapis.com/v1",
        "WEBEX_PUBLIC_WORKSPACE_API_KEY": "your_token_here"
      }
    }
  },
  {
    "id": "webflow:6efe8847",
    "icon": null,
    "name": "Webflow",
    "description": "Interact with the Webflow APIs",
    "repository": {
      "url": "https://github.com/kapilduraphe/webflow-mcp-server",
      "source": "github",
      "stars": 20,
      "lastUpdated": "2025-07-26T16:02:14Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "webflow",
    "serverConfig": {
      "type": "stdio",
      "command": "node",
      "args": [
        "/ABSOLUTE/PATH/TO/YOUR/build/index.js"
      ],
      "env": {
        "WEBFLOW_API_TOKEN": "your-api-token"
      }
    }
  },
  {
    "id": "webhook-mcp:559aab34",
    "icon": null,
    "name": "webhook-mcp",
    "description": "",
    "repository": {
      "url": "https://github.com/noobnooc/webhook-mcp",
      "source": "github",
      "stars": 1,
      "lastUpdated": "2025-06-23T16:23:28Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "webhook-mcp",
    "serverConfig": {
      "type": "stdio",
      "command": "npx",
      "args": [
        "-y",
        "webhook-mcp"
      ],
      "env": {
        "WEBHOOK_URL": "your-webhook-url-here"
      }
    }
  },
  {
    "id": "whale-tracker-mcp:2b3d4c5d",
    "icon": null,
    "name": "whale-tracker-mcp",
    "description": "A mcp server for tracking cryptocurrency whale transactions.",
    "repository": {
      "url": "https://github.com/kukapay/whale-tracker-mcp",
      "source": "github",
      "stars": 37,
      "lastUpdated": "2025-08-14T13:52:57Z"
    },
    "tags": [
      "community"
    ]
  },
  {
    "id": "whatsapp-mcp-server:8e4a584f",
    "icon": null,
    "name": "WhatsApp MCP Server",
    "description": "MCP server for your personal WhatsApp handling individuals, groups, searching and sending.",
    "repository": {
      "url": "https://github.com/lharries/whatsapp-mcp",
      "source": "github",
      "stars": 4701,
      "lastUpdated": "2025-08-17T01:05:05Z"
    },
    "tags": [
      "community"
    ]
  },
  {
    "id": "whois-mcp:555e001f",
    "icon": null,
    "name": "Whois MCP",
    "description": "MCP server that performs whois lookup against domain, IP, ASN and TLD.",
    "repository": {
      "url": "https://github.com/bharathvaj-ganesan/whois-mcp",
      "source": "github",
      "stars": 37,
      "lastUpdated": "2025-08-06T22:15:36Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "whois-mcp",
    "serverConfig": {
      "type": "stdio",
      "command": "npx",
      "args": [
        "-y",
        "@bharathvaj/whois-mcp@latest"
      ]
    }
  },
  {
    "id": "wikidata-mcp:111099cb",
    "icon": null,
    "name": "Wikidata MCP",
    "description": "Wikidata MCP server that interact with Wikidata, by searching identifiers, extracting metadata, and executing sparql query.",
    "repository": {
      "url": "https://github.com/zzaebok/mcp-wikidata",
      "source": "github",
      "stars": 23,
      "lastUpdated": "2025-08-14T22:56:13Z"
    },
    "tags": [
      "community"
    ]
  },
  {
    "id": "wikipedia-mcp:04591704",
    "icon": null,
    "name": "Wikipedia MCP",
    "description": "Access and search Wikipedia articles via MCP for AI-powered information retrieval.",
    "repository": {
      "url": "https://github.com/Rudra-ravi/wikipedia-mcp",
      "source": "github",
      "stars": 84,
      "lastUpdated": "2025-08-14T03:33:18Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "wikipedia-mcp",
    "serverConfig": {
      "type": "stdio",
      "command": "wikipedia-mcp"
    }
  },
  {
    "id": "wildfly-mcp:bb4be69b",
    "icon": null,
    "name": "WildFly MCP",
    "description": "WildFly MCP server that enables LLM to interact with running WildFly servers (retrieve metrics, logs, invoke operations, ...).",
    "repository": {
      "url": "https://github.com/wildfly-extras/wildfly-mcp",
      "source": "github",
      "stars": 6,
      "lastUpdated": "2025-07-24T08:45:22Z"
    },
    "tags": [
      "community"
    ]
  },
  {
    "id": "windows-cli:d4451653",
    "icon": null,
    "name": "Windows CLI",
    "description": "MCP server for secure command-line interactions on Windows systems, enabling controlled access to PowerShell, CMD, and Git Bash shells.",
    "repository": {
      "url": "https://github.com/SimonB97/win-cli-mcp-server",
      "source": "github",
      "stars": 238,
      "lastUpdated": "2025-08-15T11:07:20Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "windows-cli",
    "serverConfig": {
      "type": "stdio",
      "command": "npx",
      "args": [
        "-y",
        "@simonb97/server-win-cli"
      ]
    }
  },
  {
    "id": "windsor:1397cae7",
    "icon": null,
    "name": "Windsor",
    "description": "Windsor MCP (Model Context Protocol) enables your LLM to query, explore, and analyze your full-stack business data integrated into Windsor.ai with zero SQL writing or custom scripting.",
    "repository": {
      "url": "https://github.com/windsor-ai/windsor_mcp",
      "source": "github",
      "stars": 0,
      "lastUpdated": "2025-07-30T16:33:46Z"
    },
    "tags": [
      "community"
    ]
  },
  {
    "id": "wordpress-mcp:29ae63aa",
    "icon": null,
    "name": "WordPress MCP",
    "description": "Make your WordPress site into a simple MCP server, exposing functionality to LLMs and AI agents.",
    "repository": {
      "url": "https://github.com/Automattic/wordpress-mcp",
      "source": "github",
      "stars": 495,
      "lastUpdated": "2025-08-16T21:35:40Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "wordpress-mcp",
    "serverConfig": {
      "type": "stdio",
      "command": "npx",
      "args": [
        "-y",
        "@automattic/mcp-wordpress-remote@latest"
      ],
      "env": {
        "WP_API_URL": "https://your-site.com/",
        "JWT_TOKEN": "your-jwt-token-here",
        "LOG_FILE": "optional-path-to-log-file"
      }
    }
  },
  {
    "id": "workflowy:f3e6c5a3",
    "icon": null,
    "name": "Workflowy",
    "description": "A server that interacts with workflowy.",
    "repository": {
      "url": "https://github.com/danield137/mcp-workflowy",
      "source": "github",
      "stars": 8,
      "lastUpdated": "2025-08-16T06:10:29Z"
    },
    "tags": [
      "community"
    ]
  },
  {
    "id": "world-bank-data-api:0e0ca8a3",
    "icon": null,
    "name": "World Bank data API",
    "description": "A server that fetches data indicators available with the World Bank as part of their data API",
    "repository": {
      "url": "https://github.com/anshumax/world_bank_mcp_server",
      "source": "github",
      "stars": 37,
      "lastUpdated": "2025-08-04T04:55:55Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "world-bank-data-api",
    "serverConfig": {
      "type": "stdio",
      "command": "uv",
      "args": [
        "--directory",
        "path/to/world_bank_mcp_server",
        "run",
        "world_bank_mcp_server"
      ]
    }
  },
  {
    "id": "wren-engine:066a0688",
    "icon": null,
    "name": "Wren Engine",
    "description": "The Semantic Engine for Model Context Protocol(MCP) Clients and AI Agents",
    "repository": {
      "url": "https://github.com/Canner/wren-engine",
      "source": "github",
      "stars": 412,
      "lastUpdated": "2025-08-16T12:09:45Z"
    },
    "tags": [
      "community"
    ]
  },
  {
    "id": "x-twitter:ca58de6f",
    "icon": null,
    "name": "X (Twitter)",
    "description": "",
    "repository": {
      "url": "https://github.com/EnesCinr/twitter-mcp",
      "source": "github",
      "stars": 274,
      "lastUpdated": "2025-08-16T10:28:42Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "x-twitter",
    "serverConfig": {
      "type": "stdio",
      "command": "npx",
      "args": [
        "-y",
        "@enescinar/twitter-mcp"
      ],
      "env": {
        "API_KEY": "your_api_key_here",
        "API_SECRET_KEY": "your_api_secret_key_here",
        "ACCESS_TOKEN": "your_access_token_here",
        "ACCESS_TOKEN_SECRET": "your_access_token_secret_here"
      }
    }
  },
  {
    "id": "x-twitter:7711619a",
    "icon": null,
    "name": "X (Twitter)",
    "description": "",
    "repository": {
      "url": "https://github.com/vidhupv/x-mcp",
      "source": "github",
      "stars": 60,
      "lastUpdated": "2025-08-02T09:02:08Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "x-twitter",
    "serverConfig": {
      "type": "stdio",
      "command": "uv",
      "args": [
        "--directory",
        "/path/to/x-mcp",
        "run",
        "x-mcp"
      ],
      "env": {
        "TWITTER_API_KEY": "your_api_key",
        "TWITTER_API_SECRET": "your_api_secret",
        "TWITTER_ACCESS_TOKEN": "your_access_token",
        "TWITTER_ACCESS_TOKEN_SECRET": "your_access_token_secret"
      }
    }
  },
  {
    "id": "xcode:8e401f3a",
    "icon": null,
    "name": "Xcode",
    "description": "MCP server that brings AI to your Xcode projects, enabling intelligent code assistance, file operations, project management, and automated development tasks.",
    "repository": {
      "url": "https://github.com/r-huijts/xcode-mcp-server",
      "source": "github",
      "stars": 309,
      "lastUpdated": "2025-08-16T15:49:51Z"
    },
    "tags": [
      "community"
    ]
  },
  {
    "id": "xcode-mcp-server:312c015b",
    "icon": null,
    "name": "Xcode-mcp-server",
    "description": "",
    "repository": {
      "url": "https://github.com/drewster99/xcode-mcp-server",
      "source": "github",
      "stars": 2,
      "lastUpdated": "2025-08-10T02:35:30Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "xcode-mcp-server",
    "serverConfig": {
      "type": "stdio",
      "command": "uvx",
      "args": [
        "xcode-mcp-server"
      ]
    }
  },
  {
    "id": "xcodebuild:0e64eaf0",
    "icon": null,
    "name": "xcodebuild",
    "description": "🍎 Build iOS Xcode workspace/project and feed back errors to llm.",
    "repository": {
      "url": "https://github.com/ShenghaiWang/xcodebuild",
      "source": "github",
      "stars": 72,
      "lastUpdated": "2025-08-15T20:45:51Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "xcodebuild",
    "serverConfig": {
      "type": "stdio",
      "command": "uvx",
      "args": [
        "mcpxcodebuild"
      ]
    }
  },
  {
    "id": "xero-mcp-server:fafbcd8a",
    "icon": null,
    "name": "Xero-mcp-server",
    "description": "Enabling clients to interact with Xero system for streamlined accounting, invoicing, and business operations.",
    "repository": {
      "url": "https://github.com/john-zhang-dev/xero-mcp",
      "source": "github",
      "stars": 17,
      "lastUpdated": "2025-07-14T21:07:50Z"
    },
    "tags": [
      "community"
    ]
  },
  {
    "id": "xiyan:c5d76cc2",
    "icon": null,
    "name": "XiYan",
    "description": "🗄️ An MCP server that supports fetching data from a database using natural language queries, powered by XiyanSQL as the text-to-SQL LLM.",
    "repository": {
      "url": "https://github.com/XGenerationLab/xiyan_mcp_server",
      "source": "github",
      "stars": 194,
      "lastUpdated": "2025-08-10T21:45:21Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "xiyan",
    "serverConfig": {
      "type": "stdio",
      "command": "/xxx/python",
      "args": [
        "-m",
        "xiyan_mcp_server"
      ],
      "env": {
        "YML": "PATH/TO/YML"
      }
    }
  },
  {
    "id": "xmind:80a440b2",
    "icon": null,
    "name": "XMind",
    "description": "Read and search through your XMind directory containing XMind files.",
    "repository": {
      "url": "https://github.com/apeyroux/mcp-xmind",
      "source": "github",
      "stars": 28,
      "lastUpdated": "2025-08-11T06:57:25Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "xmind",
    "serverConfig": {
      "type": "stdio",
      "command": "npx",
      "args": [
        "-y",
        "@41px/mcp-xmind",
        "/Users/alex/XMind"
      ]
    }
  },
  {
    "id": "yahoo-finance:ad605959",
    "icon": null,
    "name": "Yahoo Finance",
    "description": "📈 Lets your AI interact with Yahoo Finance to get comprehensive stock market data, news, financials, and more. Proxy supported.",
    "repository": {
      "url": "https://github.com/AgentX-ai/yahoo-finance-server",
      "source": "github",
      "stars": 0,
      "lastUpdated": "2025-07-22T19:55:03Z"
    },
    "tags": [
      "community"
    ]
  },
  {
    "id": "yfinance:ae757b2a",
    "icon": null,
    "name": "yfinance",
    "description": "💹The MCP YFinance Stock Server provides real-time and historical stock data in a standard format, powering dashboards, AI agents,and research tools with seamless financial insights.",
    "repository": {
      "url": "https://github.com/Adity-star/mcp-yfinance-server",
      "source": "github",
      "stars": 22,
      "lastUpdated": "2025-08-10T16:13:02Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "yfinance",
    "serverConfig": {
      "type": "stdio",
      "command": "uv",
      "args": [
        "--directory",
        "/ABSOLUTE/PATH/TO/YOUR/mcp-yfinance-server",
        "run",
        "main.py"
      ]
    }
  },
  {
    "id": "ynab:99ef3a83",
    "icon": null,
    "name": "YNAB",
    "description": "A Model Context Protocol (MCP) server for integrating with YNAB (You Need A Budget), allowing AI assistants to securely access and analyze your financial data.",
    "repository": {
      "url": "https://github.com/ChuckBryan/ynabmcpserver",
      "source": "github",
      "stars": 9,
      "lastUpdated": "2025-07-25T17:52:39Z"
    },
    "tags": [
      "community"
    ]
  },
  {
    "id": "youtrack:84305876",
    "icon": null,
    "name": "YouTrack",
    "description": "A Model Context Protocol (MCP) server implementation for JetBrains YouTrack, allowing AI assistants to interact with YouTrack issue tracking system.",
    "repository": {
      "url": "https://github.com/tonyzorin/youtrack-mcp",
      "source": "github",
      "stars": 50,
      "lastUpdated": "2025-08-14T22:15:58Z"
    },
    "tags": [
      "community"
    ]
  },
  {
    "id": "youtube:8a177fa1",
    "icon": null,
    "name": "YouTube",
    "description": "Extract Youtube video information (with proxies support).",
    "repository": {
      "url": "https://github.com/Klavis-AI/klavis/tree/main/mcp_servers/youtube",
      "source": "github",
      "stars": 3955,
      "lastUpdated": "2025-08-17T02:22:39Z"
    },
    "tags": [
      "community"
    ]
  },
  {
    "id": "youtube:f4d44461",
    "icon": null,
    "name": "YouTube",
    "description": "Comprehensive YouTube API integration for video management, Shorts creation, and analytics.",
    "repository": {
      "url": "https://github.com/ZubeidHendricks/youtube-mcp-server",
      "source": "github",
      "stars": 309,
      "lastUpdated": "2025-08-17T01:14:50Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "youtube",
    "serverConfig": {
      "type": "stdio",
      "command": "npx",
      "args": [
        "-y",
        "zubeid-youtube-mcp-server"
      ],
      "env": {
        "YOUTUBE_API_KEY": "your_youtube_api_key_here"
      }
    }
  },
  {
    "id": "youtube-dlp:5389f25b",
    "icon": null,
    "name": "YouTube DLP",
    "description": "Retrieve video information, subtitles, and top comments with proxies.",
    "repository": {
      "url": "https://github.com/AgentX-ai/youtube-dlp-server",
      "source": "github",
      "stars": 1,
      "lastUpdated": "2025-08-12T23:29:32Z"
    },
    "tags": [
      "community"
    ]
  },
  {
    "id": "youtube-uploader-mcp:d464ae19",
    "icon": null,
    "name": "Youtube Uploader MCP",
    "description": "AI‑powered YouTube uploader—no CLI, no YouTube Studio.",
    "repository": {
      "url": "https://github.com/anwerj/youtube-uploader-mcp",
      "source": "github",
      "stars": 18,
      "lastUpdated": "2025-08-17T01:14:08Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "youtube-uploader-mcp",
    "serverConfig": {
      "type": "stdio",
      "command": "/absolute/path/to/youtube-uploader-mcp-<os>-<arch>",
      "args": [
        "-client_secret_file",
        "/absolute/path/to/client_secret.json(See Below)"
      ]
    }
  },
  {
    "id": "youtube-video-summarizer:5851faad",
    "icon": null,
    "name": "YouTube Video Summarizer",
    "description": "Summarize lengthy youtube videos.",
    "repository": {
      "url": "https://github.com/nabid-pf/youtube-video-summarizer-mcp",
      "source": "github",
      "stars": 31,
      "lastUpdated": "2025-08-17T01:13:49Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "youtube-video-summarizer",
    "serverConfig": {
      "type": "stdio",
      "command": "npx",
      "args": [
        "-y",
        "youtube-video-summarizer-mcp"
      ]
    }
  },
  {
    "id": "yutu:e201d542",
    "icon": null,
    "name": "yutu",
    "description": "A fully functional MCP server and CLI for YouTube to automate YouTube operation.",
    "repository": {
      "url": "https://github.com/eat-pray-ai/yutu",
      "source": "github",
      "stars": 200,
      "lastUpdated": "2025-08-16T16:59:26Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "yutu",
    "serverConfig": {
      "type": "stdio",
      "command": "yutu",
      "args": [
        "mcp"
      ],
      "env": {
        "YUTU_CREDENTIAL": "/absolute/path/to/client_secret.json",
        "YUTU_CACHE_TOKEN": "/absolute/path/to/youtube.token.json"
      }
    }
  },
  {
    "id": "zapcap:2864d925",
    "icon": null,
    "name": "ZapCap",
    "description": "MCP server for ZapCap API providing video caption and B-roll generation via natural language",
    "repository": {
      "url": "https://github.com/bogdan01m/zapcap-mcp-server",
      "source": "github",
      "stars": 0,
      "lastUpdated": "2025-07-27T22:01:06Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "zapcap",
    "serverConfig": {
      "type": "stdio",
      "command": "uvx",
      "args": [
        "zapcap-mcp-server"
      ],
      "env": {
        "ZAPCAP_API_KEY": "your_api_key_here"
      }
    }
  },
  {
    "id": "zoom:301b9172",
    "icon": null,
    "name": "Zoom",
    "description": "Create, update, read and delete your zoom meetings.",
    "repository": {
      "url": "https://github.com/Prathamesh0901/zoom-mcp-server/tree/main",
      "source": "github",
      "stars": 5,
      "lastUpdated": "2025-07-20T15:32:10Z"
    },
    "tags": [
      "community"
    ],
    "serverName": "zoom",
    "serverConfig": {
      "type": "stdio",
      "command": "npx",
      "args": [
        "-y",
        "@prathamesh0901/zoom-mcp-server"
      ],
      "env": {
        "ZOOM_ACCOUNT_ID": "Your Zoom Account ID",
        "ZOOM_CLIENT_ID": "Your Zoom Client ID",
        "ZOOM_CLIENT_SECRET": "Your Zoom Client Secret"
      }
    }
  }
]